<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴小龙同學</title>
  <subtitle>党要我帅，我不得不帅！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wuxiaolong.me/"/>
  <updated>2016-12-24T03:34:08.599Z</updated>
  <id>http://wuxiaolong.me/</id>
  
  <author>
    <name>吴小龙同學</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2016年博客汇总</title>
    <link href="http://wuxiaolong.me/2016/12/31/blog2016/"/>
    <id>http://wuxiaolong.me/2016/12/31/blog2016/</id>
    <published>2016-12-31T13:03:17.000Z</published>
    <updated>2016-12-24T03:34:08.599Z</updated>
    
    <content type="html"><![CDATA[<p>2016年总共写了40篇博客，回顾一番，还是有几篇干货的，2017年再出发，勿忘初心。</p>
<p>精选如下：</p>
<h1 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a>Retrofit</h1><p><strong><a href="http://wuxiaolong.me/2016/01/15/retrofit/">Android Retrofit 2.0使用</a></strong></p>
<p>那会刚刚接触Retrofit，简单介绍了Retrofit 2.0使用。</p>
<p><strong><a href="http://wuxiaolong.me/2016/06/18/retrofits/">Android Retrofit 2.0 使用-补充篇</a></strong></p>
<p>比较全面的Retrofit总结，看完这篇，想必对Retrofit不再陌生。</p>
<a id="more"></a>
<h1 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a>RxJava</h1><p><strong><a href="http://wuxiaolong.me/2016/01/18/rxjava/">RxJava</a></strong></p>
<p>介绍了RxJava常用操作，实际开发，我对RxJava应用还很少。</p>
<p><strong><a href="http://wuxiaolong.me/2016/04/07/rxbus/">RxBus</a></strong></p>
<p>我是用它代替EventBus的。</p>
<h1 id="MVP-Retrofit-RxJava"><a href="#MVP-Retrofit-RxJava" class="headerlink" title="MVP+Retrofit+RxJava"></a>MVP+Retrofit+RxJava</h1><p><strong><a href="http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/">Android MVP+Retrofit+RxJava实践小结</a></strong></p>
<p>三者结合实践，不错的MVP学习Sample。</p>
<h1 id="经验之谈"><a href="#经验之谈" class="headerlink" title="经验之谈"></a>经验之谈</h1><p><strong><a href="http://wuxiaolong.me/2016/11/11/PersonalApp/">手把手教你做个人 app</a></strong></p>
<p>一篇绝对干货，没有服务端，没有美工完成，如何做成一款精品APP。</p>
<p><strong><a href="http://wuxiaolong.me/2016/09/07/MyAndroidLibrary/">一套完整的Android通用框架</a></strong></p>
<p>如果我们利用好这些框架，开发一个APP so easy！</p>
<p><strong><a href="http://wuxiaolong.me/2016/03/13/MyCodeHobby/">我的编码嗜好</a></strong></p>
<p>如果有个好的工具或习惯，会让你编码效率事半功倍。我的个人编码嗜好，内容包括Chrome插件、Android studio插件和快捷键使用、手机录屏软件等。</p>
<p><strong><a href="http://wuxiaolong.me/2016/08/16/AndroidstudioGuide/">Android Studio 使用小技巧</a></strong></p>
<p>介绍一些会提高工作效率可能您还不知道的Android Studio小技巧&amp;快捷键。</p>
<p><strong><a href="http://wuxiaolong.me/2016/10/08/AndroidNameSample/">关于Android命名规范</a></strong></p>
<p>最简单不过命名规范，稍微注意一下就可以了，习惯的养成真的很重要。</p>
<h1 id="Gradle-for-Android"><a href="#Gradle-for-Android" class="headerlink" title="Gradle for Android"></a>Gradle for Android</h1><p><strong><a href="http://wuxiaolong.me/2016/03/30/gradle4android1/">Gradle for Android（一）基本配置、依赖管理</a></strong></p>
<p><strong><a href="http://wuxiaolong.me/2016/03/31/gradle4android2/">Gradle for Android（二）全局设置、自定义BuildConfig、混淆</a></strong></p>
<p><strong><a href="http://wuxiaolong.me/2016/04/01/gradle4android3/">Gradle for Android（三）多渠道打包、配置签名信息</a></strong></p>
<p>系列博客涉及的知识点有：Gradle基本配置、依赖管理、全局设置、自定义BuildConfig、混淆、多渠道打包、配置签名信息、单元测试等。</p>
<h1 id="Support-Library"><a href="#Support-Library" class="headerlink" title="Support Library"></a>Support Library</h1><p><strong><a href="http://wuxiaolong.me/2016/07/12/appcompatDayNight/">Android Support Library 之 夜间模式</a></strong></p>
<p>官方夜间模式的实现。</p>
<p><strong><a href="http://wuxiaolong.me/2016/10/21/BottomNavigation/">Android Design Support Library之BottomNavigation</a></strong></p>
<p>官方实现了Material Design底部菜单。</p>
<p><strong><a href="http://wuxiaolong.me/2016/10/31/AppShortcuts/">Android App Shortcuts</a></strong></p>
<p>Android 7.1桌面显示应用程序中特定操作的快捷方式。</p>
<h1 id="项目实战"><a href="#项目实战" class="headerlink" title="项目实战"></a>项目实战</h1><p><strong><a href="http://wuxiaolong.me/2016/12/10/ItemTouchHelper/">Android ItemTouchHelper 实践</a></strong></p>
<p>实现RecyclerView拖动排序和滑动删除。</p>
<p><strong><a href="http://wuxiaolong.me/2016/02/04/RuntimePermission/">Android 6.0 RuntimePermission</a></strong></p>
<p>Android 6.0询问用户授予权限。</p>
<p><strong><a href="http://wuxiaolong.me/2016/11/22/AndroidPay/">Android 接入微信支付宝支付</a></strong></p>
<p>微信和支付宝支付接入指南。</p>
<p><strong><a href="http://wuxiaolong.me/2016/06/20/uCrop/">uCrop使用及源码浅析</a></strong></p>
<p>图片裁剪较好的开源库。</p>
<p><strong><a href="http://wuxiaolong.me/2014/11/10/Android-Photograph_Album/">Android调用系统相机和相册</a></strong></p>
<p><strong><a href="http://wuxiaolong.me/2016/05/24/Android-Photograph-Album2/">Android调用系统相机和相册-填坑篇</a></strong></p>
<p>调用系统相机和相册，挖坑、填坑。</p>
<h1 id="CustomView"><a href="#CustomView" class="headerlink" title="CustomView"></a>CustomView</h1><p><strong><a href="http://wuxiaolong.me/2016/08/20/Paint/">Android 画笔Paint</a></strong></p>
<p>了解Android Paint，一篇就够。</p>
<p><strong><a href="http://wuxiaolong.me/2016/08/27/Canvas/">Android 画布Canvas</a></strong></p>
<p>写完 Android 画笔Paint，自然少不了Canvas画布。</p>
<p><strong><a href="http://wuxiaolong.me/2016/01/01/CustomView/">Android CustomView</a></strong></p>
<p>Android 自定义View过程。</p>
<h1 id="知识学习"><a href="#知识学习" class="headerlink" title="知识学习"></a>知识学习</h1><p><strong><a href="http://wuxiaolong.me/2016/05/06/jcenter2/">Android library分享到jcenter</a></strong></p>
<p>如何上传jcenter，远程依赖library。</p>
<p><strong><a href="http://wuxiaolong.me/2016/11/29/githubGuide/">GitHub 使用</a></strong></p>
<p>公司内部普及的GitHub使用教程。</p>
<p><strong><a href="http://wuxiaolong.me/2016/10/11/markdownGuide/">Markdown常用语法</a></strong></p>
<p>分享我平时经常使用到的Markdown语法。</p>
<h1 id="XMPP开发"><a href="#XMPP开发" class="headerlink" title="XMPP开发"></a>XMPP开发</h1><p><strong><a href="http://wuxiaolong.me/2016/02/24/xmpp1/">Android基于XMPP开发（一）【openfire服务器配置】</a></strong></p>
<p><strong><a href="http://wuxiaolong.me/2016/02/25/xmpp2/">Android基于XMPP开发（二）【连接服务器】</a></strong></p>
<p><strong><a href="http://wuxiaolong.me/2016/03/01/xmpp3/">Android基于XMPP开发（三）【注册、登录、修改密码、修改头像】</a></strong></p>
<p>XMPP开发坑很深……建议使用第三方IM。</p>
<h1 id="生活纪实"><a href="#生活纪实" class="headerlink" title="生活纪实"></a>生活纪实</h1><p><strong><a href="http://wuxiaolong.me/2016/11/18/MyWorkLive/">一个平凡人的职场经历</a></strong></p>
<p>阐述下我的工作经历，希望对您有所启示。</p>
<p><strong><a href="http://wuxiaolong.me/2016/07/24/myHappyWay/">一个程序猿的幸福历程</a></strong></p>
<p>记录了恋爱到有宝宝的过程的甜与苦。</p>
<p><strong><a href="http://wuxiaolong.me/2016/10/13/913/">9月13日</a></strong></p>
<p>我的生日一些感悟。</p>
<p><strong><a href="http://wuxiaolong.me/2016/04/05/zhuangbi/">不忘初心，方得始终</a></strong></p>
<p>多年后，我竟成了自己曾经讨厌的那种人。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2016年总共写了40篇博客，回顾一番，还是有几篇干货的，2017年再出发，勿忘初心。&lt;/p&gt;
&lt;p&gt;精选如下：&lt;/p&gt;
&lt;h1 id=&quot;Retrofit&quot;&gt;&lt;a href=&quot;#Retrofit&quot; class=&quot;headerlink&quot; title=&quot;Retrofit&quot;&gt;&lt;/a&gt;Retrofit&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://wuxiaolong.me/2016/01/15/retrofit/&quot;&gt;Android Retrofit 2.0使用&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;那会刚刚接触Retrofit，简单介绍了Retrofit 2.0使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;http://wuxiaolong.me/2016/06/18/retrofits/&quot;&gt;Android Retrofit 2.0 使用-补充篇&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;比较全面的Retrofit总结，看完这篇，想必对Retrofit不再陌生。&lt;/p&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wuxiaolong.me/categories/Life/"/>
    
    
      <category term="Life" scheme="http://wuxiaolong.me/tags/Life/"/>
    
  </entry>
  
  <entry>
    <title>Android ItemTouchHelper 实践</title>
    <link href="http://wuxiaolong.me/2016/12/10/ItemTouchHelper/"/>
    <id>http://wuxiaolong.me/2016/12/10/ItemTouchHelper/</id>
    <published>2016-12-10T12:18:44.000Z</published>
    <updated>2016-12-11T11:48:41.664Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>实现RecyclerView拖动排序和滑动删除，我想到的是 <a href="http://wuxiaolong.me/2015/12/04/ViewDragHelper/"> ViewDragHelper</a> ，或者是第三方库，当我看了 <a href="https://github.com/Yalantis/ToDoList" target="_blank" rel="external">ToDoList</a> 的时候，发现原来官方已经支持RecyclerView拖动排序与滑动删除，那就是ItemTouchHelper。</p>
</blockquote>
<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>“ItemTouchHelper is a utility class to add swipe to dismiss and drag &amp; drop support to RecyclerView.<br><a id="more"></a><br>It works with a RecyclerView and a Callback class, which configures what type of interactions are enabled and also receives events when user performs these actions.</p>
<p>Depending on which functionality you support, you should override onMove(RecyclerView, ViewHolder, ViewHolder) and / or onSwiped(ViewHolder, int).”</p>
<p>ItemTouchHelper 实现RecyclerView拖动排序和滑动删除，我们需要重写方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">getMovementFlags</span><span class="params">(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder)</span></span></div></pre></td></tr></table></figure></p>
<p>指定可以支持的拖放和滑动的方向，上下为拖动（drag），左右为滑动（swipe）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onMove(RecyclerView, ViewHolder, ViewHolder)</div></pre></td></tr></table></figure>
<p>滑动操作</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onSwiped(ViewHolder, <span class="keyword">int</span>)</div></pre></td></tr></table></figure>
<p>删掉操作</p>
<h1 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h1><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><p>app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.android.support:recyclerview-v7:25.0.0'</span></div></pre></td></tr></table></figure></p>
<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p>线性<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/ItemTouchHelper1.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>网格<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/ItemTouchHelper2.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="ItemTouchHelperCallback"><a href="#ItemTouchHelperCallback" class="headerlink" title="ItemTouchHelperCallback"></a>ItemTouchHelperCallback</h2><p>新建ItemTouchHelperCallback继承ItemTouchHelper.Callback，完整代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemTouchHelperCallback</span> <span class="keyword">extends</span> <span class="title">ItemTouchHelper</span>.<span class="title">Callback</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> ItemTouchHelperAdapter itemTouchHelperAdapter;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">float</span> ALPHA_FULL = <span class="number">1.0f</span>;</div><div class="line"></div><div class="line">    ItemTouchHelperCallback(ItemTouchHelperAdapter itemTouchHelperAdapter) &#123;</div><div class="line">        <span class="keyword">this</span>.itemTouchHelperAdapter = itemTouchHelperAdapter;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * RecyclerView item支持长按进入拖动操作</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLongPressDragEnabled</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * RecyclerView item任意位置触发启用滑动操作</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isItemViewSwipeEnabled</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 指定可以支持的拖放和滑动的方向，上下为拖动（drag），左右为滑动（swipe）</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMovementFlags</span><span class="params">(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (recyclerView.getLayoutManager() <span class="keyword">instanceof</span> GridLayoutManager || recyclerView.getLayoutManager() <span class="keyword">instanceof</span> StaggeredGridLayoutManager) &#123;</div><div class="line">            <span class="keyword">final</span> <span class="keyword">int</span> dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN | ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT;</div><div class="line">            <span class="comment">//不需要滑动</span></div><div class="line">            <span class="keyword">final</span> <span class="keyword">int</span> swipeFlags = <span class="number">0</span>;</div><div class="line">            <span class="keyword">return</span> makeMovementFlags(dragFlags, swipeFlags);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">final</span> <span class="keyword">int</span> dragFlags = ItemTouchHelper.UP | ItemTouchHelper.DOWN;</div><div class="line">            <span class="keyword">final</span> <span class="keyword">int</span> swipeFlags = ItemTouchHelper.START | ItemTouchHelper.END;</div><div class="line">            <span class="keyword">return</span> makeMovementFlags(dragFlags, swipeFlags);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 滑动操作</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onMove</span><span class="params">(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (viewHolder.getItemViewType() != target.getItemViewType()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// Notify the adapter of the move</span></div><div class="line">        itemTouchHelperAdapter.onItemMove(viewHolder.getAdapterPosition(), target.getAdapterPosition());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 删掉操作</div><div class="line">     */</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSwiped</span><span class="params">(RecyclerView.ViewHolder viewHolder, <span class="keyword">int</span> direction)</span> </span>&#123;</div><div class="line">        itemTouchHelperAdapter.onItemDismiss(viewHolder.getAdapterPosition());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChildDraw</span><span class="params">(Canvas c, RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, <span class="keyword">float</span> dX, <span class="keyword">float</span> dY, <span class="keyword">int</span> actionState, <span class="keyword">boolean</span> isCurrentlyActive)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (actionState == ItemTouchHelper.ACTION_STATE_SWIPE) &#123;</div><div class="line">            <span class="comment">//自定义滑动动画</span></div><div class="line">            <span class="keyword">final</span> <span class="keyword">float</span> alpha = ALPHA_FULL - Math.abs(dX) / (<span class="keyword">float</span>) viewHolder.itemView.getWidth();</div><div class="line">            viewHolder.itemView.setAlpha(alpha);</div><div class="line">            viewHolder.itemView.setTranslationX(dX);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">super</span>.onChildDraw(c, recyclerView, viewHolder, dX, dY, actionState, isCurrentlyActive);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSelectedChanged</span><span class="params">(RecyclerView.ViewHolder viewHolder, <span class="keyword">int</span> actionState)</span> </span>&#123;</div><div class="line">        <span class="comment">// We only want the active item to change</span></div><div class="line">        <span class="keyword">if</span> (actionState != ItemTouchHelper.ACTION_STATE_IDLE) &#123;</div><div class="line">            <span class="keyword">if</span> (viewHolder <span class="keyword">instanceof</span> ItemTouchHelperViewHolder) &#123;</div><div class="line">                <span class="comment">// Let the view holder know that this item is being moved or dragged</span></div><div class="line">                ItemTouchHelperViewHolder itemViewHolder = (ItemTouchHelperViewHolder) viewHolder;</div><div class="line">                <span class="comment">//选中状态回调</span></div><div class="line">                itemViewHolder.onItemSelected();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">super</span>.onSelectedChanged(viewHolder, actionState);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearView</span><span class="params">(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.clearView(recyclerView, viewHolder);</div><div class="line">        viewHolder.itemView.setAlpha(ALPHA_FULL);</div><div class="line">        <span class="keyword">if</span> (viewHolder <span class="keyword">instanceof</span> ItemTouchHelperViewHolder) &#123;</div><div class="line">            <span class="comment">// Tell the view holder it's time to restore the idle state</span></div><div class="line">            ItemTouchHelperViewHolder itemViewHolder = (ItemTouchHelperViewHolder) viewHolder;</div><div class="line">            <span class="comment">//未选中状态回调</span></div><div class="line">            itemViewHolder.onItemClear();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="attachToRecyclerView"><a href="#attachToRecyclerView" class="headerlink" title="attachToRecyclerView"></a>attachToRecyclerView</h2><p>创建ItemTouchHelper对象，然后调用attachToRecyclerView(RecyclerView) 方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ItemTouchHelperCallback itemTouchHelperCallback = <span class="keyword">new</span> ItemTouchHelperCallback(recyclerViewAdatper);</div><div class="line">itemTouchHelper = <span class="keyword">new</span> ItemTouchHelper(itemTouchHelperCallback);</div><div class="line">itemTouchHelper.attachToRecyclerView(recyclerView);</div></pre></td></tr></table></figure></p>
<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p>更多详见源码：<a href="https://github.com/WuXiaolong/AndroidSamples/" target="_blank" rel="external">https://github.com/WuXiaolong/AndroidSamples/</a> ，很多参考了<a href="https://github.com/iPaulPro/Android-ItemTouchHelper-Demo" target="_blank" rel="external">iPaulPro/Android-ItemTouchHelper-Demo</a>，关键需要消化，转化成自己的东西。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://developer.android.com/reference/android/support/v7/widget/helper/ItemTouchHelper.html" target="_blank" rel="external">官网Api</a><br><a href="https://medium.com/@ipaulpro/drag-and-swipe-with-recyclerview-b9456d2b1aaf#.2mr5e8eau" target="_blank" rel="external">Drag and Swipe with RecyclerView</a><br><a href="https://medium.com/@ipaulpro/drag-and-swipe-with-recyclerview-6a6f0c422efd#.ehagb28w4" target="_blank" rel="external">Drag and Swipe with RecyclerView—Part Two</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;实现RecyclerView拖动排序和滑动删除，我想到的是 &lt;a href=&quot;http://wuxiaolong.me/2015/12/04/ViewDragHelper/&quot;&gt; ViewDragHelper&lt;/a&gt; ，或者是第三方库，当我看了 &lt;a href=&quot;https://github.com/Yalantis/ToDoList&quot;&gt;ToDoList&lt;/a&gt; 的时候，发现原来官方已经支持RecyclerView拖动排序与滑动删除，那就是ItemTouchHelper。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;“ItemTouchHelper is a utility class to add swipe to dismiss and drag &amp;amp; drop support to RecyclerView.&lt;br&gt;
    
    </summary>
    
      <category term="RecyclerView" scheme="http://wuxiaolong.me/categories/RecyclerView/"/>
    
    
      <category term="ItemTouchHelper" scheme="http://wuxiaolong.me/tags/ItemTouchHelper/"/>
    
  </entry>
  
  <entry>
    <title>GitHub 使用</title>
    <link href="http://wuxiaolong.me/2016/11/29/githubGuide/"/>
    <id>http://wuxiaolong.me/2016/11/29/githubGuide/</id>
    <published>2016-11-29T15:02:18.000Z</published>
    <updated>2016-11-29T14:50:23.379Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>公司让我内部普及下GitHub，嗯好，抛砖引玉之。</p>
</blockquote>
<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub—来自百度百科<br><a id="more"></a></p>
<h1 id="主要作用"><a href="#主要作用" class="headerlink" title="主要作用"></a>主要作用</h1><ul>
<li>学习优秀开源项目</li>
<li>团队协作</li>
<li>基于 GitHub Pages 来搭建个人博客</li>
<li>写作</li>
</ul>
<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>点击Sign up，填写相关信息<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>注意：用户名建议取正式点，如果你以后想基于GitHub 搭建博客，默认给你生成的博客地址就是<a href="http://username.github.io" target="_blank" rel="external">http://username.github.io</a></p>
<h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><p>点击Sign in，登录成功，点击头像里的your profile进入我的主界面<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github3.jpg" alt=""></p>
<ul>
<li>Private选项针对企业，收费的，我们个人只能Public，创建的项目，全世界都能看到</li>
<li>可以勾上Initialize this repository with a README，对项目有个介绍</li>
</ul>
<h1 id="git学习"><a href="#git学习" class="headerlink" title="git学习"></a>git学习</h1><p>先了解下git知识，克隆项目和提交代码需要。<br>1、下载：<a href="https://git-for-windows.github.io/" target="_blank" rel="external">https://git-for-windows.github.io/</a><br>2、所有命令行<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>3、设置账号<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name &quot;Your Name&quot;</div><div class="line">git config --global user.email &quot;email@example.com&quot;</div></pre></td></tr></table></figure></p>
<p>这步是要告诉github，谁提交了代码<br>4、查看配置信息<br>要检查已有的配置信息，可以使用 git config –list 命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git config --list</div></pre></td></tr></table></figure></p>
<h1 id="克隆项目"><a href="#克隆项目" class="headerlink" title="克隆项目"></a>克隆项目</h1><p>有GitHub后，可以自由的 clone 或者下载其他项目，命令行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/WuXiaolong/WeWin.git</div></pre></td></tr></table></figure></p>
<p>其中<a href="https://github.com/WuXiaolong/WeWin.git" target="_blank" rel="external">https://github.com/WuXiaolong/WeWin.git</a> 就是项目的github地址：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github10.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="SSH-Key"><a href="#SSH-Key" class="headerlink" title="SSH Key"></a>SSH Key</h1><p>github提交代码需要SSH授权，不然可以随便提交代码了<br>1、创建SSH Key<br>命令行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</div></pre></td></tr></table></figure></p>
<p>你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可。<br>如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，<br>这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥。</p>
<p>2、设置GitHub<br>登陆GitHub，打开“Account settings”，“GitHub”页面<br>点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容。</p>
<h1 id="提交代码"><a href="#提交代码" class="headerlink" title="提交代码"></a>提交代码</h1><h2 id="本地提交"><a href="#本地提交" class="headerlink" title="本地提交"></a>本地提交</h2><p>使用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git add README.md</div><div class="line">git commit -m &quot;first commit&quot;</div></pre></td></tr></table></figure></p>
<h2 id="关联远程库"><a href="#关联远程库" class="headerlink" title="关联远程库"></a>关联远程库</h2><p>如果是直接clone下来，这步跳出，clone已经关联了，本地新建，使用命令以下命令关联：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git remote add origin https://github.com/WuXiaolong/WeWin.git</div></pre></td></tr></table></figure></p>
<h2 id="推送代码"><a href="#推送代码" class="headerlink" title="推送代码"></a>推送代码</h2><p>使用命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git push origin master</div></pre></td></tr></table></figure></p>
<h1 id="可视化工具"><a href="#可视化工具" class="headerlink" title="可视化工具"></a>可视化工具</h1><p>如果不想使用命令行，可以使用：<br>GitHub Desktop：<a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a> 只能提交github<br>tortoisegit：<a href="https://tortoisegit.org/" target="_blank" rel="external">https://tortoisegit.org/</a><br>SourceTree：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">https://www.sourcetreeapp.com/</a></p>
<h1 id="GitHub与Android-studio"><a href="#GitHub与Android-studio" class="headerlink" title="GitHub与Android studio"></a>GitHub与Android studio</h1><p>Android studio已经集成了github</p>
<h2 id="配置GitHub账号"><a href="#配置GitHub账号" class="headerlink" title="配置GitHub账号"></a>配置GitHub账号</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github6.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="配置git"><a href="#配置git" class="headerlink" title="配置git"></a>配置git</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github7.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>可以点击Test，检测下是否成功</p>
<h2 id="导入项目"><a href="#导入项目" class="headerlink" title="导入项目"></a>导入项目</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github5.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github8.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="提交代码-1"><a href="#提交代码-1" class="headerlink" title="提交代码"></a>提交代码</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github11.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>真实项目中，一般先pull，防止冲突，然后add、commit提交，再push推送。</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="Issue"><a href="#Issue" class="headerlink" title="Issue"></a>Issue</h2><p>问题的意思，比如你发现某个开源项目有bug，你可以提Issue给作者，作者可以修复bug，修复完毕可以一个个 Close 掉。图为新建Issue：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github9.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="Pull-request"><a href="#Pull-request" class="headerlink" title="Pull request"></a>Pull request</h2><p>发起请求，这个其实是基于 Fork 的，比如你Fork别人项目，你修改，想提交给原作者，可以通过Pull Request方式，原作者觉得你的代码没问题，选择Merge pull request，合并你的提交的代码。图为新建Pull request：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/github12.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="我与GayHub"><a href="#我与GayHub" class="headerlink" title="我与GayHub"></a>我与GayHub</h1><p>我是2013年5月6日注册GitHub，12年工作，当时根本不知道GitHub，经常泡在安卓巴士和eoeandroid，接触GitHub是从Android-Universal-Image-Loader开始，这个库是朋友介绍的，渐渐玩GitHub了，14年，基于 GitHub Pages  搭建了属于自己的技术博客：<a href="http://wuxiaolong.me/">http://wuxiaolong.me/</a> ，自此，弃论坛，专注自己的博客。GitHub起初我只是下载代码学习，后来留意github有个README.md，知道这肯定是文本，却是md结尾的，于是了解并自学了点markdown语法，也庆幸那点好奇，才为后来的个人博客打了基础。15年尝试分享了一个RecyclerView下拉刷新和上拉加载的库<a href="https://github.com/WuXiaolong/PullLoadMoreRecyclerView" target="_blank" rel="external">PullLoadMoreRecyclerView</a>，之后又分享了Android常用工具类的库<a href="https://github.com/WuXiaolong/AndroidUtils" target="_blank" rel="external">AndroidUtils</a>，也分享了一个完整的项目<a href="https://github.com/WuXiaolong/WeWin" target="_blank" rel="external">WeWin</a>，还写了几个sample，<a href="https://github.com/WuXiaolong/AndroidMVPSample" target="_blank" rel="external">AndroidMVPSample</a>，<a href="https://github.com/WuXiaolong/DesignSupportLibrarySample" target="_blank" rel="external">DesignSupportLibrarySample</a>等，从中我“被迫”去学习了git相关知识，如何Issue，如何 Pull request。有时候，为了解决需求，可能要学习很多相关知识，学海无涯，回头是岸！哈哈！总之GitHub是好东西，赶紧注册个号玩起！</p>
<h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><p><a href="http://wuxiaolong.me/2015/07/31/build-blog-by-hexo/">手把手教你建github技术博客by hexo</a><br><a href="http://wuxiaolong.me/2016/10/11/markdownGuide/">Markdown常用语法</a><br><a href="http://wuxiaolong.me/2015/11/06/DesignSupportLibrary/">Android Design Support Library使用</a><br><a href="http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/">Android MVP+Retrofit+RxJava实践小结</a><br><a href="http://wuxiaolong.me/2015/07/24/PullLoadMoreRecyclerView/">PullLoadMoreRecyclerView</a><br><a href="http://wuxiaolong.me/2015/11/25/WeWin/">WeWin</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;公司让我内部普及下GitHub，嗯好，抛砖引玉之。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;GitHub 是一个面向开源及私有软件项目的托管平台，因为只支持 Git 作为唯一的版本库格式进行托管，故名 GitHub—来自百度百科&lt;br&gt;
    
    </summary>
    
      <category term="GitHub" scheme="http://wuxiaolong.me/categories/GitHub/"/>
    
    
      <category term="GitHub" scheme="http://wuxiaolong.me/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>Android 接入微信支付宝支付</title>
    <link href="http://wuxiaolong.me/2016/11/22/AndroidPay/"/>
    <id>http://wuxiaolong.me/2016/11/22/AndroidPay/</id>
    <published>2016-11-22T12:32:07.000Z</published>
    <updated>2016-11-21T13:30:12.260Z</updated>
    
    <content type="html"><![CDATA[<p>按照惯例，首先通读一遍官网文档。</p>
<h1 id="微信支付"><a href="#微信支付" class="headerlink" title="微信支付"></a>微信支付</h1><h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><h3 id="微信开放平台"><a href="#微信开放平台" class="headerlink" title="微信开放平台"></a>微信开放平台</h3><p>注册账号，创建应用，开通微信支付，这些大家都会的。</p>
<h3 id="微信商户平台"><a href="#微信商户平台" class="headerlink" title="微信商户平台"></a>微信商户平台</h3><a id="more"></a>
<p>APP支付文档<br><a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_1" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=8_1</a> ，如果仅按照文档来，保证每次支付结果都是-1，对，只有-1，没有任何其他信息，不得不说，坑比。</p>
<p>APP支付时序图<br>大概了解下支付流程：<br><img src="https://pay.weixin.qq.com/wiki/doc/api/img/chapter8_3_1.png" alt=""></p>
<h2 id="接入SDK"><a href="#接入SDK" class="headerlink" title="接入SDK"></a>接入SDK</h2><h3 id="引入libs"><a href="#引入libs" class="headerlink" title="引入libs"></a>引入libs</h3><p>SDK下载：<a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=11_1" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=11_1</a> ，将libammsdk.jar放到libs文件夹下</p>
<h3 id="配置debug签名"><a href="#配置debug签名" class="headerlink" title="配置debug签名"></a>配置debug签名</h3><p>创建应用需要填写应用签名，配置在debug下直接用的正式的key，这样就不用每次打包才能调起微信客户端<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">signingConfigs &#123;</div><div class="line">        debug &#123;</div><div class="line">            <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">"你的keystore路径"</span>)</span></span></div><div class="line">            storePassword "xxx"</div><div class="line">            keyAlias "xxx"</div><div class="line">            keyPassword "xxx"</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        release &#123;</div><div class="line">            <span class="function">storeFile <span class="title">file</span><span class="params">(<span class="string">"你的keystore路径"</span>)</span></span></div><div class="line">            storePassword "xxx"</div><div class="line">            keyAlias "xxx"</div><div class="line">            keyPassword "xxx"</div><div class="line">        &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="WXPayEntryActivity"><a href="#WXPayEntryActivity" class="headerlink" title="WXPayEntryActivity"></a>WXPayEntryActivity</h3><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidPay1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>这个<strong>文档没有半点介绍</strong>，WXPayEntryActivity是支付结束的回调，和微信分享WXEntryActivity类似，必须放在包名.wxapi下，页面可以自己写。</p>
<p>AndroidManifest.xml中注册<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 微信支付 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".wxapi.WXPayEntryActivity"</span></div><div class="line">    <span class="attr">android:exported</span>=<span class="string">"true"</span></div><div class="line">    <span class="attr">android:launchMode</span>=<span class="string">"singleTop"</span>/&gt;</div></pre></td></tr></table></figure></p>
<p>网络权限注册不用说了。</p>
<h3 id="支付接口调用"><a href="#支付接口调用" class="headerlink" title="支付接口调用"></a>支付接口调用</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * 微信支付</div><div class="line"> * <span class="doctag">@param</span> data接口返回</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">weixinPay</span><span class="params">(String data)</span> </span>&#123;</div><div class="line">    <span class="comment">// 通过WXAPIFactory工厂，获取IWXAPI的实例</span></div><div class="line">    IWXAPI api = WXAPIFactory.createWXAPI(<span class="keyword">this</span>, WEIXIN_APP_ID);</div><div class="line">    <span class="comment">// 将该app注册到微信</span></div><div class="line">    api.registerApp(WEIXIN_APP_ID);</div><div class="line">    LogUtil.d(<span class="string">"data="</span> + data);</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        JSONObject json = <span class="keyword">new</span> JSONObject(data);</div><div class="line">        PayReq req = <span class="keyword">new</span> PayReq();</div><div class="line">        req.appId = json.getString(<span class="string">"appid"</span>);</div><div class="line">        req.partnerId = json.getString(<span class="string">"partnerid"</span>);</div><div class="line">        req.prepayId = json.getString(<span class="string">"prepayid"</span>);</div><div class="line">        req.nonceStr = json.getString(<span class="string">"noncestr"</span>);</div><div class="line">        req.timeStamp = json.getString(<span class="string">"timestamp"</span>);</div><div class="line">        req.packageValue = json.getString(<span class="string">"package"</span>);</div><div class="line">        req.sign = json.getString(<span class="string">"sign"</span>);</div><div class="line">        req.extData = <span class="string">"app data"</span>; <span class="comment">// optional</span></div><div class="line">        <span class="comment">// 在支付之前，如果应用没有注册到微信，应该先调用IWXMsg.registerApp将应用注册到微信</span></div><div class="line">        api.sendReq(req);</div><div class="line">    &#125; <span class="keyword">catch</span> (JSONException e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>为了安全，APP端调起支付的参数需要商户后台系统提供接口返回，参数说明文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12&amp;index=2" target="_blank" rel="external">https://pay.weixin.qq.com/wiki/doc/api/app/app.php?chapter=9_12&amp;index=2</a></p>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>以为这样就可以调起微信客户端支付了，没有想到一直返回支付结果为-1，没有多余的信息提示，不亏是微信，Android代码就是简洁！我们看到文档返回-1的提示“可能的原因：签名错误、未注册APPID、项目设置APPID不正确、注册的APPID与设置的不匹配、其他异常等。”，我反复检查签名、APPID均没有错误，后台也确定sign信息正确，哎，我表示很无奈，iOS也调用了，他们提示”支付场景非法“，原来是由于后台之前做web支付，trade_type没有改成APP，改了我这边就能正常调起了。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidPay2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="支付宝接入"><a href="#支付宝接入" class="headerlink" title="支付宝接入"></a>支付宝接入</h1><h2 id="前期准备-1"><a href="#前期准备-1" class="headerlink" title="前期准备"></a>前期准备</h2><p>注册账号，创建应用，开通支付功能，这些也不说了。</p>
<h3 id="接入文档"><a href="#接入文档" class="headerlink" title="接入文档"></a>接入文档</h3><p><a href="https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7386797.0.0.Eky59h&amp;treeId=59&amp;articleId=103563&amp;docType=1" target="_blank" rel="external">https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7386797.0.0.Eky59h&amp;treeId=59&amp;articleId=103563&amp;docType=1</a></p>
<h3 id="支付交互流程"><a href="#支付交互流程" class="headerlink" title="支付交互流程"></a>支付交互流程</h3><p><img src="https://img.alicdn.com/top/i1/LB1d7GlMVXXXXbTXFXXXXXXXXXX" alt=""></p>
<h2 id="接入SDK-1"><a href="#接入SDK-1" class="headerlink" title="接入SDK"></a>接入SDK</h2><p>SDK下载：<br><a href="https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.Q5gnm8&amp;treeId=193&amp;articleId=104509&amp;docType=1" target="_blank" rel="external">https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.Q5gnm8&amp;treeId=193&amp;articleId=104509&amp;docType=1</a> ，<br>将alipaySdk-xxxxxxxx.jar包放到libs文件夹下</p>
<h3 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h3><p>添加权限<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_NETWORK_STATE"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_WIFI_STATE"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.READ_PHONE_STATE"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></div></pre></td></tr></table></figure></p>
<p>添加声明<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- 支付宝 alipay sdk begin --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">"com.alipay.sdk.app.H5PayActivity"</span></div><div class="line">    <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden|navigation"</span></div><div class="line">    <span class="attr">android:exported</span>=<span class="string">"false"</span></div><div class="line">    <span class="attr">android:screenOrientation</span>=<span class="string">"behind"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">"com.alipay.sdk.auth.AuthActivity"</span></div><div class="line">    <span class="attr">android:configChanges</span>=<span class="string">"orientation|keyboardHidden|navigation"</span></div><div class="line">    <span class="attr">android:exported</span>=<span class="string">"false"</span></div><div class="line">    <span class="attr">android:screenOrientation</span>=<span class="string">"behind"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="支付接口调用-1"><a href="#支付接口调用-1" class="headerlink" title="支付接口调用"></a>支付接口调用</h3><p>支付行为需要在独立的非ui线程中执行，代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> Handler mHandler = <span class="keyword">new</span> Handler() &#123;</div><div class="line">        <span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</div><div class="line">            <span class="keyword">switch</span> (msg.what) &#123;</div><div class="line">                <span class="keyword">case</span> SDK_PAY_FLAG: &#123;</div><div class="line">                    <span class="meta">@SuppressWarnings</span>(<span class="string">"unchecked"</span>)</div><div class="line">                    PayResult payResult = <span class="keyword">new</span> PayResult((Map&lt;String, String&gt;) msg.obj);</div><div class="line">                    <span class="comment">/**</span></div><div class="line">                     对于支付结果，请商户依赖服务端的异步通知结果。同步通知结果，仅作为支付结束的通知。</div><div class="line">                     */</div><div class="line">                    String resultInfo = payResult.getResult();<span class="comment">// 同步返回需要验证的信息</span></div><div class="line">                    String resultStatus = payResult.getResultStatus();</div><div class="line">                    <span class="comment">// 判断resultStatus 为9000则代表支付成功</span></div><div class="line">                    <span class="keyword">if</span> (TextUtils.equals(resultStatus, <span class="string">"9000"</span>)) &#123;</div><div class="line">                        <span class="comment">// 该笔订单是否真实支付成功，需要依赖服务端的异步通知。</span></div><div class="line">                        Toast.makeText(mActivity, <span class="string">"支付成功"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125; <span class="keyword">else</span> &#123;</div><div class="line">                        <span class="comment">// 该笔订单真实的支付结果，需要依赖服务端的异步通知。</span></div><div class="line">                        Toast.makeText(mActivity, payResult.getMemo(), Toast.LENGTH_SHORT).show();</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">default</span>:</div><div class="line">                    <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        ;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 支付宝</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">alipay</span><span class="params">(<span class="keyword">final</span> String orderInfo)</span> </span>&#123;</div><div class="line">        Runnable payRunnable = <span class="keyword">new</span> Runnable() &#123;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                PayTask alipay = <span class="keyword">new</span> PayTask(mActivity);</div><div class="line">                Map&lt;String, String&gt; result = alipay.payV2(orderInfo, <span class="keyword">true</span>);</div><div class="line">                Log.i(<span class="string">"msp"</span>, result.toString());</div><div class="line"></div><div class="line">                Message msg = <span class="keyword">new</span> Message();</div><div class="line">                msg.what = SDK_PAY_FLAG;</div><div class="line">                msg.obj = result;</div><div class="line">                mHandler.sendMessage(msg);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line"></div><div class="line">        Thread payThread = <span class="keyword">new</span> Thread(payRunnable);</div><div class="line">        payThread.start();</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p>
<p>同样为了安全，这里orderInfo是后台接口返回，参数说明文档：<br><a href="https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.DwA283&amp;treeId=59&amp;articleId=103663&amp;docType=1" target="_blank" rel="external">https://doc.open.alipay.com/docs/doc.htm?spm=a219a.7629140.0.0.DwA283&amp;treeId=59&amp;articleId=103663&amp;docType=1</a></p>
<p>这样就over了，相比于微信支付，简单的不能再简单。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;按照惯例，首先通读一遍官网文档。&lt;/p&gt;
&lt;h1 id=&quot;微信支付&quot;&gt;&lt;a href=&quot;#微信支付&quot; class=&quot;headerlink&quot; title=&quot;微信支付&quot;&gt;&lt;/a&gt;微信支付&lt;/h1&gt;&lt;h2 id=&quot;前期准备&quot;&gt;&lt;a href=&quot;#前期准备&quot; class=&quot;headerlink&quot; title=&quot;前期准备&quot;&gt;&lt;/a&gt;前期准备&lt;/h2&gt;&lt;h3 id=&quot;微信开放平台&quot;&gt;&lt;a href=&quot;#微信开放平台&quot; class=&quot;headerlink&quot; title=&quot;微信开放平台&quot;&gt;&lt;/a&gt;微信开放平台&lt;/h3&gt;&lt;p&gt;注册账号，创建应用，开通微信支付，这些大家都会的。&lt;/p&gt;
&lt;h3 id=&quot;微信商户平台&quot;&gt;&lt;a href=&quot;#微信商户平台&quot; class=&quot;headerlink&quot; title=&quot;微信商户平台&quot;&gt;&lt;/a&gt;微信商户平台&lt;/h3&gt;
    
    </summary>
    
      <category term="Android" scheme="http://wuxiaolong.me/categories/Android/"/>
    
    
      <category term="AndroidPay" scheme="http://wuxiaolong.me/tags/AndroidPay/"/>
    
  </entry>
  
  <entry>
    <title>一个平凡人的职场经历</title>
    <link href="http://wuxiaolong.me/2016/11/18/MyWorkLive/"/>
    <id>http://wuxiaolong.me/2016/11/18/MyWorkLive/</id>
    <published>2016-11-18T13:11:00.000Z</published>
    <updated>2016-11-18T13:36:54.591Z</updated>
    
    <content type="html"><![CDATA[<p>近期，好多人在微信公众号后台咨询，说快要毕业，找个实习工作好难，希望我能给他一些建议，其实我一没什么好的学历，二没有名企的经历，毕竟在二线城市，可能就要面对着公司倒闭，没什么资格建议什么，只能阐述下我的工作经历，希望对您有所启示：<br><a id="more"></a><br>一晃，我工作已经4多了，2011年12月份，学校已经没有课，让我们出去找工作，那个时候我是迷茫的，各种海投，不知道如何找到工作，更不知道自己职场方向是什么，投的主要JavaEE，简历上也顺便写了学过Android，那时的我对JavaEE，Android根本没什么概念。简历大多石沉大海，第一次面试，那个紧张啊，直到现在面试还是紧张的。几经周折，有家公司答应了我，可以去上班，工资800，第一天兴致勃勃去上班，到了才发现只有一个老总和一个员工，心里有了退堂鼓想法，老总应该经常出差，第二天就我和那个同事，我在安装Android开发环境，却发现他在看NBA直播，这与我理念相悖，上班就该好好上班，不能干与工作无关的事，而且他还是研究生，研究生耶，这更加加剧了不想在这里待了，正好下午来了个电话，有家公司给我offer，年后去上班，我满口答应，连工资多少都没有问，囧，第三天就跟老总提了离职的事……</p>
<p>2012年2月1号，我去上班了，心里话，内心是胆怯的，敲门进去，问我干嘛的，我说是来上班了，也巧的是，直接进去了研发部的办公区，因为研发部是独立分开，是1404，其他人在1401，然后谢哥找我谈话，轻声细语跟我介绍了公司，谢哥，研发部老大，至今我对他还是存在感激之情的，感谢他对我的照顾。职场之初遇到的同事都成了好朋友，现在还在联系，也是很感谢他们对我一个新人的照顾。话说第一份工作很重要，直接影响到您的职业方向乃至人生。刚刚工作，因为什么都不懂，我又很急，希望马上就会，上班写代码，下班也在写，而且项目不少，加班家常便饭，我觉得工作之初就应该这样，项目中才能成长的更快。业余时间泡安卓巴士和eoe，混了版主，相见恨晚世界同性交流的网站github。随着我的技术日渐成长，我能单挡一面，开始一个人干一个项目，同事走了一波，我还在，因为听说三年一个分水岭，可惜我没有等到第三年，2014年4月份，我提了离职申请，离职有2个理由：1、感觉我不被重视，可能实习就来了，分量不够；2、14年那会移动开发可是黄金的时候，水涨船高，我提的涨薪资要求遭拒绝。</p>
<p>我来了第二家公司，5个月后，我的简历无奈了多了一家公司的经历，因为他倒闭了，还欠2个月工资没发，老板跑路了，就这样不了了之。期间最大的收获是搭建了属于自己的个人技术博客，自此很少玩安卓论坛。</p>
<p>因为有了上一家公司的倒闭，求稳，2014年9月份，进入国企，准确地说是央企，毫不客气地说，我和央视那些主持人还是同事呢，哈哈。经历国企，恐怕以后再也不会进国企性质的公司了吧，一次就够，至于为什么，大家应该都知道的。</p>
<p>今年重新找了工作，无锡软件怎么还是要死不活的样子，以为过了两年，无锡软件会有所好转，现在这家创业公司经历资本寒冬，之前工资都发不出，面临倒闭，所幸挺过来，我相信会越来越好的。</p>
<p>现在想想，还是第一家公司好，每天的进步是显而易见的，快毕业的童鞋先上班再说，一开始不要在乎多少薪资，要加强自身技能，工资会慢慢越来越多的，另外，写写博客之类的，把自己工作中遇到的问题记录下来，厚积薄发，打造个人影响力，当你在一个群说话，别人会问我是不是那个写博客的吴小龙同學啊，惊喜，说明我的博客还是有影响帮助到了部分人，这点我很欣慰。之前有人建议把您的博客或github写在简历上，面试官可能会提前看看您的博客和github，但在无锡我是失望的，面试官大部分是快要面试才拿到简历，这大概就是无锡软件不行的原因所在吧，如果您有博客或github，且不错的话，还是写在简历上吧，这是加分项。</p>
<p>祝好运。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;近期，好多人在微信公众号后台咨询，说快要毕业，找个实习工作好难，希望我能给他一些建议，其实我一没什么好的学历，二没有名企的经历，毕竟在二线城市，可能就要面对着公司倒闭，没什么资格建议什么，只能阐述下我的工作经历，希望对您有所启示：&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wuxiaolong.me/categories/Life/"/>
    
    
      <category term="Work" scheme="http://wuxiaolong.me/tags/Work/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你做个人 app</title>
    <link href="http://wuxiaolong.me/2016/11/11/PersonalApp/"/>
    <id>http://wuxiaolong.me/2016/11/11/PersonalApp/</id>
    <published>2016-11-11T14:54:16.000Z</published>
    <updated>2016-11-13T11:35:01.325Z</updated>
    
    <content type="html"><![CDATA[<p>我们都知道，开发一个app很大程度依赖服务端：服务端提供接口数据，然后我们展示；另外，开发一个app，还需要美工协助切图。没了接口，没了美工，app似乎只能做成单机版或工具类app，真的是这样的吗？先来展示下我的个人app，没有服务端，没有美工完成的，换言之，我干了所有人的活：<br><a id="more"></a><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PersonalApp4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>这个app叫“微言”，他对于我意义很重大，最初微言只是我一个练手的项目，刚刚工作，技术有限，微言只是sqlite记事本类app，只能本地操作，后来慢慢演变现在几近完美的app，从中我学到很多，熟悉了立项到上线的整个流程，最新技术得以实践，从一个程序猿思维从而向产品思维转变，简单的Photoshop等。当然长期的积累自然会带来经济方面的收益，这里秀下我的app广告收益，我的所有app之和：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PersonalApp1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>最多一个月4000多，4000多什么概念，比我当时薪资都高呢，这些“成就”有了我可以在此吹牛的资本，哈哈哈！</p>
<p>接下来，我一一分析，带您完成这样的一个完整的app。</p>
<h1 id="没有服务端"><a href="#没有服务端" class="headerlink" title="没有服务端"></a>没有服务端</h1><h2 id="jsoup"><a href="#jsoup" class="headerlink" title="jsoup"></a>jsoup</h2><p>我无意听到大牛同事说到解析html，比较有兴趣去搜索这是什么玩意儿，知道了一个强大的东西jsoup，jsoup能解析html，即网站，于是我的微言脱离了单机版。对用户而言，他不在乎数据从何而来，管您是从接口取的还是解析html，他们关心的是app体验和功能的完善。我就这样瞒天过海，数据取之网页了，群里之前太多人太多人问我用的什么服务器，回复太多次解析html后就不愿意再回复了。</p>
<p>我选择这种方式有个最大的好处就是数据不需要本人维护，巧妙地避开了我不会服务端开发，更不需要做接口；解析html也有个最大的弊端，一旦对方网站节点变化了，或许您的app就挂了，必须及时去更新。</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p><strong>步骤一</strong>：<br>首先网络请求，这里用的Retrofit，具体见：<a href="http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/">Android MVP+Retrofit+RxJava实践小结</a>。以解析我的博客<a href="http://wuxiaolong.me/">http://wuxiaolong.me/</a> 示例，可以拿到类似以下数据：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PersonalApp2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>在谷歌浏览器，我的博客页面点击右键-查看网页源代码（V），同样看到以上数据。</p>
<p><strong>步骤二</strong>：<br>1、app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'org.jsoup:jsoup:1.10.1'</span></div></pre></td></tr></table></figure></p>
<p>2、解析html<br>要诀：多观察html节点、标签。<br>先观察我们要解析的数据（以我的博客<a href="http://wuxiaolong.me/">http://wuxiaolong.me/</a> 示例），首页分别有标题、发表时间、文章分类、文章评论、文章摘要5个元素谷歌浏览器，我们这次只需要标题、发表时间、文章摘要；可以看到我的博客是分页，第一页网址是<a href="http://wuxiaolong.me">http://wuxiaolong.me</a> 和第二页网址却是<a href="http://wuxiaolong.me/page/2/">http://wuxiaolong.me/page/2/</a> ，之后区别就是页码，因此app做分页的话要判断第一页和其他页，最终我做成的效果：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PersonalApp3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>我们一一分析，关于jsoup语法，这里不说，见 <a href="https://jsoup.org/" target="_blank" rel="external">jsoup官网</a>。</p>
<p>（1）标题数据结构如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"post-title"</span> <span class="attr">itemprop</span>=<span class="string">"name headline"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"post-title-link"</span> <span class="attr">href</span>=<span class="string">"/2016/10/31/AppShortcuts/"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span>Android App Shortcuts<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>观察可根据class=”post-title”的getElementsByClass解析：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//responseBody是retrofit网络请求返回的，转成String，即我们需要解析的数据</span></div><div class="line">Document document = Jsoup.parse(<span class="keyword">new</span> String(responseBody.bytes(), <span class="string">"UTF-8"</span>));</div><div class="line">List&lt;Element&gt; titleElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">Elements titleElements = document.getElementsByClass(<span class="string">"post-title-link"</span>);</div><div class="line"><span class="keyword">for</span> (Element element : titleElements) &#123;</div><div class="line">    titleElementList.add(element);</div><div class="line">    <span class="comment">//text拿到文本，如这里的“Android App Shortcuts”</span></div><div class="line">    LogUtil.d(<span class="string">"text="</span> + element.text());</div><div class="line">    <span class="comment">//拿到href属性值，如这里“/2016/10/31/AppShortcuts/”，即博客链接，如果跳转详情需要加上“http://wuxiaolong.me”</span></div><div class="line">    LogUtil.d(<span class="string">"href="</span> + element.attr(<span class="string">"href"</span>));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（2）发表时间数据结构如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-time"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-icon"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-calendar-o"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"post-meta-item-text"</span>&gt;</span>发表于<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">time</span> <span class="attr">itemprop</span>=<span class="string">"dateCreated"</span> <span class="attr">datetime</span>=<span class="string">"2016-10-31T21:49:53+08:00"</span> <span class="attr">content</span>=<span class="string">"2016-10-31"</span>&gt;</span>2016-10-31<span class="tag">&lt;/<span class="name">time</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></div></pre></td></tr></table></figure>
<p>观察，同样用getElementsByClass解析：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">List&lt;Element&gt; timeElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">Elements timeElements = document.getElementsByClass(<span class="string">"post-time"</span>);</div><div class="line"><span class="keyword">for</span> (Element element : timeElements) &#123;</div><div class="line">    <span class="comment">//这里通过解析"time"标签，然后取文本，即“2016-10-31”</span></div><div class="line">    LogUtil.d(<span class="string">"time="</span> + element.getElementsByTag(<span class="string">"time"</span>).text());</div><div class="line">    timeElementList.add(element);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>（3）文章摘要数据结构如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-body"</span> <span class="attr">itemprop</span>=<span class="string">"articleBody"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"简介"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#简介"</span> <span class="attr">class</span>=<span class="string">"headerlink"</span> <span class="attr">title</span>=<span class="string">"简介"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>简介<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Android 7.1允许您定义应用程序中特定操作的快捷方式。这些快捷键可以显示桌面，例如Nexus和Pixel设备。快捷键可让您的用户在应用程序中快速启动常见或推荐的任务。<span class="tag">&lt;<span class="name">br</span>&gt;</span>每个快捷键引用一个或多个意图，每个意图在用户选择快捷方式时在应用程序中启动特定操作。可以表达为快捷方式的操作示例包括：<span class="tag">&lt;<span class="name">br</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"post-more-link text-center"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">href</span>=<span class="string">"/2016/10/31/AppShortcuts/"</span> <span class="attr">rel</span>=<span class="string">"contents"</span>&gt;</span></div><div class="line">阅读全文 &amp;raquo;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>恩，也是用的getElementsByClass解析：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">List&lt;Element&gt; bodyElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">Elements bodyElements = document.getElementsByClass(<span class="string">"post-body"</span>);</div><div class="line"><span class="keyword">for</span> (Element element : bodyElements) &#123;</div><div class="line">	<span class="comment">//这里用text()只是拿到文本，但我想要直接返回html标签，很好，jsoup有html()方法。</span></div><div class="line">    LogUtil.d(<span class="string">"body="</span> + element.html());</div><div class="line">    bodyElementList.add(element);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>3、核心代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">loadMyBlog</span><span class="params">()</span> </span>&#123;</div><div class="line">    Call&lt;ResponseBody&gt; call;</div><div class="line">    <span class="comment">//分页处理</span></div><div class="line">    <span class="keyword">if</span> (page == <span class="number">1</span>) &#123;</div><div class="line">        call = apiStores.loadMyBlog();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        call = apiStores.loadMyBlog(page);</div><div class="line">    &#125;</div><div class="line">    call.enqueue(<span class="keyword">new</span> RetrofitCallback&lt;ResponseBody&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(ResponseBody responseBody)</span> </span>&#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Document document = Jsoup.parse(<span class="keyword">new</span> String(responseBody.bytes(), <span class="string">"UTF-8"</span>));</div><div class="line">                List&lt;Element&gt; titleElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">                Elements titleElements = document.getElementsByClass(<span class="string">"post-title-link"</span>);</div><div class="line">                <span class="keyword">for</span> (Element element : titleElements) &#123;</div><div class="line">                    titleElementList.add(element);</div><div class="line">                    <span class="comment">//LogUtil.d("text=" + element.text());</span></div><div class="line">                    <span class="comment">//LogUtil.d("href=" + element.attr("href"));</span></div><div class="line">                &#125;</div><div class="line">                List&lt;Element&gt; timeElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">                Elements timeElements = document.getElementsByClass(<span class="string">"post-time"</span>);</div><div class="line">                <span class="keyword">for</span> (Element element : timeElements) &#123;</div><div class="line">                    <span class="comment">//LogUtil.d("time=" + element.getElementsByTag("time").text());</span></div><div class="line">                    timeElementList.add(element);</div><div class="line">                &#125;</div><div class="line">                <span class="comment">//Elements categoryElements = document.getElementsByClass("post-category");</span></div><div class="line">                <span class="comment">//for (Element element : categoryElements) &#123;</span></div><div class="line">                <span class="comment">//    LogUtil.d("category=" + element.getElementsByTag("a").text());</span></div><div class="line">                <span class="comment">//&#125;</span></div><div class="line">                List&lt;Element&gt; bodyElementList = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">                Elements bodyElements = document.getElementsByClass(<span class="string">"post-body"</span>);</div><div class="line">                <span class="keyword">for</span> (Element element : bodyElements) &#123;</div><div class="line">                    LogUtil.d(<span class="string">"body="</span> + element.html());</div><div class="line">                    bodyElementList.add(element);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (page == <span class="number">1</span>) &#123;</div><div class="line">                    dataAdapter.clear();</div><div class="line">                &#125;</div><div class="line">                dataAdapter.addAll(titleElementList, timeElementList, bodyElementList);</div><div class="line">                <span class="keyword">if</span> (titleElementList.size() &lt; <span class="number">8</span>) &#123;</div><div class="line">                    <span class="comment">//因为我的博客一页8条数据，当小于8时，说明没有下一页了</span></div><div class="line">                    pullLoadMoreRecyclerView.setHasMore(<span class="keyword">false</span>);</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    pullLoadMoreRecyclerView.setHasMore(<span class="keyword">true</span>);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String msg)</span> </span>&#123;</div><div class="line">            toastShow(msg);</div><div class="line">        &#125;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onThrowable</span><span class="params">(Throwable t)</span> </span>&#123;</div><div class="line">            toastShow(t.getMessage());</div><div class="line">        &#125;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinish</span><span class="params">()</span> </span>&#123;</div><div class="line">            pullLoadMoreRecyclerView.setPullLoadMoreCompleted();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">    addCalls(call);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="jsoup解析源码"><a href="#jsoup解析源码" class="headerlink" title="jsoup解析源码"></a>jsoup解析源码</h3><p>解析我的博客源码已经上传我的github，见：<a href="https://github.com/WuXiaolong/WeWin" target="_blank" rel="external">https://github.com/WuXiaolong/WeWin</a> </p>
<p>想必这样一一分析，您一定会jsoup解析html，如果还不会，私下给我发个大红包，我再手把手教您，发个超大红包，今晚我就是您的啦，嘿嘿。</p>
<h3 id="题外"><a href="#题外" class="headerlink" title="题外"></a>题外</h3><p>可能您担心，jsoup解析html，这样爬虫难道不侵权吗？是的，我也担心，所以我的app也只在我的群里“宣传宣传”。</p>
<h2 id="bmob"><a href="#bmob" class="headerlink" title="bmob"></a>bmob</h2><p>仔细的您，肯定发现了，jsoup爬数据，只能做展示功能，那我的微言里不是有评论功能嘛！这是怎么做到的呢？我刚开始做app那会，个人app是做不了POST功能的，但bmob出现解决了个人开发者这个没有服务器的痛点，它就相当于一个数据库，提供了sdk，您可以做增删改查操作，我们只需要专注客户端，后端就不用管了，话说如此，我们还是稍微懂点数据库知识的，以便于我们更好利用bmob。除了bmob，现在还有leancloud、apicloud等都有类似的服务，很感谢他们，及时解决我们的刚需，个人app还可以有一线生机。</p>
<p>关于bmob、leancloud、apicloud如何使用，我知道聪明的您已经在看他们的官方文档了。</p>
<h1 id="没有美工"><a href="#没有美工" class="headerlink" title="没有美工"></a>没有美工</h1><h2 id="美工切图"><a href="#美工切图" class="headerlink" title="美工切图"></a>美工切图</h2><p>在实际开发中，有些效果，只需要美工做张图片就能轻松搞定，没有美工切图的配合，app开发似乎难以进展下去了，是吗？其实我在《<a href="http://wuxiaolong.me/2015/11/06/DesignSupportLibrary/">Android Design Support Library使用</a>》一文提到一句话：“目前这个sample，Material design风格的效果都有了，相当一个空壳子，您只需在实际开发中塞真实数据就是一个perfect app”，对，就用谷歌的Material design风格就OK了，它提供了一套规范、图片，足够我们个人app使用了，而且现在还有vector，更是强大之极。比如微言-每日推荐右上角的刷新按钮，如图：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PersonalApp5.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>相应的xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">      <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">item</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/action_refresh"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_loop_24dp"</span></div><div class="line">        <span class="attr">android:title</span>=<span class="string">"刷新"</span></div><div class="line">        <span class="attr">app:showAsAction</span>=<span class="string">"always"</span> /&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>平时ic_loop_24dp肯定是张图片，然而我用的vector，代码如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">vector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">        <span class="attr">android:width</span>=<span class="string">"24dp"</span></div><div class="line">        <span class="attr">android:height</span>=<span class="string">"24dp"</span></div><div class="line">        <span class="attr">android:viewportWidth</span>=<span class="string">"24.0"</span></div><div class="line">        <span class="attr">android:viewportHeight</span>=<span class="string">"24.0"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">path</span></span></div><div class="line">        <span class="attr">android:fillColor</span>=<span class="string">"?attr/colorControlNormal"</span></div><div class="line">        <span class="attr">android:pathData</span>=<span class="string">"M12,4L12,1L8,5l4,4L12,6c3.31,0 6,2.69 6,6 0,1.01 -0.25,1.97 -0.7,2.8l1.46,1.46C19.54,15.03 20,13.57 20,12c0,-4.42 -3.58,-8 -8,-8zM12,18c-3.31,0 -6,-2.69 -6,-6 0,-1.01 0.25,-1.97 0.7,-2.8L5.24,7.74C4.46,8.97 4,10.43 4,12c0,4.42 3.58,8 8,8v3l4,-4 -4,-4v3z"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">vector</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>是不是很神奇，vector如何创建：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AppShortcuts6.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>这里随便演示，创建了一个vector，关于vector学习可参考医生的《<a href="http://blog.csdn.net/eclipsexys/article/details/51838119" target="_blank" rel="external">Android Vector曲折的兼容之路</a>》一文，写的很详细，这里不多说了。</p>
<h2 id="app图标"><a href="#app图标" class="headerlink" title="app图标"></a>app图标</h2><p>app当然希望有个漂亮的有意义的图标，会用到Photoshop，我当然不会啊，那必须得学啊。一般安卓市场需要图标尺寸16<em>16，48</em>48，512<em>512，圆角，Android开发需要48</em>48，72<em>72，96</em>96，144<em>144，196</em>196，因此PS的时候，只需要做个最大尺寸512*512，然后缩小即可。<br>图标的PS步骤：<br>1、用photoshop打开您想修改的图片<br>2、在左侧工具栏中选择“圆角矩形工具”（默认的是“矩形工具”，您只需要右击图标就可以发现“圆角矩形工具”），如上图<br>3、在上面“半径”框中输入您想要的圆角半径，一般图片选25即可，为了效果明显我设置为40，看上图有一个框显示半径40.<br>4、在打开的图片上画一个圆角矩形，把图片覆盖住。<br>5、对着已经被覆盖的图片选区右击，选择“建立选区”，如果有窗口弹出直接点击“确定”，在弹出的选项中直接点击“确认”<br>6、在上方的“选择”选项卡中点击，在下拉框中找到“反向”，也可以使用快捷键ctrl+shilf+i。<br>7、在右下方的图层栏中双击“背景”图片（上面第一张图片右下角可以看到），如果有窗口弹出直接点击“确定”，完成解锁。<br>8、按键盘上的”DELETE”键清除四个直角。<br>9、继续右击“形状1”（在画面右下方图层那里可以找到），在弹出选项中选择“删除图层”，如果有窗口弹出直接点击“是”。<br>10、OK，您可以看到一个圆角图片。<br>11、最后在左上角点击文件–》存储为–》选择png格式（其他格式也可以），完成。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan512.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>为什么微言的图标是一个“言”字，因为我觉得这样简洁大方，简单明了，言简意赅……算了，不装了，其他我不会P啊！</p>
<h1 id="推广技巧"><a href="#推广技巧" class="headerlink" title="推广技巧"></a>推广技巧</h1><p>做完一个个人app，是不是很有成就感啊，上线安卓市场，却没几个下载量，尼玛，劳资花了很长时间呢，这么牛B的app怎么没人下载？！心情一下子跌倒谷底，那得让更多的人知道自己的app啊，我是这样做的：</p>
<p>1、邀请好评<br>您去下载一个app时，可能会看下这个app的评论，如果有很多好评，您会不会更愿意去下载呢，是的，来看我的微言好评如潮：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan_good_comment.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>哈哈哈，是不是很牛，邀请评论我写成了工具类了，请笑纳：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InviteCommentUtil</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String mDateFormat = <span class="string">"yyyy-MM-dd"</span>;</div><div class="line">    <span class="keyword">private</span> String mInviteCommentTime;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 选择哪天弹邀请评论框</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">startComment</span><span class="params">(<span class="keyword">final</span> Activity activity)</span> </span>&#123;</div><div class="line">        mInviteCommentTime = PreferenceUtils.getPreferenceString(activity, <span class="string">"inviteCommentTime"</span>, TimeUtil.getCurrentTime(mDateFormat));</div><div class="line">        String saveCommentTime = PreferenceUtils.getPreferenceString(activity, <span class="string">"saveCommentTime"</span>, TimeUtil.getCurrentTime(mDateFormat));</div><div class="line">          <span class="keyword">int</span> compareDateValue = TimeUtil.compareDate(mInviteCommentTime, saveCommentTime, mDateFormat);</div><div class="line">        <span class="keyword">if</span> (compareDateValue == <span class="number">1</span>) &#123;</div><div class="line">            AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(</div><div class="line">                    activity);</div><div class="line">            <span class="keyword">int</span> nowReadingTotal = ReadUtil.getReadedTotal();</div><div class="line">            builder.setMessage(Html.fromHtml(<span class="string">"您已经累计阅读&lt;font color=#FF0000&gt;"</span> + nowReadingTotal + <span class="string">"&lt;/font&gt;字，再接再厉哦！如果喜欢我，希望您能在应用市场给予&lt;font color=#FF0000&gt;五星&lt;/font&gt;好评！"</span>));</div><div class="line">            builder.setTitle(<span class="string">"求好评"</span>);</div><div class="line">            builder.setPositiveButton(<span class="string">"好评鼓励"</span>,</div><div class="line">                    <span class="keyword">new</span> android.content.DialogInterface.OnClickListener() &#123;</div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                            setComment(activity);</div><div class="line">                            <span class="keyword">try</span> &#123;</div><div class="line">                                Intent intent = <span class="keyword">new</span> Intent(</div><div class="line">                                        <span class="string">"android.intent.action.VIEW"</span>);</div><div class="line">                                intent.setData(Uri</div><div class="line">                                        .parse(<span class="string">"market://details?id=com.android.xiaomolongstudio.weiyan"</span>));</div><div class="line">                                activity.startActivity(intent);</div><div class="line">                                activity.overridePendingTransition(</div><div class="line">                                        R.anim.enter_right_to_left, R.anim.exit);</div><div class="line">                            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                                e.printStackTrace();</div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            dialog.dismiss();</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">            builder.setNegativeButton(<span class="string">"下次再说"</span>,</div><div class="line">                    <span class="keyword">new</span> android.content.DialogInterface.OnClickListener() &#123;</div><div class="line"></div><div class="line">                        <span class="meta">@Override</span></div><div class="line">                        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                            setComment(activity);</div><div class="line">                            dialog.dismiss();</div><div class="line">                        &#125;</div><div class="line">                    &#125;);</div><div class="line">            builder.create().show();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * 保存，直到下周再提示</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setComment</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        PreferenceUtils.setPreferenceString(activity, <span class="string">"saveCommentTime"</span>, mInviteCommentTime);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>注意：这里邀请评论时间控制好，不能太频繁了，不然用户会反感的。</p>
<p>2、专注一个市场<br>不知道您有没有发现，某个市场您明明没有发布，却能搜到您的app，没错，一些市场会抓您的这个app，比如豌豆荚，百度，因此策略，专注一个市场，这个市场出名了，还怕其他市场不知道吗？当然我们是争取每个市场都能发布上线，多一个下载是一个。<br>微言位于分类下前排<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan_rank.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>多次进入精品系列<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan_rank2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>如何进入前排或精品，邀请好评是关键的一步。</p>
<p>3、新品推荐<br>新品上线，很多市场有新品推荐，比如小米、妹纸、360、应用宝，一般需要自荐，一旦被推荐，下载量是可观的，微言肯定被推荐过啦。哦，更新版本也算新品哦。</p>
<p>4、微博<br>这是我好哥们教我的，他真的好牛，个人app做的更牛，给您们看一个链接：<a href="http://weibo.com/p/1008082a702d2cb6146485e5dc3d624d31def6" target="_blank" rel="external">http://weibo.com/p/1008082a702d2cb6146485e5dc3d624d31def6</a> ，就知道如何在微博上推广了，没错，就是话题，用两个#号圈起来，发微博，就是一个话题，别人可以这个话题下讨论，无形中形成了推广作用。</p>
<p>5、app分享<br>app分享功能肯定是要做的，万一用户觉得您的这个app很棒，想推荐给好友，结果没分享功能，岂不歇菜，分享微博可以加两个#号圈起来哦。</p>
<p>6、QQ群<br>如果您直接群里发app的下载链接，只会一个结果：被T。像我们程序猿，大部分都是技术群，我的做法是写文章分享我app用的技术，文章会附上app下载地址，然后有这个技术兴趣的人可能询问，这样我就名正言顺地“推广”了，哈哈，我好坏！</p>
<p>以上仅我知道的，不一定有效，毕竟我不是专业的推广人员。</p>
<h1 id="如何赚钱"><a href="#如何赚钱" class="headerlink" title="如何赚钱"></a>如何赚钱</h1><p>万事俱备，只欠东风，当您的用户量足够大的时候，自然有人找您，投资您的app，这个过程前期0收益，耗得精力时间不算，可能还得烧钱，不适合个人开发者，我选择的是赚赚小钱，app加广告的方式。<br>广告平台选择第三方的，最早我使用的多盟，但是一段时间发现我根本没什么收益，感觉多盟扣量好严重，之后尝试多易传媒、艾德思奇、芒果聚合，也使用过点乐积分，发现一些市场不让上线积分类app，放弃之，还有百度移动广告联盟、腾讯的广点通，谷歌的也玩过，收益最稳定属百度的，这点不黑它。<br>至于广告集成，也是提供sdk，自行去他们的官网了解吧。</p>
<h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><p><a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247483753&amp;idx=1&amp;sn=9a6a2052bfc4c58883b72bc02ba97210&amp;chksm=eba827eedcdfaef805812de7e37ed7ddc6fb52244bd3f5b4bca26c225e5e91a42d3862f8c5ce#rd" target="_blank" rel="external">一套完整的Android通用框架</a><br><a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247483752&amp;idx=1&amp;sn=e5a12a53d12dbe80c27ae78af9660b12&amp;chksm=eba827efdcdfaef999ac120869fb3b32508d76f883d1c9b2701c840834a9feef53d0ed9669a3#rd" target="_blank" rel="external">Android Design Support Library使用</a><br><a href="http://mp.weixin.qq.com/s?__biz=MzI4MTQyNDg3Mg==&amp;mid=2247483703&amp;idx=1&amp;sn=0bc01a24c29ec31ffed98838ee9ad2a0&amp;chksm=eba827b0dcdfaea6b95c6f54b7aa3a905b723180ca6feae08c211345327e8b7932efc732ded1#rd" target="_blank" rel="external">AndroidMVPSample</a></p>
<h1 id="联系作者"><a href="#联系作者" class="headerlink" title="联系作者"></a>联系作者</h1><p>我的微信公众号：吴小龙同学，欢迎关注交流~</p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>我的几个app，都是我个人做到了很满意，功能都很完善，以至于我后来觉得没什么好更新的，再加上广告收益好也就一段时间，移动广告商雨后春笋，导致广告单价太低，而且安卓市场对个人开发者各种限制，比如不让上线视频类app；某度，某60必须用自家的加固才让上线app等，就没什么动力继续维护app，做事还是要有动力的，不然活着干吗？不过我知道有人还在坚持做个人app，做的好的，日入几百甚至上千的。app最终目的就是赚钱。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;我们都知道，开发一个app很大程度依赖服务端：服务端提供接口数据，然后我们展示；另外，开发一个app，还需要美工协助切图。没了接口，没了美工，app似乎只能做成单机版或工具类app，真的是这样的吗？先来展示下我的个人app，没有服务端，没有美工完成的，换言之，我干了所有人的活：&lt;br&gt;
    
    </summary>
    
      <category term="App" scheme="http://wuxiaolong.me/categories/App/"/>
    
    
      <category term="PersonalApp" scheme="http://wuxiaolong.me/tags/PersonalApp/"/>
    
  </entry>
  
  <entry>
    <title>Android App Shortcuts</title>
    <link href="http://wuxiaolong.me/2016/10/31/AppShortcuts/"/>
    <id>http://wuxiaolong.me/2016/10/31/AppShortcuts/</id>
    <published>2016-10-31T13:49:53.000Z</published>
    <updated>2016-11-01T12:44:07.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Android 7.1允许您定义应用程序中特定操作的快捷方式。这些快捷键可以显示桌面，例如Nexus和Pixel设备。快捷键可让您的用户在应用程序中快速启动常见或推荐的任务。<br>每个快捷键引用一个或多个意图，每个意图在用户选择快捷方式时在应用程序中启动特定操作。可以表达为快捷方式的操作示例包括：<br><a id="more"></a><br>在跳转页面时将用户导航到特定位置。<br>在通讯应用程式中传送讯息给朋友。<br>在媒体应用中播放电视节目的下一集。<br>在游戏应用程序中加载最后一个保存点。</p>
<p>App Shortcuts，一次最多可为您的应用发布4个快捷方式，当超过4个时，只显示最新四个，动态添加会抛<strong>Max number of dynamic shortcuts exceeded</strong>。但是，用户可以将应用的快捷方式复制到启动器上，从而创建固定的快捷方式。用户可以创建和访问无限数量的固定快捷方式，以触发应用中的操作。</p>
<p>更多介绍：<a href="https://developer.android.com/preview/shortcuts.html" target="_blank" rel="external">https://developer.android.com/preview/shortcuts.html</a></p>
<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AppShortcuts1.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>说明：需要长按桌面图标，然后就可以定义进入自己想要的页面了</p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AppShortcuts2.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>说明：可以长按拖出创建一个固定的快捷方式</p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="xml实现"><a href="#xml实现" class="headerlink" title="xml实现"></a>xml实现</h2><p>1、AndroidManifest.xml<br>启动页，添加<strong>meta-data</strong>标签<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line">    <span class="attr">android:name</span>=<span class="string">".MainActivity"</span></div><div class="line">    <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">    <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span>/&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line">        <span class="attr">android:name</span>=<span class="string">"android.app.shortcuts"</span></div><div class="line">        <span class="attr">android:resource</span>=<span class="string">"@xml/shortcuts"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>2、res/xml/shortcuts.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">shortcuts</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">shortcut</span></span></div><div class="line">        <span class="attr">android:enabled</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_content_copy_24dp"</span></div><div class="line">        <span class="attr">android:shortcutDisabledMessage</span>=<span class="string">"@string/shortcut_disabled_message1"</span></div><div class="line">        <span class="attr">android:shortcutId</span>=<span class="string">"shortcutId1"</span></div><div class="line">        <span class="attr">android:shortcutLongLabel</span>=<span class="string">"@string/shortcut_long_label1"</span></div><div class="line">        <span class="attr">android:shortcutShortLabel</span>=<span class="string">"@string/shortcut_short_label1"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">intent</span></span></div><div class="line">            <span class="attr">android:action</span>=<span class="string">"action1"</span></div><div class="line">            <span class="attr">android:targetClass</span>=<span class="string">"com.wuxiaolong.designsupportlibrarysample.AppShortcutsActivity"</span></div><div class="line">            <span class="attr">android:targetPackage</span>=<span class="string">"com.wuxiaolong.designsupportlibrarysample"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">shortcut</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">shortcut</span></span></div><div class="line">        <span class="attr">android:enabled</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@drawable/ic_share_24dp"</span></div><div class="line">        <span class="attr">android:shortcutDisabledMessage</span>=<span class="string">"@string/shortcut_disabled_message1"</span></div><div class="line">        <span class="attr">android:shortcutId</span>=<span class="string">"shortcutId2"</span></div><div class="line">        <span class="attr">android:shortcutLongLabel</span>=<span class="string">"@string/shortcut_long_label2"</span></div><div class="line">        <span class="attr">android:shortcutShortLabel</span>=<span class="string">"@string/shortcut_short_label2"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">intent</span></span></div><div class="line">            <span class="attr">android:action</span>=<span class="string">"action2"</span></div><div class="line">            <span class="attr">android:targetClass</span>=<span class="string">"com.wuxiaolong.designsupportlibrarysample.BottomNavigationActivity"</span></div><div class="line">            <span class="attr">android:targetPackage</span>=<span class="string">"com.wuxiaolong.designsupportlibrarysample"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">shortcut</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">shortcuts</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>说明：android:shortcutLongLabel和android:shortcutShortLabel，显示文本，默认显示long，当long很长，就显示short；android:targetClass跳转的页面；android:targetPackage包名</p>
<h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><p>添加App Shortcuts<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">ShortcutManager shortcutManager = getSystemService(ShortcutManager.class);</div><div class="line">ShortcutInfo shortcut = <span class="keyword">new</span> ShortcutInfo.Builder(mActivity, <span class="string">"shortcutId3"</span>)</div><div class="line">        .setShortLabel(<span class="string">"Web site"</span>)</div><div class="line">        .setLongLabel(<span class="string">"Open the web site"</span>)</div><div class="line">        .setIcon(Icon.createWithResource(mActivity, R.drawable.ic_link_24dp))</div><div class="line">        .setIntent(<span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(<span class="string">"http://wuxiaolong.me/"</span>)))</div><div class="line">        .build();</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    shortcutManager.setDynamicShortcuts(Arrays.asList(shortcut));</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>删除App Shortcuts<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">ShortcutManager shortcutManager = getSystemService(ShortcutManager.class);</div><div class="line">List&lt;ShortcutInfo&gt; shortcutInfoList = shortcutManager.getDynamicShortcuts();<span class="comment">//可以做个list管理App Shortcuts，这里略</span></div><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">list.add(<span class="string">"shortcutId3"</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    shortcutManager.removeDynamicShortcuts(list);</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>隐藏App Shortcuts<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">ShortcutManager shortcutManager = getSystemService(ShortcutManager.class);</div><div class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</div><div class="line">list.add(<span class="string">"shortcutId3"</span>);</div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">    shortcutManager.disableShortcuts(list);</div><div class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">    e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>这样就实现了App Shortcuts效果了</strong>。</p>
<h1 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h1><p><a href="https://github.com/WuXiaolong/DesignSupportLibrarySample" target="_blank" rel="external">https://github.com/WuXiaolong/DesignSupportLibrarySample</a></p>
<h1 id="感谢"><a href="#感谢" class="headerlink" title="感谢"></a>感谢</h1><p><a href="https://developer.android.com/preview/shortcuts.html" target="_blank" rel="external">官方文档</a><br><a href="https://github.com/pcevikogullari/AndroidShortcuts" target="_blank" rel="external">pcevikogullari/AndroidShortcuts</a></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>App Shortcuts只能在Android 7.1手机才有的效果，很炫很便捷，也不知道国内手机什么时候能看到App Shortcuts真容。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;Android 7.1允许您定义应用程序中特定操作的快捷方式。这些快捷键可以显示桌面，例如Nexus和Pixel设备。快捷键可让您的用户在应用程序中快速启动常见或推荐的任务。&lt;br&gt;每个快捷键引用一个或多个意图，每个意图在用户选择快捷方式时在应用程序中启动特定操作。可以表达为快捷方式的操作示例包括：&lt;br&gt;
    
    </summary>
    
      <category term="SupportLibrary" scheme="http://wuxiaolong.me/categories/SupportLibrary/"/>
    
    
      <category term="AppShortcuts" scheme="http://wuxiaolong.me/tags/AppShortcuts/"/>
    
  </entry>
  
  <entry>
    <title>Android Design Support Library之BottomNavigation</title>
    <link href="http://wuxiaolong.me/2016/10/21/BottomNavigation/"/>
    <id>http://wuxiaolong.me/2016/10/21/BottomNavigation/</id>
    <published>2016-10-21T12:34:57.000Z</published>
    <updated>2016-10-21T14:15:15.392Z</updated>
    
    <content type="html"><![CDATA[<p>随着Android 7.1的的发布，相关的开发工具与套件也一起更新了，包括Android Studio 2.2.2与Support Library 25.0.0。这次Support Library实现了Material Design中的Bottom Navigation设计样式。<br>Bottom Navigation适合3-5个底部菜单，官方规范给的3个菜单设计图是这样的：<br><a id="more"></a><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/bottomNavigation1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>4-5个菜单：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/bottomNavigation2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>更多设计细节规范见：<a href="https://material.google.com/components/bottom-navigation.html" target="_blank" rel="external">https://material.google.com/components/bottom-navigation.html</a></p>
<h1 id="Bottom-Navigation使用"><a href="#Bottom-Navigation使用" class="headerlink" title="Bottom Navigation使用"></a>Bottom Navigation使用</h1><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p>3个菜单：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/bottomNavigation3.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>5个菜单：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/bottomNavigation4.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p><strong>xml</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;android.support.design.widget.BottomNavigationView</div><div class="line">    android:id=&quot;@+id/bottomNavigationView&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;wrap_content&quot;</div><div class="line">    app:itemIconTint=&quot;@color/bottom_item_text_color&quot;</div><div class="line">    app:itemTextColor=&quot;@color/bottom_item_text_color&quot;</div><div class="line">    app:menu=&quot;@menu/menu_bottom_navigation_items&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p>app:itemIconTint：设置菜单图标颜色<br>app:itemTextColor：设置文本颜色</p>
<p>color/bottom_item_text_color.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item android:color=&quot;?android:attr/textColorPrimary&quot; android:state_checked=&quot;true&quot;/&gt;</div><div class="line">    &lt;item android:color=&quot;?android:attr/textColorPrimary&quot; android:state_pressed=&quot;true&quot;/&gt;</div><div class="line">    &lt;item android:color=&quot;?android:attr/textColorSecondary&quot;/&gt;</div><div class="line">&lt;/selector&gt;</div></pre></td></tr></table></figure></p>
<p> app:menu：设置底部菜单 </p>
<p>menu/menu_bottom_navigation_items.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/item1&quot;</div><div class="line">        android:checked=&quot;true&quot;</div><div class="line">        android:icon=&quot;@drawable/ic_content_copy_24dp&quot;</div><div class="line">        android:title=&quot;Text1&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/item2&quot;</div><div class="line">        android:icon=&quot;@drawable/ic_add_24dp&quot;</div><div class="line">        android:title=&quot;Text2&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;item</div><div class="line">        android:id=&quot;@+id/item3&quot;</div><div class="line">        android:icon=&quot;@drawable/ic_link_24dp&quot;</div><div class="line">        android:title=&quot;Text3&quot;/&gt;</div><div class="line">&lt;/menu&gt;</div></pre></td></tr></table></figure></p>
<p><strong>Java</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">BottomNavigationView bottomNavigationView = (BottomNavigationView) findViewById(R.id.bottomNavigationView);</div><div class="line">bottomNavigationView.setOnNavigationItemSelectedListener(new BottomNavigationView.OnNavigationItemSelectedListener() &#123;</div><div class="line">    @Override</div><div class="line">    public boolean onNavigationItemSelected(@NonNull MenuItem item) &#123;</div><div class="line">        switch (item.getItemId()) &#123;</div><div class="line">            case R.id.item1:</div><div class="line">                break;</div><div class="line">            case R.id.item2:</div><div class="line">                break;</div><div class="line">            case R.id.item3:</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<p>就是如此简单，可以愉快玩耍去了。</p>
<h1 id="Bottom-Navigation源码"><a href="#Bottom-Navigation源码" class="headerlink" title="Bottom Navigation源码"></a>Bottom Navigation源码</h1><p>其实自己写个这样的底部菜单效果并不难，官方这个，我对那个点击有个动画效果比较感兴趣，应该是一点击就是对图标和文字进行缩放动画，Bottom Navigation源码涉及4个类BottomNavigationView、BottomNavigationPresenter、BottomNavigationMenuView、BottomNavigationItemView，缩放动画在BottomNavigationItemView里，核心代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public void setChecked(boolean checked) &#123;</div><div class="line">    mItemData.setChecked(checked);</div><div class="line">    ViewCompat.setPivotX(mLargeLabel, mLargeLabel.getWidth() / 2);</div><div class="line">    ViewCompat.setPivotY(mLargeLabel, mLargeLabel.getBaseline());</div><div class="line">    ViewCompat.setPivotX(mSmallLabel, mSmallLabel.getWidth() / 2);</div><div class="line">    ViewCompat.setPivotY(mSmallLabel, mSmallLabel.getBaseline());</div><div class="line">    if (mShiftingMode) &#123;</div><div class="line">        if (checked) &#123;</div><div class="line">            LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams()</div><div class="line">            iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;</div><div class="line">            iconParams.topMargin = mDefaultMargin;</div><div class="line">            mIcon.setLayoutParams(iconParams);</div><div class="line">            mLargeLabel.setVisibility(VISIBLE);</div><div class="line">            ViewCompat.setScaleX(mLargeLabel, 1f);</div><div class="line">            ViewCompat.setScaleY(mLargeLabel, 1f);</div><div class="line">        &#125; else &#123;</div><div class="line">            LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams()</div><div class="line">            iconParams.gravity = Gravity.CENTER;</div><div class="line">            iconParams.topMargin = mDefaultMargin;</div><div class="line">            mIcon.setLayoutParams(iconParams);</div><div class="line">            mLargeLabel.setVisibility(INVISIBLE);</div><div class="line">            ViewCompat.setScaleX(mLargeLabel, 0.5f);</div><div class="line">            ViewCompat.setScaleY(mLargeLabel, 0.5f);</div><div class="line">        &#125;</div><div class="line">        mSmallLabel.setVisibility(INVISIBLE);</div><div class="line">    &#125; else &#123;</div><div class="line">        if (checked) &#123;</div><div class="line">            LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams()</div><div class="line">            iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;</div><div class="line">            iconParams.topMargin = mDefaultMargin + mShiftAmount;</div><div class="line">            mIcon.setLayoutParams(iconParams);</div><div class="line">            mLargeLabel.setVisibility(VISIBLE);</div><div class="line">            mSmallLabel.setVisibility(INVISIBLE);</div><div class="line">            ViewCompat.setScaleX(mLargeLabel, 1f);</div><div class="line">            ViewCompat.setScaleY(mLargeLabel, 1f);</div><div class="line">            ViewCompat.setScaleX(mSmallLabel, mScaleUpFactor);</div><div class="line">            ViewCompat.setScaleY(mSmallLabel, mScaleUpFactor);</div><div class="line">        &#125; else &#123;</div><div class="line">            LayoutParams iconParams = (LayoutParams) mIcon.getLayoutParams()</div><div class="line">            iconParams.gravity = Gravity.CENTER_HORIZONTAL | Gravity.TOP;</div><div class="line">            iconParams.topMargin = mDefaultMargin;</div><div class="line">            mIcon.setLayoutParams(iconParams);</div><div class="line">            mLargeLabel.setVisibility(INVISIBLE);</div><div class="line">            mSmallLabel.setVisibility(VISIBLE);</div><div class="line">            ViewCompat.setScaleX(mLargeLabel, mScaleDownFactor);</div><div class="line">            ViewCompat.setScaleY(mLargeLabel, mScaleDownFactor);</div><div class="line">            ViewCompat.setScaleX(mSmallLabel, 1f);</div><div class="line">            ViewCompat.setScaleY(mSmallLabel, 1f);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    refreshDrawableState();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里设计一个小的文本mSmallLabel和大的文本mLargeLabel，默认大的是隐藏的，xml如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;merge xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;ImageView</div><div class="line">        android:id=&quot;@+id/icon&quot;</div><div class="line">        android:layout_width=&quot;24dp&quot;</div><div class="line">        android:layout_height=&quot;24dp&quot;</div><div class="line">        android:layout_gravity=&quot;center_horizontal&quot;</div><div class="line">        android:layout_marginTop=&quot;@dimen/design_bottom_navigation_margin&quot;</div><div class="line">        android:layout_marginBottom=&quot;@dimen/design_bottom_navigation_margin&quot;</div><div class="line">        android:duplicateParentState=&quot;true&quot; /&gt;</div><div class="line">    &lt;android.support.design.internal.BaselineLayout</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:layout_marginBottom=&quot;@dimen/design_bottom_navigation_margin&quot;</div><div class="line">        android:layout_gravity=&quot;bottom|center_horizontal&quot;</div><div class="line">        android:duplicateParentState=&quot;true&quot;&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/smallLabel&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:textSize=&quot;@dimen/design_bottom_navigation_text_size&quot;</div><div class="line">            android:duplicateParentState=&quot;true&quot; /&gt;</div><div class="line">        &lt;TextView</div><div class="line">            android:id=&quot;@+id/largeLabel&quot;</div><div class="line">            android:layout_width=&quot;wrap_content&quot;</div><div class="line">            android:layout_height=&quot;wrap_content&quot;</div><div class="line">            android:visibility=&quot;invisible&quot;</div><div class="line">            android:textSize=&quot;@dimen/design_bottom_navigation_active_text_size&quot;</div><div class="line">            android:duplicateParentState=&quot;true&quot; /&gt;</div><div class="line">    &lt;/android.support.design.internal.BaselineLayout&gt;</div><div class="line">&lt;/merge&gt;</div></pre></td></tr></table></figure></p>
<p>mShiftingMode是否是3个菜单标识。<br>看代码才知道，图标并没有做缩放动画，当4/5个菜单时，文本和图标有6dp距离，即mShiftAmount值，这点设计图有标哦。<br>没有checked时，图标margin是8dp，当文本mLargeLabel显示，图标和文本margin是6dp，造成图标也缩放的错觉。<br>其他代码都很简单，不注释了。<br>好了，如果对Bottom Navigation源码感兴趣，可自行去查看。</p>
<h1 id="demo地址"><a href="#demo地址" class="headerlink" title="demo地址"></a>demo地址</h1><p><a href="https://github.com/WuXiaolong/DesignSupportLibrarySample" target="_blank" rel="external">https://github.com/WuXiaolong/DesignSupportLibrarySample</a>，下载运行，Bottom Navigation入口：左侧菜单-其他组件-Bottom navigation，over。</p>
<h1 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h1><p><a href="http://wuxiaolong.me/categories/SupportLibrary/">http://wuxiaolong.me/categories/SupportLibrary/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着Android 7.1的的发布，相关的开发工具与套件也一起更新了，包括Android Studio 2.2.2与Support Library 25.0.0。这次Support Library实现了Material Design中的Bottom Navigation设计样式。&lt;br&gt;Bottom Navigation适合3-5个底部菜单，官方规范给的3个菜单设计图是这样的：&lt;br&gt;
    
    </summary>
    
      <category term="SupportLibrary" scheme="http://wuxiaolong.me/categories/SupportLibrary/"/>
    
    
      <category term="BottomNavigation" scheme="http://wuxiaolong.me/tags/BottomNavigation/"/>
    
  </entry>
  
  <entry>
    <title>9月13日</title>
    <link href="http://wuxiaolong.me/2016/10/13/913/"/>
    <id>http://wuxiaolong.me/2016/10/13/913/</id>
    <published>2016-10-13T12:28:24.000Z</published>
    <updated>2016-10-16T12:35:12.257Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>对于生日，没有什么在意的。                                                                                      </p>
</blockquote>
<p>89年的今天，一个逗比的小孩出生了！辛苦妈妈了！<br><a id="more"></a></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/IMG_1307.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>小时候过生日的影响，就是加两个蛋，然后就算过生日了，因此后来的生日没什么在意的，记得有年，生日都忘记了，隔天妈妈才跟我讲，你一个生日，哈哈，随便过过好了。</p>
<p>话说我总觉得我还是个孩子，怎么就这么老了啊，真的不敢相信！学生时代的人生都不属于自己的，我们的人生真正开始于上班，我们开始自己独立更生，不再依附父母。我也是这样的，工作之后就再也没有向家里要过钱，刚刚工作那微薄的工资也只能保保自己，过年也没有给父母钱，第二年向家里象征性交了点钱，我月月月光负族，根本没存款。15年我结婚了，有了自己家庭，好吧，先成家再立业，如今小孩有了，何时立业呢？</p>
<p>回想我几份工作，也就第一家公司好些，今年上市了，第二家公司做了5个月倒闭了，还欠了2个月工资没给，告到法院，却找不到法人不了了之，第三家国企性质，按照要求试用期6个月（可提前转正），感觉那年都在试用期，好悲催！现在这份工作是年初换了，公司刚刚度过一波危机，今年资本寒冬，都不好过啊。公司如果稳定，建议少换，尤其是无锡这样软件不景气的城市，换来换去还是小喽喽，一家公司待长，机会应该会大些，不知道有没有发现，做移动很难做到lead，lead大部分是后台的。</p>
<p>我给我自己的期限是30岁，也许以后创业吧，今年创业没什么想法了，可能是因为有了宝宝，需要稳定，之前内心还是比较强烈，想做个app，万一火了成功了呢，不过这个创业的想法没有放弃，当下是一个积累的过程，不管是知识、见识、经济、人脉…30岁，留给我的时间不多了啊！</p>
<p>男人还是要以事业为重，有一番事才再能为家庭更好的服务，哎，男人好辛苦啊，哎，还是祝自己生日快乐吧，今晚不撸码！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;对于生日，没有什么在意的。                                                                                      &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;89年的今天，一个逗比的小孩出生了！辛苦妈妈了！&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wuxiaolong.me/categories/Life/"/>
    
    
      <category term="9月13日" scheme="http://wuxiaolong.me/tags/9%E6%9C%8813%E6%97%A5/"/>
    
  </entry>
  
  <entry>
    <title>Markdown常用语法</title>
    <link href="http://wuxiaolong.me/2016/10/11/markdownGuide/"/>
    <id>http://wuxiaolong.me/2016/10/11/markdownGuide/</id>
    <published>2016-10-11T14:57:51.000Z</published>
    <updated>2016-10-10T15:27:44.782Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Markdown是什么，我还真不知道，嘿嘿，最初接触markdown，是因为github的README.md，知道这肯定是文本，却是md结尾的，于是了解并自学了点markdown语法，也庆幸那点好奇，才为后来的个人博客做了基础，写博客用markdown还是很便捷的。</p>
</blockquote>
<p>Markdown的语法全由一些符号所组成，易读易写。本文主要分享我平时经常使用到的Markdown语法。</p>
<a id="more"></a>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><h2 id="单引用"><a href="#单引用" class="headerlink" title="单引用"></a>单引用</h2><p>使用符号 <strong>&gt;</strong> 标记区块引用，如：<br>> 我的微信公众号：吴小龙同学，不止于技术分享。<br>效果如下：</p>
<blockquote>
<p>我的微信公众号：吴小龙同学，不止于技术分享。</p>
</blockquote>
<h2 id="引用内的引用"><a href="#引用内的引用" class="headerlink" title="引用内的引用"></a>引用内的引用</h2><p><strong>&gt;</strong> 标记再使用<strong>&gt;&gt;</strong> 标记，如：<br>> 我的微信公众号：吴小龙同学<br>>&gt; 不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br>效果如下：</p>
<blockquote>
<p>我的微信公众号：吴小龙同学</p>
<blockquote>
<p>不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。</p>
</blockquote>
</blockquote>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><p>1、用底线的形式，= （第一阶标题）和 - （第二阶标题），数量不限，如：</p>
<p>效果是截图，左边是语法，右边是效果，下同。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/markdowm1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>2、行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，如：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/markdowm2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><strong>我比较喜欢用第二种语法</strong>。</p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>[吴小龙同學](<a href="http://wuxiaolong.me/">http://wuxiaolong.me/</a>)<br>效果如下：<br><a href="http://wuxiaolong.me/">吴小龙同學</a></p>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>![我的公众号](<a href="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" target="_blank" rel="external">http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg</a>)<br>前面的文本可不写，效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt="吴小龙同學"></p>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/markdowm4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>java代表代码语言，效果如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PaintCanvas</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> Paint mPaint;</div><div class="line"></div><div class="line">    <span class="comment">// 省略构造方法</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;       </div><div class="line">        mPaint = <span class="keyword">new</span> Paint();</div><div class="line">        mPaint.setAntiAlias(<span class="keyword">true</span>);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</div><div class="line">        canvas.drawCircle(<span class="number">500</span>, <span class="number">550</span>, <span class="number">500</span>, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="横线"><a href="#横线" class="headerlink" title="横线"></a>横线</h1><p>比如代码过时，会有一个横线，可用分别用两个<strong>~</strong>包含内容表示，~~ android:singleLine=”true”~~ (并没有空格，为了演示)，效果如下：<br><del>android:singleLine=”true”</del></p>
<h1 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h1><p>用一个*或__包含内容，不要演示，直接展示效果如下：</p>
<p><em>我的微信公众号：吴小龙同学。</em></p>
<h1 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h1><p>用两个*或__包含内容，直接展示效果如下：</p>
<p><strong>我的微信公众号：吴小龙同学。</strong></p>
<h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><p>三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西</p>
<hr>
<hr>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><p>使用*、+、—作为列表标记，如：</p>
<p>* 我的微信公众号：吴小龙同学<br>* 我的微信公众号：吴小龙同学<br>* 我的微信公众号：吴小龙同学</p>
<p>+ 我的微信公众号：吴小龙同学<br>+ 我的微信公众号：吴小龙同学<br>+ 我的微信公众号：吴小龙同学</p>
<p>- 我的微信公众号：吴小龙同学<br>- 我的微信公众号：吴小龙同学<br>- 我的微信公众号：吴小龙同学</p>
<p>三种写法都是如下效果：</p>
<ul>
<li>我的微信公众号：吴小龙同学</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><p>只要数字接着一个英文句点，如：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/markdowm3.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>Markdown语法介绍完毕，欢迎补充。通篇都是以我的公众号示例，看样子你有必要关注一下，哈哈哈。</p>
<!--# 微信公众号
我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点。
![](http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg)-->]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Markdown是什么，我还真不知道，嘿嘿，最初接触markdown，是因为github的README.md，知道这肯定是文本，却是md结尾的，于是了解并自学了点markdown语法，也庆幸那点好奇，才为后来的个人博客做了基础，写博客用markdown还是很便捷的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Markdown的语法全由一些符号所组成，易读易写。本文主要分享我平时经常使用到的Markdown语法。&lt;/p&gt;
    
    </summary>
    
      <category term="Markdown" scheme="http://wuxiaolong.me/categories/Markdown/"/>
    
    
      <category term="Markdown" scheme="http://wuxiaolong.me/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>关于Android命名规范</title>
    <link href="http://wuxiaolong.me/2016/10/08/AndroidNameSample/"/>
    <id>http://wuxiaolong.me/2016/10/08/AndroidNameSample/</id>
    <published>2016-10-08T12:27:54.000Z</published>
    <updated>2016-10-08T12:34:08.114Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>第一家公司是如此的重要，如果开发流程规范，对你之后的影响不是一般的大！而我经历的公司大都不成体系，我的习惯就是我的规范！哈哈！</p>
</blockquote>
<a id="more"></a>
<p>很多的技术人员，恐怕都认为除了自己的作品外，别人写的代码都是“垃圾”。接手别人的项目，如果对方代码规范，是好事，可以学学人家如何写的，如果代码随意，那就蛋疼了，像我这种强迫症患者，一刻都不能忍，分分钟就想重构！</p>
<p>下面列举几个我接盘项目遗留的坑：</p>
<h1 id="包名"><a href="#包名" class="headerlink" title="包名"></a>包名</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidNameSample1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>包名全部小写编写，连续的单词只是简单地连接起来，不使用下划线。</p>
<h1 id="类名"><a href="#类名" class="headerlink" title="类名"></a>类名</h1><h2 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidNameSample2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>类名都以UpperCamelCase风格编写，大驼峰式命名法，即每个单词都是首字母大写。</p>
<h2 id="中英文混用"><a href="#中英文混用" class="headerlink" title="中英文混用"></a>中英文混用</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidNameSample3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>如果都是拼音或英文命名，无可厚非，但是混用，显得不伦不类，这里墙裂建议都是英语命名，不会的单词有谷歌。</p>
<h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidNameSample4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>变量名只能是字母（a-z A-Z），下划线（_），或者美元符号($)开始，数字不能放在变量名首位，通常第一个单词的首字母小写，其他单词首字母大写。</p>
<h1 id="方法名"><a href="#方法名" class="headerlink" title="方法名"></a>方法名</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/AndroidNameSample6.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>方法名都以lowerCamelCase风格编写，小驼峰式命名法，即首字母小写，其他单词都是首字母大写。</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>这些都是最简单不过，稍微注意一下就可以了，习惯的养成真的很重要，毕竟开发不是仅你一个人，代码规范还是必要的，你能受不得别人说你的写的代码是垃圾吗？给别人留下好项目就等于给自己留下好项目，万一哪天烂项目又辗转到你手上呢！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;第一家公司是如此的重要，如果开发流程规范，对你之后的影响不是一般的大！而我经历的公司大都不成体系，我的习惯就是我的规范！哈哈！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Android" scheme="http://wuxiaolong.me/categories/Android/"/>
    
    
      <category term="Android" scheme="http://wuxiaolong.me/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>微言-源码售卖</title>
    <link href="http://wuxiaolong.me/2016/09/12/weiyanChild/"/>
    <id>http://wuxiaolong.me/2016/09/12/weiyanChild/</id>
    <published>2016-09-12T14:20:43.000Z</published>
    <updated>2016-09-12T15:19:30.798Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>资本寒冬，导致我已经两个月没发工资了，买个尿不湿都得咬牙考虑下，为了现在这个宝宝，只能卖掉微言这个“孩子”了。</p>
<p>微言算我第一个个人App，初衷是想通过这个App达到练手，并熟悉Android项目的创建到发布上线的整个流程，明显这个目标达到了。实在抱歉，很多人问我微言源码在哪里能看，因为我一直还在维护这个项目，因此未开源出来，我的github另外有个开源项目<a href="https://github.com/WuXiaolong/WeWin" target="_blank" rel="external">WeWin</a>，也是一个不错的练手项目。</p>
<p>微言从开始无言知晓到精品系列APP，我花了很多精力和时间，他就像我的孩子一样，伴他成长起来的！</p>
<a id="more"></a>
<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan1.gif" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan2.gif" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyan3.gif" alt=""></p>
<h1 id="好评如潮"><a href="#好评如潮" class="headerlink" title="好评如潮"></a>好评如潮</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/comment.jpg" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/rank3.png" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/rank2.jpg" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/rank1.png" alt=""></p>
<h1 id="二维码下载"><a href="#二维码下载" class="headerlink" title="二维码下载"></a>二维码下载</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/weiyanAppDownload.png" alt=""></p>
<h1 id="我的收获"><a href="#我的收获" class="headerlink" title="我的收获"></a>我的收获</h1><p>1、广告费<br>总共赚了一两万广告费，13年年底开始搞，从一个月几十块，到最好一个月四千多。<br>2、Photoshop<br>没有美工，只能自己学着做一些简单的图片<br>3、产品意识<br>最重要一点，至于做成什么样子的应用，一开始根本不知道，更不知道“产品”，主观意识做一款励志的，后来认知到产品概念，想把微言做的更好，而不是纯粹地练手，其实其中好多功能不是我凭空想出来的，是用户反馈的。</p>
<h1 id="源码售卖"><a href="#源码售卖" class="headerlink" title="源码售卖"></a>源码售卖</h1><p>我还从来感受觉得生活多么艰辛，即使刚刚毕业工资才1.5K，我也觉得生活挺好，但如今不一样，不是我一个人吃好就好就行了，口袋里没有一点票子，这点让我很焦虑。如果您对微言有兴趣，欢迎私聊我，我的QQ1413129987，另外一个作品【<a href="http://app.mi.com/details?id=com.android.xiaomolongstudio.danhuaer" target="_blank" rel="external">今日情感</a>】也售卖，效果预览：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/todayEmotionAppScreenshots.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;资本寒冬，导致我已经两个月没发工资了，买个尿不湿都得咬牙考虑下，为了现在这个宝宝，只能卖掉微言这个“孩子”了。&lt;/p&gt;
&lt;p&gt;微言算我第一个个人App，初衷是想通过这个App达到练手，并熟悉Android项目的创建到发布上线的整个流程，明显这个目标达到了。实在抱歉，很多人问我微言源码在哪里能看，因为我一直还在维护这个项目，因此未开源出来，我的github另外有个开源项目&lt;a href=&quot;https://github.com/WuXiaolong/WeWin&quot;&gt;WeWin&lt;/a&gt;，也是一个不错的练手项目。&lt;/p&gt;
&lt;p&gt;微言从开始无言知晓到精品系列APP，我花了很多精力和时间，他就像我的孩子一样，伴他成长起来的！&lt;/p&gt;
    
    </summary>
    
      <category term="App" scheme="http://wuxiaolong.me/categories/App/"/>
    
    
      <category term="weiyan" scheme="http://wuxiaolong.me/tags/weiyan/"/>
    
  </entry>
  
  <entry>
    <title>一套完整的Android通用框架</title>
    <link href="http://wuxiaolong.me/2016/09/07/MyAndroidLibrary/"/>
    <id>http://wuxiaolong.me/2016/09/07/MyAndroidLibrary/</id>
    <published>2016-09-07T13:01:10.000Z</published>
    <updated>2016-09-08T12:21:19.886Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>现在做Android开发，已经是大好时机，网上有很多成熟的框架，我们应充分利用好这些，所谓前人种树后人好乘凉，很多时候压根不需要了解太多原理，只需站在巨人的丁丁上即可，当然您说您能力强，非要重复造轮子，无可厚非。</p>
</blockquote>
<h1 id="MVP模式"><a href="#MVP模式" class="headerlink" title="MVP模式"></a>MVP模式</h1><a id="more"></a>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/mvp.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="MVP"><a href="#MVP" class="headerlink" title="MVP"></a>MVP</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Android MVP Sample，MVP+Retrofit+RxJava实践小结</p>
<h3 id="github地址"><a href="#github地址" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/WuXiaolong/AndroidMVPSample" target="_blank" rel="external">https://github.com/WuXiaolong/AndroidMVPSample</a></p>
<h3 id="相关博客"><a href="#相关博客" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/">Android MVP+Retrofit+RxJava实践小结</a><br><a href="http://wuxiaolong.me/2015/09/23/AndroidMVPSample/">Android MVP 实例</a></p>
<h1 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h1><h2 id="butterknife"><a href="#butterknife" class="headerlink" title="butterknife"></a>butterknife</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/butterknife.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>Bind Android views and callbacks to fields and methods 将Android视图和回调方法绑定到字段和方法上</p>
<h3 id="github地址-1"><a href="#github地址-1" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">https://github.com/JakeWharton/butterknife</a></p>
<h3 id="相关博客-1"><a href="#相关博客-1" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://jakewharton.github.io/butterknife/" target="_blank" rel="external">butterknife官网</a></p>
<h1 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h1><h2 id="Retrofit"><a href="#Retrofit" class="headerlink" title="Retrofit"></a>Retrofit</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/retrofit2.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h3><p>Type-safe HTTP client for Android and Java by Square 类型安全的Http客户端</p>
<h3 id="github地址-2"><a href="#github地址-2" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/square/retrofit" target="_blank" rel="external">https://github.com/square/retrofit</a></p>
<h3 id="相关博客-2"><a href="#相关博客-2" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2016/06/18/retrofits/">Android Retrofit 2.0 使用-补充篇</a><br><a href="http://wuxiaolong.me/2016/01/15/retrofit/">Android Retrofit 2.0使用</a><br><a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit官网</a></p>
<h1 id="图片加载"><a href="#图片加载" class="headerlink" title="图片加载"></a>图片加载</h1><h2 id="glide"><a href="#glide" class="headerlink" title="glide"></a>glide</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/glide_logo.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-3"><a href="#简介-3" class="headerlink" title="简介"></a>简介</h3><p>An image loading and caching library for Android focused on smooth scrolling  一个图片加载和缓存的库</p>
<h3 id="github地址-3"><a href="#github地址-3" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/bumptech/glide" target="_blank" rel="external">https://github.com/bumptech/glide</a></p>
<h2 id="picasso"><a href="#picasso" class="headerlink" title="picasso"></a>picasso</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/glide.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-4"><a href="#简介-4" class="headerlink" title="简介"></a>简介</h3><p>A powerful image downloading and caching library for Android 一个强大的图片下载与缓存的库</p>
<h3 id="github地址-4"><a href="#github地址-4" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/square/picasso" target="_blank" rel="external">https://github.com/square/picasso</a></p>
<h3 id="相关博客-3"><a href="#相关博客-3" class="headerlink" title="相关博客"></a>相关博客</h3><p><strong>Glide 系列预览</strong><br><a href="http://mrfu.me/2016/02/27/Glide_Getting_Started/" target="_blank" rel="external">开始！</a><br><a href="http://mrfu.me/2016/02/27/Glide_Advanced_Loading/" target="_blank" rel="external">加载进阶</a><br><a href="http://mrfu.me/2016/02/27/Glide_ListAdapter_(ListView,_GridView" target="_blank" rel="external">ListAdapter(ListView, GridView)</a>/)<br><a href="http://mrfu.me/2016/02/27/Glide_Placeholders_&amp;_Fade_Animations/" target="_blank" rel="external">占位符 和 渐现动画</a><br><a href="http://mrfu.me/2016/02/27/Glide_Image_Resizing_&amp;_Scaling/" target="_blank" rel="external">图片重设大小 和 缩放</a><br><a href="http://mrfu.me/2016/02/27/Glide_Displaying_Gifs_&amp;_Videos/" target="_blank" rel="external">显示 Gif 和 Video</a><br><a href="http://mrfu.me/2016/02/27/Glide_Caching_Basics/" target="_blank" rel="external">缓存基础</a><br><a href="http://mrfu.me/2016/02/27/Glide_Request_Priorities/" target="_blank" rel="external">请求优先级</a><br><a href="http://mrfu.me/2016/02/27/Glide_Thumbnails/" target="_blank" rel="external">缩略图</a><br><a href="http://mrfu.me/2016/02/27/Glide_Callbacks_SimpleTarget_and_ViewTarget_for_Custom_View_Classes/" target="_blank" rel="external">回调：SimpleTarget 和 ViewTarget 用于自定义视图类</a><br><a href="http://mrfu.me/2016/02/27/Glide_Loading_Images_into_Notifications_and_AppWidgets/" target="_blank" rel="external">加载图片到通知栏和应用小部件中</a><br><a href="http://mrfu.me/2016/02/28/Glide_Exceptions-_Debugging_and_Error_Handling/" target="_blank" rel="external">异常：调试和错误处理</a><br><a href="http://mrfu.me/2016/02/28/Glide_Custom_Transformations/" target="_blank" rel="external">自定义转换</a><br><a href="http://mrfu.me/2016/02/28/Glide_Custom_Transformations/" target="_blank" rel="external">用 animate() 自定义动画</a><br><a href="http://mrfu.me/2016/02/28/Glide_Integrating_Networking_Stacks/" target="_blank" rel="external">集成网络栈</a><br><a href="http://mrfu.me/2016/02/28/Glide_Customize_Glide_with_Modules/" target="_blank" rel="external">用 Module 自定义 Glide</a><br><a href="http://mrfu.me/2016/02/28/Glide_Module_Example_Accepting_Self-Signed_HTTPS_Certificates/" target="_blank" rel="external">Module 实例：接受自签名证书的 HTTPS</a><br><a href="http://mrfu.me/2016/02/28/Glide_Module_Example_Customize_Caching/" target="_blank" rel="external">Module 实例：自定义缓存</a><br><a href="http://mrfu.me/2016/02/28/Glide_Module_Example_Optimizing/" target="_blank" rel="external">Module 实例：用自定义尺寸优化加载的图片</a><br><a href="http://mrfu.me/2016/02/28/Glide_Dynamically_Use_Model_Loaders/" target="_blank" rel="external">动态使用 Model Loader</a><br><a href="http://mrfu.me/2016/02/28/Glide_How_to_Rotate_Images/" target="_blank" rel="external">如何旋转图像</a><br><a href="http://mrfu.me/2016/02/28/Glide_Series_Roundup/" target="_blank" rel="external">系列综述</a></p>
<p><strong>Picasso</strong><br><a href="http://wuxiaolong.me/2015/09/14/Picasso/">github之Picasso使用</a></p>
<h1 id="图片操作"><a href="#图片操作" class="headerlink" title="图片操作"></a>图片操作</h1><h2 id="PhotoView"><a href="#PhotoView" class="headerlink" title="PhotoView"></a>PhotoView</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PhotoView.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-5"><a href="#简介-5" class="headerlink" title="简介"></a>简介</h3><p>Implementation of ImageView for Android that supports zooming, by various touch gestures 图片缩放</p>
<h3 id="github地址-5"><a href="#github地址-5" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/chrisbanes/PhotoView" target="_blank" rel="external">https://github.com/chrisbanes/PhotoView</a></p>
<h3 id="相关博客-4"><a href="#相关博客-4" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2015/09/14/PhotoView/">github之PhotoView使用</a></p>
<h2 id="uCrop"><a href="#uCrop" class="headerlink" title="uCrop"></a>uCrop</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/ucrop0.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-6"><a href="#简介-6" class="headerlink" title="简介"></a>简介</h3><p>Image Cropping Library for Android 图片裁剪</p>
<h3 id="github地址-6"><a href="#github地址-6" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/Yalantis/uCrop" target="_blank" rel="external">https://github.com/Yalantis/uCrop</a></p>
<h3 id="相关博客-5"><a href="#相关博客-5" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2016/06/20/uCrop/">uCrop使用及源码浅析</a></p>
<h2 id="CircleImageView"><a href="#CircleImageView" class="headerlink" title="CircleImageView"></a>CircleImageView</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/CircleImageView.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-7"><a href="#简介-7" class="headerlink" title="简介"></a>简介</h3><p>A circular ImageView for Android 圆头像</p>
<h3 id="github地址-7"><a href="#github地址-7" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/hdodenhof/CircleImageView" target="_blank" rel="external">https://github.com/hdodenhof/CircleImageView</a></p>
<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="Realm"><a href="#Realm" class="headerlink" title="Realm"></a>Realm</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/realm.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-8"><a href="#简介-8" class="headerlink" title="简介"></a>简介</h3><p>Realm is a mobile database: a replacement for SQLite &amp; ORMs</p>
<h3 id="github地址-8"><a href="#github地址-8" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/realm/realm-java" target="_blank" rel="external">https://github.com/realm/realm-java</a></p>
<h3 id="相关博客-6"><a href="#相关博客-6" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="https://realm.io/cn/docs/java/latest/#getting-started" target="_blank" rel="external">Realm官网</a></p>
<h1 id="响应式编程"><a href="#响应式编程" class="headerlink" title="响应式编程"></a>响应式编程</h1><h2 id="RxJava"><a href="#RxJava" class="headerlink" title="RxJava"></a>RxJava</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/rxjava.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-9"><a href="#简介-9" class="headerlink" title="简介"></a>简介</h3><p>RxJava – Reactive Extensions for the JVM – a library for composing asynchronous and event-based programs using observable sequences for the Java VM</p>
<h3 id="github地址-9"><a href="#github地址-9" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">https://github.com/ReactiveX/RxJava</a></p>
<h3 id="相关博客-7"><a href="#相关博客-7" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2016/01/18/rxjava/">RxJava</a><br><a href="http://rxjava.yuxingxin.com/" target="_blank" rel="external">RxJava Essentials CN</a><br><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="external">ReactiveX文档中文翻译</a><br><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">给 Android 开发者的 RxJava 详解</a></p>
<h1 id="事件总线"><a href="#事件总线" class="headerlink" title="事件总线"></a>事件总线</h1><h2 id="RxBus"><a href="#RxBus" class="headerlink" title="RxBus"></a>RxBus</h2><h3 id="简介-10"><a href="#简介-10" class="headerlink" title="简介"></a>简介</h3><p>基于RxJava写的事件总线</p>
<h3 id="相关博客-8"><a href="#相关博客-8" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="http://wuxiaolong.me/2016/04/07/rxbus/">RxBus</a></p>
<h1 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h1><h2 id="PullLoadMoreRecyclerView"><a href="#PullLoadMoreRecyclerView" class="headerlink" title="PullLoadMoreRecyclerView"></a>PullLoadMoreRecyclerView</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PullLoadMoreRecyclerView.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h3 id="简介-11"><a href="#简介-11" class="headerlink" title="简介"></a>简介</h3><p>实现RecyclerView下拉刷新和上拉加载更多以及RecyclerView线性、网格、瀑布流效果演示。适用于只需要简单地实现下拉刷新和上拉加载效果。</p>
<h3 id="github地址-10"><a href="#github地址-10" class="headerlink" title="github地址"></a>github地址</h3><p><a href="https://github.com/WuXiaolong/PullLoadMoreRecyclerView" target="_blank" rel="external">https://github.com/WuXiaolong/PullLoadMoreRecyclerView</a></p>
<h3 id="相关博客-9"><a href="#相关博客-9" class="headerlink" title="相关博客"></a>相关博客</h3><p><a href="https://github.com/WuXiaolong/PullLoadMoreRecyclerView/blob/master/README.md" target="_blank" rel="external">PullLoadMoreRecyclerView</a></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>知道了解以上开源框架，开发又何忧！我总结的可能还不够全，如果您觉得实际项目中还有必用到的库，欢迎留言哈。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;现在做Android开发，已经是大好时机，网上有很多成熟的框架，我们应充分利用好这些，所谓前人种树后人好乘凉，很多时候压根不需要了解太多原理，只需站在巨人的丁丁上即可，当然您说您能力强，非要重复造轮子，无可厚非。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;MVP模式&quot;&gt;&lt;a href=&quot;#MVP模式&quot; class=&quot;headerlink&quot; title=&quot;MVP模式&quot;&gt;&lt;/a&gt;MVP模式&lt;/h1&gt;
    
    </summary>
    
      <category term="Library" scheme="http://wuxiaolong.me/categories/Library/"/>
    
    
      <category term="Library" scheme="http://wuxiaolong.me/tags/Library/"/>
    
  </entry>
  
  <entry>
    <title>Android 画布Canvas</title>
    <link href="http://wuxiaolong.me/2016/08/27/Canvas/"/>
    <id>http://wuxiaolong.me/2016/08/27/Canvas/</id>
    <published>2016-08-27T08:28:30.000Z</published>
    <updated>2016-08-25T11:38:52.900Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>写完 <a href="http://wuxiaolong.github.io/2016/08/20/Paint/" target="_blank" rel="external">Android 画笔Paint</a>，自然少不了Canvas画布，本文延续上篇风格，一一来过Canvas API。</p>
</blockquote>
<h1 id="绘制方法"><a href="#绘制方法" class="headerlink" title="绘制方法"></a>绘制方法</h1><p>以drawXXX为主的绘制方法，api如下：<br><a id="more"></a><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawARGB"><a href="#drawARGB" class="headerlink" title="drawARGB"></a>drawARGB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void drawARGB (int a,int r,int g,int b)</div></pre></td></tr></table></figure>
<p>统一颜色绘制，四个参数取值范围0~255</p>
<h2 id="drawArc"><a href="#drawArc" class="headerlink" title="drawArc"></a>drawArc</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">void drawArc (RectF oval, </div><div class="line">                float startAngle, </div><div class="line">                float sweepAngle, </div><div class="line">                boolean useCenter, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制弧面或弧线。对于绘制对应图形的填充面，还是图形的轮廓线，这在于画笔Paint中的setStyle。<br>oval：矩形；<br>startAngle：起点角度，0度的角度对应于0度的几何角（在手表3点钟）；<br>sweepAngle：顺时针扫过的角度；<br>useCenter：弧面或弧线；<br>paint：画笔</p>
<p><strong>弧面</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">RectF rectF = new RectF(100f, 100f, 500f, 500f);</div><div class="line">canvas.drawArc(rectF, 0, 150, true, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas5.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><strong>弧线</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">RectF rectF = new RectF(100f, 100f, 500f, 500f);</div><div class="line">canvas.drawArc(rectF, 0, 150, false, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas6.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawBitmap"><a href="#drawBitmap" class="headerlink" title="drawBitmap"></a>drawBitmap</h2><p>绘制使用指定的矩阵的位图。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//方法1</div><div class="line">void drawBitmap (Bitmap bitmap, </div><div class="line">                float left, </div><div class="line">                float top, </div><div class="line">                Paint paint) </div><div class="line"></div><div class="line">//方法2               </div><div class="line">void drawBitmap (Bitmap bitmap, </div><div class="line">                Rect src, </div><div class="line">                Rect dst, </div><div class="line">                Paint paint)</div><div class="line">//方法3               </div><div class="line">void drawBitmap (Bitmap bitmap, </div><div class="line">                Matrix matrix, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure></p>
<p>例子代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mBitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.logo);</div><div class="line"></div><div class="line">canvas.drawBitmap(mBitmap, 0, 0, mPaint);</div><div class="line"></div><div class="line">//绘制Bitmap的一部分，并对其拉伸</div><div class="line">//srcRect绘制Bitmap的哪一部分</div><div class="line">Rect src = new Rect(0, 0, mBitmap.getWidth(), mBitmap.getHeight() / 3);</div><div class="line">//dstRecF绘制的Bitmap拉伸到哪里</div><div class="line">RectF dst = new RectF(0, mBitmap.getHeight(), canvas.getWidth(), mBitmap.getHeight() + 200);</div><div class="line">canvas.drawBitmap(mBitmap, src, dst, mPaint);</div><div class="line"></div><div class="line">Matrix matrix = new Matrix();</div><div class="line">matrix.postTranslate(0, mBitmap.getHeight() + 200);</div><div class="line">canvas.drawBitmap(mBitmap, matrix, mPaint);</div></pre></td></tr></table></figure></p>
<p>效果图从上至下，分别对应方法1-3<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas7.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawBitmapMesh"><a href="#drawBitmapMesh" class="headerlink" title="drawBitmapMesh"></a>drawBitmapMesh</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">void drawBitmapMesh (Bitmap bitmap, </div><div class="line">                int meshWidth, </div><div class="line">                int meshHeight, </div><div class="line">                float[] verts, </div><div class="line">                int vertOffset, </div><div class="line">                int[] colors, </div><div class="line">                int colorOffset, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制网格顶点被均匀地分布在该位图<br>bitmap：位图<br>meshWidth：横向上把该源位图划成成多少格<br>meshHeight：竖向上把该源位图划成成多少格<br>verts：长度为(meshWidth + 1) <em> (meshHeight + 1) </em> 2的数组，它记录了扭曲后的位图各顶点位置<br>vertOffset：控制verts数组中从第几个数组元素开始才对bitmap进行扭曲<br>colors：可以为null，指定在每个顶点，其值由对应的位图颜色相乘内插的颜色。如果不为空，必须有至少（meshWidth+ 1）*（meshHeight+ 1）+ colorOffset数组中的值。<br>colorOffset    int: Number of color elements to skip before drawing<br>paint：画笔，可以为null</p>
<p>效果参考博客 <a href="http://blog.csdn.net/u010947098/article/details/44731781" target="_blank" rel="external">Android Canvas的drawBitmapMesh实现扭曲图像</a></p>
<h2 id="drawCircle"><a href="#drawCircle" class="headerlink" title="drawCircle"></a>drawCircle</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">void drawCircle (float cx, </div><div class="line">                float cy, </div><div class="line">                float radius, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制圆<br>cx，cy代表圆心的坐标<br>radius圆的半径<br>paint画笔<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">canvas.drawCircle(500f, 500f, 200, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas8.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawColor"><a href="#drawColor" class="headerlink" title="drawColor"></a>drawColor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void drawColor (int color)</div></pre></td></tr></table></figure>
<p>设置画布颜色</p>
<h2 id="drawLine"><a href="#drawLine" class="headerlink" title="drawLine"></a>drawLine</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">void drawLine (float startX, </div><div class="line">                float startY, </div><div class="line">                float stopX, </div><div class="line">                float stopY, </div><div class="line">                Paint paint)</div><div class="line">void drawLines (float[] pts, </div><div class="line">                Paint paint)                </div><div class="line">void drawLines (float[] pts, </div><div class="line">                int offset, </div><div class="line">                int count, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>画线<br>方法1<br>startX，startY起点坐标<br>stopX，stopY终点坐标<br>paint画笔</p>
<p>方法2<br>pts：绘制直线的端点数组，每条直线占用4个数据，即起终点坐标。<br>paint：绘制直线所使用的画笔。</p>
<p>方法2<br>pts：绘制直线的端点数组，每条直线占用4个数据，即起终点坐标。<br>offset：跳过的数据个数，取值为4的倍数。<br>count：实际参与绘制的数据个数。<br>paint：绘制直线所使用的画笔。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">canvas.drawLine(100f,100f,500f,500f,mPaint);</div></pre></td></tr></table></figure>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas9.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">float[] pts = &#123;100f, 100f, 400f, 400f,</div><div class="line">                400f, 400f, 250f, 560f,</div><div class="line">                250f, 560f, 400f, 800f,</div><div class="line">                400f, 800f, 280f, 880f&#125;;</div><div class="line">canvas.drawLines(pts, mPaint);</div></pre></td></tr></table></figure>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas10.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">float[] pts = &#123;100f, 100f, 400f, 400f,</div><div class="line">                400f, 400f, 250f, 560f,</div><div class="line">                250f, 560f, 400f, 800f,</div><div class="line">                400f, 800f, 280f, 880f&#125;;</div><div class="line">//有选择地绘制直线</div><div class="line">canvas.drawLines(pts, 4, 8, mPaint);</div></pre></td></tr></table></figure></p>
<p>跳过前4个数据，绘制后面8的数据，即绘制了第二第三个点：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas11.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawOval"><a href="#drawOval" class="headerlink" title="drawOval"></a>drawOval</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void drawOval (RectF oval,Paint paint)</div></pre></td></tr></table></figure>
<p>绘制椭圆<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">RectF rectF = new RectF(100f, 100f, 600f, 500f);</div><div class="line">//等同于圆的效果</div><div class="line">//RectF rectF = new RectF(100f, 100f, 500f, 500f);</div><div class="line">canvas.drawOval(rectF, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas12.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="drawPath"><a href="#drawPath" class="headerlink" title="drawPath"></a>drawPath</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void drawPath (Path path,Paint paint)</div></pre></td></tr></table></figure>
<p>例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Path path = new Path();</div><div class="line">//向Path中加入Arc</div><div class="line">RectF arcRecF = new RectF(0, 0, 500, 500);</div><div class="line">path.addArc(arcRecF, 0, 135);</div><div class="line">canvas.drawPath(path, mPaint);</div></pre></td></tr></table></figure></p>
<p>更多Path（宝藏，可继续挖掘），详见博客<a href="http://ghui.me/post/2015/10/android-graphics-path/" target="_blank" rel="external">android绘图之Path总结</a></p>
<h2 id="drawPoint"><a href="#drawPoint" class="headerlink" title="drawPoint"></a>drawPoint</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">void drawPoint (float x, </div><div class="line">                float y, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制点，x，y分别是点坐标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">void drawPoints (float[] pts, </div><div class="line">                int offset, </div><div class="line">                int count, </div><div class="line">                Paint paint)</div><div class="line">void drawPoints (float[] pts, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure></p>
<p>drawPoints与drawLines类似</p>
<h2 id="drawRGB"><a href="#drawRGB" class="headerlink" title="drawRGB"></a>drawRGB</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">void drawRGB (int r, </div><div class="line">                int g, </div><div class="line">                int b)</div></pre></td></tr></table></figure>
<p>RGB绘制画布颜色，取值也是0~255</p>
<h2 id="drawRect"><a href="#drawRect" class="headerlink" title="drawRect"></a>drawRect</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">void drawRect (float left, </div><div class="line">                float top, </div><div class="line">                float right, </div><div class="line">                float bottom, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制矩形，前四个参数分别表示矩形的左，顶，右，低</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">void drawRect (Rect r,Paint paint)</div><div class="line">void drawRect (RectF rect,Paint paint)</div></pre></td></tr></table></figure>
<p>Rect 和 RectF区别是Rect初始化 是int，RectF 是left</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">canvas.drawRect(100f,100f,500f,500f,mPaint);</div></pre></td></tr></table></figure>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas13.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""> </p>
<h2 id="drawRoundRect"><a href="#drawRoundRect" class="headerlink" title="drawRoundRect"></a>drawRoundRect</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">void drawRoundRect (RectF rect, </div><div class="line">                float rx, </div><div class="line">                float ry, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制圆矩形<br>rx：圆角x方向的半径<br>ry：圆角y方向的半径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">RectF rectF = new RectF(100f, 100f, 500f, 500f);</div><div class="line">canvas.drawRoundRect(rectF, 50, 150, mPaint);</div></pre></td></tr></table></figure>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas14.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""> </p>
<h2 id="drawText"><a href="#drawText" class="headerlink" title="drawText"></a>drawText</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">void drawText (CharSequence text, </div><div class="line">                int start, </div><div class="line">                int end, </div><div class="line">                float x, </div><div class="line">                float y, </div><div class="line">                Paint paint)</div><div class="line">void drawText (String text, </div><div class="line">                float x, </div><div class="line">                float y, </div><div class="line">                Paint paint)</div><div class="line">void drawText (String text, </div><div class="line">                int start, </div><div class="line">                int end, </div><div class="line">                float x, </div><div class="line">                float y, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制文本<br>start：指的文本从哪个开始；end：文本结束的位置；x，y：文本起点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mPaint.setTextSize(50);</div><div class="line">String text = &quot;我的微信公众号：吴小龙同学&quot;;</div><div class="line">canvas.drawText(text, 2, text.length(), 100, 100, mPaint)</div><div class="line">canvas.drawText(&quot;我的微信公众号：吴小龙同学&quot;, 100, 400, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas15.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""> </p>
<h2 id="drawTextOnPath"><a href="#drawTextOnPath" class="headerlink" title="drawTextOnPath"></a>drawTextOnPath</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">void drawTextOnPath (String text, </div><div class="line">                Path path, </div><div class="line">                float hOffset, </div><div class="line">                float vOffset, </div><div class="line">                Paint paint)</div><div class="line">void drawTextOnPath (char[] text, </div><div class="line">                int index, </div><div class="line">                int count, </div><div class="line">                Path path, </div><div class="line">                float hOffset, </div><div class="line">                float vOffset, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>沿着Path绘制一段文字<br>hOffset  : 与路径起始点的水平偏移距离<br>vOffset  : 与路径中心的垂直偏移量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Path path = new Path();</div><div class="line">//Path.Direction.CW，沿外环；Path.Direction.CCW，沿内环</div><div class="line">path.addCircle(500, 500, 200, Path.Direction.CW);</div><div class="line">mPaint.setTextSize(50);</div><div class="line">// 绘制路径</div><div class="line">canvas.drawPath(path, mPaint);</div><div class="line">String text = &quot;我的微信公众号：吴小龙同学&quot;;</div><div class="line">canvas.drawTextOnPath(text, path, 0f, 0f, mPaint);</div></pre></td></tr></table></figure>
<p> <img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas16.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""> </p>
<h2 id="drawVertices"><a href="#drawVertices" class="headerlink" title="drawVertices"></a>drawVertices</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">void drawVertices (Canvas.VertexMode mode, </div><div class="line">                int vertexCount, </div><div class="line">                float[] verts, </div><div class="line">                int vertOffset, </div><div class="line">                float[] texs, </div><div class="line">                int texOffset, </div><div class="line">                int[] colors, </div><div class="line">                int colorOffset, </div><div class="line">                short[] indices, </div><div class="line">                int indexOffset, </div><div class="line">                int indexCount, </div><div class="line">                Paint paint)</div></pre></td></tr></table></figure>
<p>绘制顶点数组</p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="裁剪方法"><a href="#裁剪方法" class="headerlink" title="裁剪方法"></a>裁剪方法</h1><p>以clipXXX为主的<br> <img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas17.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""> </p>
<h2 id="clipPath"><a href="#clipPath" class="headerlink" title="clipPath"></a>clipPath</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">boolean clipPath (Path path, </div><div class="line">                Region.Op op) </div><div class="line">boolean clipPath (Path path)</div></pre></td></tr></table></figure>
<p>裁剪路径<br>op：各种裁剪组合模式，有六个枚举常量，下有详解<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Path path = new Path();</div><div class="line">RectF arcRecF = new RectF(0, 0, 500, 500);</div><div class="line">path.addArc(arcRecF, 0, 135);</div><div class="line">canvas.clipPath(path);</div><div class="line">canvas.drawColor(Color.RED);</div></pre></td></tr></table></figure></p>
<p> <img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas18.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br> 有图可知，画布已经是红区区域了。</p>
<h2 id="clipRect"><a href="#clipRect" class="headerlink" title="clipRect"></a>clipRect</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">boolean clipRect (float left, </div><div class="line">                float top, </div><div class="line">                float right, </div><div class="line">                float bottom, </div><div class="line">                Region.Op op)</div><div class="line">boolean clipRect (RectF rect)</div><div class="line">boolean clipRect (int left, </div><div class="line">                int top, </div><div class="line">                int right, </div><div class="line">                int bottom)</div><div class="line">boolean clipRect (RectF rect, </div><div class="line">                Region.Op op)</div><div class="line">boolean clipRect (Rect rect)</div></pre></td></tr></table></figure>
<p>裁剪矩形<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">canvas.clipRect(100, 100, 400, 500);</div><div class="line">canvas.drawColor(Color.RED);</div></pre></td></tr></table></figure></p>
<p> <img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas19.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>  有图可知，画布已经是红区矩形区域了。</p>
<p><strong>Region.Op</strong><br>各种裁剪组合模式，有六个枚举常量，如下图，红色即组合裁剪的区域。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// 填充颜色</div><div class="line">canvas.drawColor(Color.BLUE);</div><div class="line">canvas.save();</div><div class="line">canvas.clipRect(100, 100, 400, 500);</div><div class="line">canvas.clipRect(200, 200, 600, 600, Region.Op.DIFFERENCE);</div><div class="line">canvas.drawColor(Color.RED);</div><div class="line">canvas.restore();</div><div class="line">// 绘制和裁剪一样的矩形便于观察</div><div class="line">canvas.drawRect(100, 100, 400, 500, mPaint);</div><div class="line">canvas.drawRect(200, 200, 600, 600, mPaint);</div></pre></td></tr></table></figure></p>
<p>Region.Op     DIFFERENCE<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas20.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>Region.Op     INTERSECT<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas21.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>Region.Op     REPLACE<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas22.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>Region.Op     REVERSE_DIFFERENCE<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas23.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>Region.Op     UNION<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas24.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>Region.Op     XOR<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas25.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="">  </p>
<h1 id="变换方法"><a href="#变换方法" class="headerlink" title="变换方法"></a>变换方法</h1><p>rotate，scale、skew、translate<br>旋转、缩放、错切、平移</p>
<h2 id="rotate"><a href="#rotate" class="headerlink" title="rotate"></a>rotate</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">void rotate (float degrees)</div><div class="line">void rotate (float degrees, </div><div class="line">                float px, </div><div class="line">                float py)</div></pre></td></tr></table></figure>
<p>画布的旋转<br>degrees：顺时针旋转的角度<br>px和py 基准点平移，默认起点（0,0）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">canvas.drawColor(Color.BLUE);</div><div class="line">canvas.drawRect(new Rect(0, 0, 400, 400), mPaint);</div><div class="line">mPaint.setColor(Color.YELLOW);</div><div class="line">canvas.rotate(45);</div><div class="line">canvas.drawRect(new Rect(0, 0, 400, 400), mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas28.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="">  </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div></pre></td></tr></table></figure>
<h2 id="scale"><a href="#scale" class="headerlink" title="scale"></a>scale</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//方法1</div><div class="line">void scale (float sx, float sy)</div></pre></td></tr></table></figure>
<p>画布的缩放<br>sx、sy是x、y方向上缩放的倍数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">canvas.drawColor(Color.BLUE);</div><div class="line">mPaint.setColor(Color.GREEN);</div><div class="line">canvas.drawRect(0, 0, 400, 500, mPaint);</div><div class="line">canvas.scale(0.5f, 0.5f);</div><div class="line">mPaint.setColor(Color.RED);</div><div class="line">canvas.drawRect(0, 0, 400, 500, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas26.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br> 红色矩形比绿色缩小的一半<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//方法2</div><div class="line">void scale (float sx, </div><div class="line">                float sy, </div><div class="line">                float px, </div><div class="line">                float py)</div></pre></td></tr></table></figure></p>
<p>px和py 分别为缩放的基准点，看scale源码可知基准点平移了:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public final void scale(float sx, float sy, float px, float py) &#123;</div><div class="line">    translate(px, py);</div><div class="line">    scale(sx, sy);</div><div class="line">    translate(-px, -py);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">canvas.drawColor(Color.BLUE);</div><div class="line">mPaint.setColor(Color.GREEN);</div><div class="line">canvas.drawRect(0, 0, 400, 500, mPaint);</div><div class="line">// 保存画布状态</div><div class="line">canvas.save();</div><div class="line">canvas.scale(0.5f, 0.5f);</div><div class="line">mPaint.setColor(Color.RED);</div><div class="line">canvas.drawRect(0, 0, 400, 500, mPaint);</div><div class="line">canvas.restore();</div><div class="line">canvas.scale(0.5f, 0.5f, 200, 200);</div><div class="line">mPaint.setColor(Color.WHITE);</div><div class="line">canvas.drawRect(0, 0, 400, 500, mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas27.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>白色就是平移后的效果</p>
<h2 id="skew"><a href="#skew" class="headerlink" title="skew"></a>skew</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void skew (float sx,float sy)</div></pre></td></tr></table></figure>
<p>画布的错切<br>float sx:将画布在x方向上倾斜相应的角度，sx为倾斜角度的tan值；<br>float sy:将画布在y轴方向上倾斜相应的角度，sy为倾斜角度的tan值；<br>比如在X轴方向上倾斜45度，tan45=1；</p>
<h2 id="translate"><a href="#translate" class="headerlink" title="translate"></a>translate</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void translate (float dx,float dy)</div></pre></td></tr></table></figure>
<p>画布的平移<br>dx，dy平移量<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">canvas.drawColor(Color.BLUE);</div><div class="line">canvas.translate(100, 100);</div><div class="line">canvas.drawRect(new Rect(0, 0, 400, 400), mPaint);</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/canvas29.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>坐标从起点（0,0）变成了（100,100）</p>
<h1 id="画布锁定和还原"><a href="#画布锁定和还原" class="headerlink" title="画布锁定和还原"></a>画布锁定和还原</h1><p>以saveXXX和restoreXXX构成的画布锁定和还原</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">int save (int saveFlags)</div><div class="line">int save ()</div><div class="line">void restore ()</div></pre></td></tr></table></figure>
<p>save 保存当前矩阵，剪辑到一个私有堆栈。save()方法之后的代码，可以调用Canvas的平移、放缩、旋转、裁剪等操作<br>restore 恢复Canvas之前保存的状态<br>save和restore要配对使用，restore可以比save少，但不能多，如果restore调用次数比save多，会引发Error。</p>
<h1 id="例子源码"><a href="#例子源码" class="headerlink" title="例子源码"></a>例子源码</h1><p><a href="https://github.com/WuXiaolong/AndroidSamples/blob/master/app/src/main/java/com/wuxiaolong/androidsamples/paintcanvas/CanvasView.java" target="_blank" rel="external">https://github.com/WuXiaolong/AndroidSamples/blob/master/app/src/main/java/com/wuxiaolong/androidsamples/paintcanvas/CanvasView.java</a></p>
<h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p><a href="https://developer.android.com/reference/android/graphics/Canvas.html" target="_blank" rel="external">官网api</a><br><a href="http://blog.csdn.net/aigestudio/article/details/41960507" target="_blank" rel="external">自定义控件其实很简单5/12</a><br><a href="http://blog.csdn.net/tianjian4592/article/details/45234419" target="_blank" rel="external">Canvas之translate、scale、rotate、skew方法讲解！</a><br><a href="http://ghui.me/post/2015/10/android-graphics-path/" target="_blank" rel="external">android绘图之Path总结</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;写完 &lt;a href=&quot;http://wuxiaolong.github.io/2016/08/20/Paint/&quot;&gt;Android 画笔Paint&lt;/a&gt;，自然少不了Canvas画布，本文延续上篇风格，一一来过Canvas API。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;绘制方法&quot;&gt;&lt;a href=&quot;#绘制方法&quot; class=&quot;headerlink&quot; title=&quot;绘制方法&quot;&gt;&lt;/a&gt;绘制方法&lt;/h1&gt;&lt;p&gt;以drawXXX为主的绘制方法，api如下：&lt;br&gt;
    
    </summary>
    
      <category term="CustomView" scheme="http://wuxiaolong.me/categories/CustomView/"/>
    
    
      <category term="Canvas" scheme="http://wuxiaolong.me/tags/Canvas/"/>
    
  </entry>
  
  <entry>
    <title>Android 画笔Paint</title>
    <link href="http://wuxiaolong.me/2016/08/20/Paint/"/>
    <id>http://wuxiaolong.me/2016/08/20/Paint/</id>
    <published>2016-08-20T09:26:15.000Z</published>
    <updated>2016-08-25T11:38:52.920Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><strong>了解Android Paint，一篇就够</strong>。引用Aige《<a href="http://blog.csdn.net/aigestudio" target="_blank" rel="external">自定义控件其实很简单</a>》系列博客的话“很多时候你压根不需要了解太多原理，只需站在巨人的丁丁上即可”，所谓前人种树后人好乘凉，我这里记录下实践结果。</p>
</blockquote>
<p>我们可以通过Paint中setter方法来为画笔设置属性：<br><a id="more"></a><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>浩浩荡荡来将这些方法一一过一遍：</p>
<h1 id="set"><a href="#set" class="headerlink" title="set"></a>set</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void set(Paint src)</div></pre></td></tr></table></figure>
<p>为当前画笔copy一个画笔</p>
<h1 id="setARGB"><a href="#setARGB" class="headerlink" title="setARGB"></a>setARGB</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void  setARGB(int a, int r, int g, int b)</div></pre></td></tr></table></figure>
<p>设置Paint对象颜色，a代表透明度，r，g，b代表颜色值</p>
<blockquote>
<p>插播：RGB与十六进制区别</p>
</blockquote>
<p>一般在xml里定义颜色可以直接写:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textColor=&quot;#FF6281&quot;</div></pre></td></tr></table></figure></p>
<p>但是在code代码中就必须写成这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">text.setTextColor(0xffff6281);</div></pre></td></tr></table></figure></p>
<p>xml中透明度写不写无所谓,默认是ff不透明，但是代码中用十六进制0x来表示，就必须跟上ff透明度，不然会默认00全透明。</p>
<h1 id="setAlpha"><a href="#setAlpha" class="headerlink" title="setAlpha"></a>setAlpha</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void  setAlpha(int a)</div></pre></td></tr></table></figure>
<p>设置alpha透明度，范围为0~255</p>
<h1 id="setAntiAlias"><a href="#setAntiAlias" class="headerlink" title="setAntiAlias"></a>setAntiAlias</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void  setAntiAlias(boolean aa)</div></pre></td></tr></table></figure>
<p>是否抗锯齿</p>
<h1 id="setColor"><a href="#setColor" class="headerlink" title="setColor"></a>setColor</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void  setColor(int color)</div></pre></td></tr></table></figure>
<p>设置paint颜色</p>
<h1 id="setColorFilter"><a href="#setColorFilter" class="headerlink" title="setColorFilter"></a>setColorFilter</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ColorFilter setColorFilter (ColorFilter filter)</div></pre></td></tr></table></figure>
<p>设置颜色过滤，<a href="https://developer.android.com/reference/android/graphics/ColorFilter.html" target="_blank" rel="external">ColorFilter</a>有三个子类去实现ColorMatrixColorFilter、LightingColorFilter和PorterDuffColorFilter</p>
<h2 id="ColorMatrixColorFilter"><a href="#ColorMatrixColorFilter" class="headerlink" title="ColorMatrixColorFilter"></a>ColorMatrixColorFilter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    //省略构造方法</div><div class="line">    private void init() &#123;</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);</div><div class="line">        // 生成色彩矩阵</div><div class="line">        ColorMatrix colorMatrix = new ColorMatrix(new float[]&#123;</div><div class="line">                0.5F, 0, 0, 0, 0,</div><div class="line">                0, 0.5F, 0, 0, 0,</div><div class="line">                0, 0, 0.5F, 0, 0,</div><div class="line">                0, 0, 0, 1, 0,</div><div class="line">        &#125;);</div><div class="line">        mPaint.setColorFilter(new ColorMatrixColorFilter(colorMatrix));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.mipmap.logo);</div><div class="line">        canvas.drawBitmap(bitmap, 0, 0, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>第一行表示的R（红色）的向量，第二行表示的G（绿色）的向量，第三行表示的B（蓝色）的向量，最后一行表示A（透明度）的向量，这一顺序必须要正确不能混淆！这个矩阵不同的位置表示的RGBA值，其范围在0.0F至2.0F之间，1为保持原图的RGB值。每一行的第五列数字表示偏移值。</p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint4.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>这是原图效果，增加ColorMatrix，效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint5.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="LightingColorFilter"><a href="#LightingColorFilter" class="headerlink" title="LightingColorFilter"></a>LightingColorFilter</h2><p>只有一个构造方法，<code>LightingColorFilter (int mul, int add)</code>，参数1：mul全称是colorMultiply意为色彩倍增；参数2：add全称是colorAdd意为色彩添加，这两个值都是16进制的色彩值0xAARRGGBB。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 设置颜色过滤,去掉绿色</div><div class="line">mPaint.setColorFilter(new LightingColorFilter(0xFFFF00FF, 0x00000000));</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint6.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="PorterDuffColorFilter"><a href="#PorterDuffColorFilter" class="headerlink" title="PorterDuffColorFilter"></a>PorterDuffColorFilter</h2><p>也只有一个构造方法，<code>PorterDuffColorFilter (int color, PorterDuff.Mode mode)</code>，参数1：16进制表示的颜色值；参数2：PorterDuff内部类Mode中的一个常量值，这个值表示混合模式。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 设置颜色过滤,Color的值设为红色，模式PorterDuff.Mode.DARKEN变暗</div><div class="line">mPaint.setColorFilter(new PorterDuffColorFilter(Color.RED, PorterDuff.Mode.DARKEN));</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint7.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>混合模式还有很多，不仅是应用于图像色彩混合，还应用于图形混合。</p>
<h1 id="setDither"><a href="#setDither" class="headerlink" title="setDither"></a>setDither</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setDither(boolean dither)</div></pre></td></tr></table></figure>
<p>设定是否使用图像抖动处理，会使绘制出来的图片颜色更加平滑和饱满，图像更加清晰</p>
<h1 id="setFakeBoldText"><a href="#setFakeBoldText" class="headerlink" title="setFakeBoldText"></a>setFakeBoldText</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setFakeBoldText(boolean fakeBoldText)</div></pre></td></tr></table></figure>
<p>设置伪粗体文本</p>
<h1 id="setFilterBitmap"><a href="#setFilterBitmap" class="headerlink" title="setFilterBitmap"></a>setFilterBitmap</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setFilterBitmap(boolean filter)</div></pre></td></tr></table></figure>
<p>设置位图进行滤波处理</p>
<h1 id="setHinting"><a href="#setHinting" class="headerlink" title="setHinting"></a>setHinting</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setHinting (int mode)</div></pre></td></tr></table></figure>
<p>Added in API level 14，设置暗示模式，HINTING_OFF 或 HINTING_ON</p>
<h1 id="setLetterSpacing"><a href="#setLetterSpacing" class="headerlink" title="setLetterSpacing"></a>setLetterSpacing</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setLetterSpacing (float letterSpacing)</div></pre></td></tr></table></figure>
<p>Added in API level 21，设置文本字母间距，默认0，负值收紧文本</p>
<h1 id="setLinearText"><a href="#setLinearText" class="headerlink" title="setLinearText"></a>setLinearText</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setLinearText(boolean linearText)</div></pre></td></tr></table></figure>
<p>设置线性文本</p>
<h1 id="setMaskFilter"><a href="#setMaskFilter" class="headerlink" title="setMaskFilter"></a>setMaskFilter</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MaskFilter setMaskFilter (MaskFilter maskfilter)</div></pre></td></tr></table></figure>
<p>设置滤镜的效果，<a href="https://developer.android.com/reference/android/graphics/MaskFilter.html" target="_blank" rel="external">MaskFilter</a>有两个子类实现BlurMaskFilter, EmbossMaskFilter</p>
<h2 id="BlurMaskFilter"><a href="#BlurMaskFilter" class="headerlink" title="BlurMaskFilter"></a>BlurMaskFilter</h2><p>设置画笔模糊阴影效果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mPaint.setMaskFilter(new BlurMaskFilter(20f, BlurMaskFilter.Blur.SOLID));</div></pre></td></tr></table></figure></p>
<p>参数1：模糊延伸半径，必须&gt;0；<br>参数2：有四种枚举<br>NORMAL，同时绘制图形本身内容+内阴影+外阴影,正常阴影效果<br>INNER，绘制图形内容本身+内阴影，不绘制外阴影<br>OUTER，不绘制图形内容以及内阴影，只绘制外阴影<br>SOLID，只绘制外阴影和图形内容本身，不绘制内阴影<br>BlurMaskFilter绘制的Bitmap基本完全不受影响</p>
<p>四种枚举效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint17.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint18.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint19.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint20.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="EmbossMaskFilter"><a href="#EmbossMaskFilter" class="headerlink" title="EmbossMaskFilter"></a>EmbossMaskFilter</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">//Paint的setMaskFilter不被GPU支持,为了确保画笔的setMaskFilter能供起效，我们需要禁用掉GPU硬件加速或AndroidManifest.xml文件中设置android:hardwareAccelerated为false</div><div class="line">if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.HONEYCOMB) &#123;</div><div class="line">    //View从API Level 11才加入setLayerType方法</div><div class="line">    //设置软件渲染模式绘图</div><div class="line">    this.setLayerType(View.LAYER_TYPE_SOFTWARE, null);</div><div class="line">&#125;</div><div class="line">//设置浮雕滤镜效果，参数1：光源指定方向；参数2:环境光亮度，取值0-1,值越小越暗；参数3：镜面高光反射系数，值越小反射越强；参数4：模糊延伸半径</div><div class="line">mPaint.setMaskFilter(new EmbossMaskFilter(new float[]&#123;1, 1, 1&#125;, 0.4f, 8f, 3f));</div></pre></td></tr></table></figure>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint21.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="setPathEffect"><a href="#setPathEffect" class="headerlink" title="setPathEffect"></a>setPathEffect</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PathEffect  setPathEffect(PathEffect effect)</div></pre></td></tr></table></figure>
<p>设置路径效果，<a href="https://developer.android.com/reference/android/graphics/PathEffect.html" target="_blank" rel="external">PathEffect</a>有6个子类实现ComposePathEffect, CornerPathEffect, DashPathEffect, DiscretePathEffect, PathDashPathEffect, SumPathEffect<br>具体代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;   </div><div class="line">    // 路径对象</div><div class="line">    private Path mPath;</div><div class="line">    private PathEffect[] pathEffects = new PathEffect[7];</div><div class="line">    private float mPhase=5;</div><div class="line"></div><div class="line">    //省略构造方法</div><div class="line"></div><div class="line">    private void init() &#123;       </div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setStyle(Paint.Style.STROKE);</div><div class="line">        mPaint.setStrokeWidth(5);</div><div class="line">        mPaint.setAntiAlias(true);</div><div class="line">        initPath();       </div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initPath() &#123;</div><div class="line">        // 实例化路径</div><div class="line">        mPath = new Path();</div><div class="line">        // 定义路径的起点</div><div class="line">        mPath.moveTo(10, 50);</div><div class="line"></div><div class="line">        // 定义路径的各个点</div><div class="line">        for (int i = 0; i &lt;= 30; i++) &#123;</div><div class="line">            mPath.lineTo(i * 35, (float) (Math.random() * 100));</div><div class="line">        &#125;</div><div class="line">        //什么都不处理</div><div class="line">        pathEffects[0] = null;</div><div class="line">        //参数1：线段之间的圆滑程度</div><div class="line">        pathEffects[1] = new CornerPathEffect(10);</div><div class="line">        //参数1：间隔线条长度(length&gt;=2)，如float[] &#123;20, 10&#125;的偶数参数20定义了我们第一条实线的长度，</div><div class="line">        //而奇数参数10则表示第一条虚线的长度，后面不再有数据则重复第一个数以此往复循环；参数2：虚实线间距</div><div class="line">        pathEffects[2] = new DashPathEffect(new float[]&#123;20, 10&#125;, mPhase);</div><div class="line">        //参数1:值越小杂点越密集；参数2:杂点突出的大小，值越大突出的距离越大</div><div class="line">        pathEffects[3] = new DiscretePathEffect(5.0f, 10.0f);</div><div class="line">        Path path = new Path();</div><div class="line">        path.addRect(0, 0, 8, 8, Path.Direction.CCW);</div><div class="line">        //定义路径虚线的样式,参数1：path；参数2：实线的长度；参数3：虚实线间距</div><div class="line">        pathEffects[4] = new PathDashPathEffect(path, 20, mPhase, PathDashPathEffect.Style.ROTATE);</div><div class="line">        pathEffects[5] = new ComposePathEffect(pathEffects[2], pathEffects[4]);</div><div class="line">        //ComposePathEffect和SumPathEffect都可以用来组合两种路径效果,具体区别（不知道如何描述）小伙伴们自己试试</div><div class="line">        pathEffects[6] = new SumPathEffect(pathEffects[4], pathEffects[3]);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;      </div><div class="line">         /*</div><div class="line">         * 绘制路径</div><div class="line">         */</div><div class="line">        for (int i = 0; i &lt; pathEffects.length; i++) &#123;</div><div class="line">            mPaint.setPathEffect(pathEffects[i]);</div><div class="line">            canvas.drawPath(mPath, mPaint);</div><div class="line">            // 每绘制一条将画布向下平移250个像素</div><div class="line">            canvas.translate(0, 250);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint17.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="setRasterizer"><a href="#setRasterizer" class="headerlink" title="setRasterizer"></a>setRasterizer</h1><p><del>Rasterizer  setRasterizer(Rasterizer rasterizer)</del><br>设置光栅化，API21已过时</p>
<h1 id="setShader"><a href="#setShader" class="headerlink" title="setShader"></a>setShader</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Shader  setShader(Shader shader)</div></pre></td></tr></table></figure>
<p>设置着色器，<a href="https://developer.android.com/reference/android/graphics/Shader.html" target="_blank" rel="external">Shader</a> 子类实现有BitmapShader, ComposeShader, LinearGradient, RadialGradient, SweepGradient</p>
<h2 id="BitmapShader"><a href="#BitmapShader" class="headerlink" title="BitmapShader"></a>BitmapShader</h2><p>对图形进行渲染，构造方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">BitmapShader (Bitmap bitmap,Shader.TileMode tileX,Shader.TileMode tileY)</div></pre></td></tr></table></figure></p>
<p>tileX、tileY参数Shader.TileMode有三个：<br>CLAMP 重复最后一个颜色至最后<br>MIRROR 重复着色的图像水平或垂直方向已镜像方式填充会有翻转效果<br>REPEAT 重复着色的图像水平或垂直方向</p>
<p>设置tileX、tileY为Shader.TileMode.CLAMP<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private Context mContext;</div><div class="line">    private Bitmap mBitmap;</div><div class="line">    private BitmapShader mShader;</div><div class="line"></div><div class="line">    // 省略构造方法</div><div class="line">    </div><div class="line">    private void init() &#123;</div><div class="line">        mBitmap = BitmapFactory.decodeResource(mContext.getResources(), R.mipmap.logo);</div><div class="line">        mShader= new BitmapShader(mBitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        mPaint.setShader(mBitmapShader);</div><div class="line">        canvas.drawCircle(500, 550, 500, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint12.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>设置tileX、tileY为Shader.TileMode.MIRROR<br>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint11.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>设置tileX、tileY为Shader.TileMode.REPEAT<br>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint10.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="LinearGradient"><a href="#LinearGradient" class="headerlink" title="LinearGradient"></a>LinearGradient</h2><p>设置线性渐变效果，有两个构造函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//坐标(x0,y0)渐变直线的起点，坐标(x1,y1)渐变直线的终点，color0和color1分别表示了渐变的起始颜色和终止颜色，TileMode也有CLAMP 、REPEAT 和 MIRROR三个取值</div><div class="line">LinearGradient(float x0, float y0, float x1, float y1, int color0, int color1, Shader.TileMode tile)</div><div class="line">LinearGradient(float x0, float y0, float x1, float y1, int[] colors, float[] positions,Shader.TileMode tile)</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private Context mContext;</div><div class="line">    private Bitmap mBitmap;</div><div class="line">    private Shader mShader;</div><div class="line"></div><div class="line">    // 省略构造方法</div><div class="line">    </div><div class="line">    private void init() &#123;</div><div class="line">        mShader = new LinearGradient(0, 0, 500, 500, Color.BLUE, Color.GREEN,Shader.TileMode.CLAMP);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        mPaint.setShader(mBitmapShader);</div><div class="line">        canvas.drawCircle(500, 550, 400, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint13.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>设置REPEAT 和 MIRROR就不贴图片了，小伙伴们可以自己试试看看效果。</p>
<h2 id="RadialGrdient"><a href="#RadialGrdient" class="headerlink" title="RadialGrdient"></a>RadialGrdient</h2><p>设置光束从中心向四周发散的辐射渐变效果，构造方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//坐标(centerX,centerY)中心点坐标，radius圆的半径，centerColor中心颜色，edgeColor圆的轮廓颜色，颜色逐渐从centerColor渐变到edgeColor，TileMode也有CLAMP 、REPEAT 和 MIRROR三个取值</div><div class="line">RadialGradient(float centerX, float centerY, float radius, int centerColor, int edgeColor, Shader.TileMode tileMode)</div><div class="line">RadialGradient(float centerX, float centerY, float radius, int[] colors, float[] stops, Shader.TileMode tileMode)</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private Context mContext;</div><div class="line">    private Shader mShader;</div><div class="line"></div><div class="line">    // 省略构造方法</div><div class="line">    </div><div class="line">    private void init() &#123;</div><div class="line">        mShader = new RadialGradient(500, 500, 400, Color.BLUE, Color.GREEN, Shader.TileMode.CLAMP);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        mPaint.setShader(mBitmapShader);</div><div class="line">        canvas.drawCircle(500, 550, 400, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint14.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>设置REPEAT 和 MIRROR也不贴图片了。</p>
<h2 id="SweepGradient"><a href="#SweepGradient" class="headerlink" title="SweepGradient"></a>SweepGradient</h2><p>设置绕着某中心点进行360度旋转渐变效果，构造方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//坐标(cx,cy)决定了中心点的位置，会绕着该中心点进行360度旋转。color0表示的是起点的颜色，color1表示的是终点的颜色</div><div class="line">SweepGradient(float cx, float cy, int color0, int color1)</div><div class="line">//坐标(cx,cy)决定了中心点的位置,colors颜色数组,position取值范围为[0,1]，0和1都表示3点钟位置，0.25表示6点钟位置，0.5表示9点钟位置，0.75表示12点钟位置，诸如此类</div><div class="line">SweepGradient(float cx, float cy, int[] colors, float[] positions)</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private Context mContext;</div><div class="line">    private Shader mShader;</div><div class="line"></div><div class="line">    // 省略构造方法</div><div class="line">    </div><div class="line">    private void init() &#123;</div><div class="line">        mShader = new SweepGradient(500, 500, Color.BLUE, Color.GREEN);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        mPaint.setShader(mBitmapShader);</div><div class="line">        canvas.drawCircle(500, 550, 400, mPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint15.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h2 id="ComposeShader"><a href="#ComposeShader" class="headerlink" title="ComposeShader"></a>ComposeShader</h2><p>混合，有两个构造函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//shaderA对应下层图形，shaderB对应上层图形</div><div class="line">ComposeShader(Shader shaderA, Shader shaderB, Xfermode mode)</div><div class="line">ComposeShader(Shader shaderA, Shader shaderB, PorterDuff.Mode mode)</div></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private Context mContext;</div><div class="line">    private Bitmap mBitmap;</div><div class="line">    private Shader bitmapShader, linearGradient, composeShader;</div><div class="line"></div><div class="line">    // 省略构造方法</div><div class="line">    </div><div class="line">    private void init() &#123;</div><div class="line">        mBitmap = BitmapFactory.decodeResource(mContext.getResources(), R.mipmap.logo);</div><div class="line">        bitmapShader = new BitmapShader(mBitmap, Shader.TileMode.MIRROR, Shader.TileMode.MIRROR);</div><div class="line">        linearGradient = new LinearGradient(0, 0, mBitmap.getWidth(), mBitmap.getHeight(), Color.BLUE, Color.GREEN, Shader.TileMode.CLAMP);</div><div class="line">        //bitmapShader对应下层图形，linearGradient对应上层图形，像素颜色混合采用MULTIPLY模式</div><div class="line">        composeShader = new ComposeShader(bitmapShader, linearGradient, PorterDuff.Mode.MULTIPLY);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        mPaint.setShader(mBitmapShader);</div><div class="line">        canvas.drawCircle(500, 550, 400, mPaint);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint16.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="setShadowLayer"><a href="#setShadowLayer" class="headerlink" title="setShadowLayer"></a>setShadowLayer</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setShadowLayer(float radius, float dx, float dy, int shadowColor)</div></pre></td></tr></table></figure>
<p>图形添加一个阴影层效果</p>
<h1 id="setStrikeThruText"><a href="#setStrikeThruText" class="headerlink" title="setStrikeThruText"></a>setStrikeThruText</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStrikeThruText (boolean strikeThruText)</div></pre></td></tr></table></figure>
<p>设置删除线</p>
<h1 id="setStrokeCap"><a href="#setStrokeCap" class="headerlink" title="setStrokeCap"></a>setStrokeCap</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStrokeCap (Paint.Cap cap)</div></pre></td></tr></table></figure>
<p>当设置setStyle是Stroke或StrokeAndFill，设置笔刷的图形样式，如圆形样式Cap.ROUND或方形样式Cap.SQUARE </p>
<h1 id="setStrokeJoin"><a href="#setStrokeJoin" class="headerlink" title="setStrokeJoin"></a>setStrokeJoin</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStrokeJoin (Paint.Join join)</div></pre></td></tr></table></figure>
<p>当设置setStyle是Stroke或StrokeAndFill，设置绘制时各图形的结合方式，如影响矩形角的外轮廓</p>
<h1 id="setStrokeMiter"><a href="#setStrokeMiter" class="headerlink" title="setStrokeMiter"></a>setStrokeMiter</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStrokeMiter (float miter)</div></pre></td></tr></table></figure>
<p>当设置setStyle是Stroke或StrokeAndFill，设置斜切</p>
<h1 id="setStrokeWidth"><a href="#setStrokeWidth" class="headerlink" title="setStrokeWidth"></a>setStrokeWidth</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStrokeWidth (float width)</div></pre></td></tr></table></figure>
<p>当画笔样式为STROKE或FILL_OR_STROKE时，设置笔刷的粗细度 </p>
<h1 id="setStyle"><a href="#setStyle" class="headerlink" title="setStyle"></a>setStyle</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setStyle (Paint.Style style)</div></pre></td></tr></table></figure>
<p>设置画笔样式，画笔样式分三种：<br> Paint.Style.STROKE：描边<br> Paint.Style.FILL_AND_STROKE：描边并填充<br> Paint.Style.FILL：填充 </p>
<h1 id="setSubpixelText"><a href="#setSubpixelText" class="headerlink" title="setSubpixelText"></a>setSubpixelText</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setSubpixelText (boolean subpixelText)</div></pre></td></tr></table></figure>
<p>有助于文本在LCD屏幕上的显示效果</p>
<h1 id="setTextAlign"><a href="#setTextAlign" class="headerlink" title="setTextAlign"></a>setTextAlign</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setTextAlign(Paint.Align align)</div></pre></td></tr></table></figure>
<p>设置文本对齐</p>
<h1 id="setTextScaleX"><a href="#setTextScaleX" class="headerlink" title="setTextScaleX"></a>setTextScaleX</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setTextScaleX(float scaleX)</div></pre></td></tr></table></figure>
<p>设置文本缩放倍数，1.0f为原始</p>
<h1 id="setTextSize"><a href="#setTextSize" class="headerlink" title="setTextSize"></a>setTextSize</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setTextSize(float textSize)</div></pre></td></tr></table></figure>
<p>设置字体大小</p>
<h1 id="setTextSkewX"><a href="#setTextSkewX" class="headerlink" title="setTextSkewX"></a>setTextSkewX</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setTextSkewX (float skewX)</div></pre></td></tr></table></figure>
<p>设置斜体文字，skewX为倾斜弧度，默认值0，大于0，向左斜，小于0，向右斜</p>
<h1 id="setTypeface"><a href="#setTypeface" class="headerlink" title="setTypeface"></a>setTypeface</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Typeface  setTypeface(Typeface typeface)</div></pre></td></tr></table></figure>
<p>设置字体，Typeface包含了字体的类型，粗细，还有倾斜、颜色等。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mPaint.setTypeface(Typeface.SANS_SERIF);</div></pre></td></tr></table></figure>
<h1 id="setUnderlineText"><a href="#setUnderlineText" class="headerlink" title="setUnderlineText"></a>setUnderlineText</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void setUnderlineText(boolean underlineText)</div></pre></td></tr></table></figure>
<p>设置下划线</p>
<h1 id="setXfermode"><a href="#setXfermode" class="headerlink" title="setXfermode"></a>setXfermode</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Xfermode setXfermode (Xfermode xfermode)</div></pre></td></tr></table></figure>
<p>设置图像混合模式，<a href="https://developer.android.com/reference/android/graphics/Xfermode.html" target="_blank" rel="external">Xfermode</a> 有个子类去实现PorterDuffXfermode</p>
<h2 id="PorterDuffXfermode"><a href="#PorterDuffXfermode" class="headerlink" title="PorterDuffXfermode"></a>PorterDuffXfermode</h2><p>构造方法<code>PorterDuffXfermode(PorterDuff.Mode mode)</code>，参数就是上面的提到的，图形混合模式如图：</p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/PaintCanvas1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>Dst：先画(下层)的图形；Src：后画(上层)的图形，然而被网上这张图片误导了，解释见<a href="http://blog.csdn.net/iispring/article/details/50472485" target="_blank" rel="external">孙群博客</a>，他也给了最终运行效果：</p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint8.jpg" alt=""></p>
<p>我一一运行确实是如此，这里贴出Mode 为Screen代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">public class PaintCanvas extends View &#123;</div><div class="line">    private Paint mPaint;</div><div class="line">    private PorterDuffXfermode porterDuffXfermode;// 图形混合模式</div><div class="line">    private Context mContext;</div><div class="line">    private Bitmap mBitmap;</div><div class="line">    //省略构造方法</div><div class="line"></div><div class="line">    private void init() &#123;</div><div class="line">        mBitmap = BitmapFactory.decodeResource(mContext.getResources(), R.mipmap.logo);</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setAntiAlias(true);</div><div class="line">        // 实例化混合模式</div><div class="line">        porterDuffXfermode = new PorterDuffXfermode(PorterDuff.Mode.SCREEN);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        int canvasWidth = canvas.getWidth();</div><div class="line">        int canvasHeight = canvas.getHeight();</div><div class="line">        //新建一个layer,放置在canvas默认layer的上部，产生的layer初始时是完全透明的</div><div class="line">        int layerId = canvas.saveLayer(0, 0, canvasWidth, canvasHeight, null, Canvas.ALL_SAVE_FLAG);</div><div class="line">        //dst是先画的图形</div><div class="line">        canvas.drawBitmap(mBitmap, 0, 0, mPaint);</div><div class="line">        //设置混合模式</div><div class="line">        mPaint.setXfermode(porterDuffXfermode);</div><div class="line">        //src是后画的图形</div><div class="line">        mPaint.setColor(0xFFFFCC44);</div><div class="line">        canvas.drawCircle(600, 600, 200, mPaint);</div><div class="line">        //还原混合模式</div><div class="line">        mPaint.setXfermode(null);</div><div class="line">        //或canvas.restore()把这个layer绘制到canvas默认的layer上去</div><div class="line">        canvas.restoreToCount(layerId);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/paint9.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="例子源码"><a href="#例子源码" class="headerlink" title="例子源码"></a>例子源码</h1><p><a href="https://github.com/WuXiaolong/AndroidSamples/blob/master/app/src/main/java/com/wuxiaolong/androidsamples/paintcanvas/PaintView.java" target="_blank" rel="external">https://github.com/WuXiaolong/AndroidSamples/blob/master/app/src/main/java/com/wuxiaolong/androidsamples/paintcanvas/PaintCanvas.java</a></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>这篇文章真长，从开始写到最后的校对，花了很长时间，每段代码运行都截图上传。只能说实践是检验真理的唯一标准，不一定知道每个原理，都必须知道每个是什么样子的效果，记录完成方便自己日后查找，也方便大家哦，如果您能读到这篇文章的话。最后的最后，萨摩耶有话说：<strong>我只想安静做一只可爱的狗狗</strong>！</p>
<h1 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h1><p><a href="https://developer.android.com/reference/android/graphics/Paint.html" target="_blank" rel="external">官网Paint</a><br><a href="http://blog.csdn.net/aigestudio/article/details/41316141" target="_blank" rel="external">自定义控件其实很简单1/6</a><br><a href="http://blog.csdn.net/aigestudio/article/details/41447349" target="_blank" rel="external">自定义控件其实很简单1/4</a><br><a href="http://blog.csdn.net/iispring/article/details/50472485" target="_blank" rel="external">Android中Canvas绘图之PorterDuffXfermode使用及工作原理详解</a><br><a href="http://blog.csdn.net/iispring/article/details/49877661" target="_blank" rel="external"> Android中Canvas绘图之MaskFilter图文详解（附源码下载）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;了解Android Paint，一篇就够&lt;/strong&gt;。引用Aige《&lt;a href=&quot;http://blog.csdn.net/aigestudio&quot;&gt;自定义控件其实很简单&lt;/a&gt;》系列博客的话“很多时候你压根不需要了解太多原理，只需站在巨人的丁丁上即可”，所谓前人种树后人好乘凉，我这里记录下实践结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我们可以通过Paint中setter方法来为画笔设置属性：&lt;br&gt;
    
    </summary>
    
      <category term="CustomView" scheme="http://wuxiaolong.me/categories/CustomView/"/>
    
    
      <category term="Paint" scheme="http://wuxiaolong.me/tags/Paint/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 使用小技巧</title>
    <link href="http://wuxiaolong.me/2016/08/16/AndroidstudioGuide/"/>
    <id>http://wuxiaolong.me/2016/08/16/AndroidstudioGuide/</id>
    <published>2016-08-16T14:29:28.000Z</published>
    <updated>2016-08-25T11:38:52.898Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>当初从eclipse转到Android Studio，为了快速适应Android Studio，我把它的快捷键设置了eclipse了，如何设置，见：<a href="http://wuxiaolong.me/2014/10/21/Android-Studio-shortcut-keys-arranged-like-Eclipse/">Android Studio快捷键设置成跟Eclipse一样</a>，至于Android Studio本身的快捷键没去研究，还是比较习惯eclipse那套快捷键。本文介绍一些会提高工作效率可能您还不知道的Android Studio小技巧&amp;快捷键。</p>
</blockquote>
<h1 id="代码提示不区别大小写"><a href="#代码提示不区别大小写" class="headerlink" title="代码提示不区别大小写"></a>代码提示不区别大小写</h1><p>使用方法：Editor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu14.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><a id="more"></a></p>
<h1 id="变量命名提示"><a href="#变量命名提示" class="headerlink" title="变量命名提示"></a>变量命名提示</h1><p>变量命名都是用小写m开头，Android Studio提示却是这样的：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu7.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>如何输入m，提示mRetrofit呢？<br>使用方法：Code Style-Java-Code Generation-Fields<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu8.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>输入m，达到预期效果：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu6.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="自动检查dependencies更新"><a href="#自动检查dependencies更新" class="headerlink" title="自动检查dependencies更新"></a>自动检查dependencies更新</h1><p>使用Gradle编译Android项目，会依赖很多第三方库如：<code>compile &#39;com.squareup.retrofit2:retrofit:2.0.0-beta4&#39;</code>，问题：如何让Android Studio自动检查第三方库是否有更新呢？<br>使用方法：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu10.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>勾上Newer Library Versions Available，然后点击Android Studio菜单Analyze-Run inspections By Name(快捷键：Shift+Ctrl+Alt+I)<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu11.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>输入newer，选择Module，Inspecting Code…<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu12.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="查找使用"><a href="#查找使用" class="headerlink" title="查找使用"></a>查找使用</h1><p>使用方法：将鼠标放在需要查找的类或变量，选择Find Usages<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu9.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="快速进入类"><a href="#快速进入类" class="headerlink" title="快速进入类"></a>快速进入类</h1><p>使用方法：Shift+Ctrl+T<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu13.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>当不勾上Include non-project class搜的是当前Module，勾上是全局的。</p>
<h1 id="上下移动行"><a href="#上下移动行" class="headerlink" title="上下移动行"></a>上下移动行</h1><p>使用方法：Alt+up/down<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu1.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="上下复制行"><a href="#上下复制行" class="headerlink" title="上下复制行"></a>上下复制行</h1><p>使用方法：Ctrl+Alt+up/down<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu2.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="多行编辑"><a href="#多行编辑" class="headerlink" title="多行编辑"></a>多行编辑</h1><p>使用方法：按住Alt+鼠标左键选择<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu3.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="删除一行"><a href="#删除一行" class="headerlink" title="删除一行"></a>删除一行</h1><p>使用方法：Ctrl+D<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu4.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="快捷键运行"><a href="#快捷键运行" class="headerlink" title="快捷键运行"></a>快捷键运行</h1><p>使用方法：Shift+Alt+X，代替每次都得点击去运行<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/asu5.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="Android-Studio调试技巧"><a href="#Android-Studio调试技巧" class="headerlink" title="Android Studio调试技巧"></a>Android Studio调试技巧</h1><p><a href="http://blog.csdn.net/yy1300326388/article/details/46501871" target="_blank" rel="external">[Android Studio 权威教程]断点调试和高级调试</a></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;当初从eclipse转到Android Studio，为了快速适应Android Studio，我把它的快捷键设置了eclipse了，如何设置，见：&lt;a href=&quot;http://wuxiaolong.me/2014/10/21/Android-Studio-shortcut-keys-arranged-like-Eclipse/&quot;&gt;Android Studio快捷键设置成跟Eclipse一样&lt;/a&gt;，至于Android Studio本身的快捷键没去研究，还是比较习惯eclipse那套快捷键。本文介绍一些会提高工作效率可能您还不知道的Android Studio小技巧&amp;amp;快捷键。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;代码提示不区别大小写&quot;&gt;&lt;a href=&quot;#代码提示不区别大小写&quot; class=&quot;headerlink&quot; title=&quot;代码提示不区别大小写&quot;&gt;&lt;/a&gt;代码提示不区别大小写&lt;/h1&gt;&lt;p&gt;使用方法：Editor标签下-Code Completion下-Case sensitive completion选择None，当输入代码，不区别大小写也能弹出代码提示&lt;br&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/asu14.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="Android Studio" scheme="http://wuxiaolong.me/categories/Android-Studio/"/>
    
    
      <category term="Android Studio" scheme="http://wuxiaolong.me/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>一个程序猿的幸福历程</title>
    <link href="http://wuxiaolong.me/2016/07/24/myHappyWay/"/>
    <id>http://wuxiaolong.me/2016/07/24/myHappyWay/</id>
    <published>2016-07-24T13:52:59.000Z</published>
    <updated>2016-08-25T11:38:52.950Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>“很多人跟我说，你有房有车有老婆有小孩，人生圆满了啊，真的是这样吗？”</p>
</blockquote>
<h1 id="初识"><a href="#初识" class="headerlink" title="初识"></a>初识</h1><p>我和我老婆是校友，我是软件专业，她是财务专业，她小我一届。至于怎么认识的，已记不得，只是一直是QQ好友，11年暑假见面就在一起了。</p>
<h1 id="恋爱"><a href="#恋爱" class="headerlink" title="恋爱"></a>恋爱</h1><p><strong>恋爱应该是最开心的一段时光</strong>，有时间我们就出来玩，去公园，爬山，吃饭啥的。<br><a id="more"></a><br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay1.png?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>女票很喜欢吃辣，我一开始不怎么吃，到后来我吃辣也是杠杠的。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay2.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>就这样<strong>无忧无虑</strong>过了一年，我毕业了，尽管刚刚实习薪资才1500，但我们依旧过得十分开心，那段时光是值得永久保存的。</p>
<h1 id="谈婚论嫁"><a href="#谈婚论嫁" class="headerlink" title="谈婚论嫁"></a>谈婚论嫁</h1><p>这个阶段我是不太愿意多回顾，但是是人生必经历的阶段，很多小情侣恐怕就在双方父母见面后谈不拢被迫选择分手的吧。如果这个阶段分手，我觉得太可惜。如果真的分手，那可能父母太自私，打着为小孩的幸福名义，实则为了自己的面子。</p>
<p>我在这个阶段细节：此处省略一万字。只能说家家有本难念的经，我这个“中间人”显得如此的无助和无奈，我也在女票面前哭的<strong>稀里哗啦</strong>（我记事一来，第一次哭，也是<strong>最后一次</strong>），我也想过放弃这段感情。</p>
<h1 id="怀孕"><a href="#怀孕" class="headerlink" title="怀孕"></a>怀孕</h1><p>都说孕妇易怒，果不假，再加上老婆脾气本身就不太好，不过我想说的是，老婆大部分时间都是好沟通，脾气也是不错的，偶尔“发发疯”，忍忍就过了，谁让你是祖宗，而且又怀孕了。当然也有没有忍着的时候，于是 <a href="http://mp.weixin.qq.com/s?__biz=MzI4MzE2MTQ5Mw==&amp;mid=2649752167&amp;idx=1&amp;sn=b607fb63d412f9cbccbb247c7c8d82da&amp;scene=21#wechat_redirect" target="_blank" rel="external">如何逼疯程序猿</a>。</p>
<h1 id="宝宝到来的准备"><a href="#宝宝到来的准备" class="headerlink" title="宝宝到来的准备"></a>宝宝到来的准备</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay4.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay5.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay6.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay7.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay9.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay10.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay11.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>因此我也付出了“代价”，跟着老婆后面天天吃好的，胖了<strong>10多斤</strong>！！！<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay12.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="宝宝的降临"><a href="#宝宝的降临" class="headerlink" title="宝宝的降临"></a>宝宝的降临</h1><p>2016年7月16号10点55分，一个小胖子出生，<strong>8斤</strong>，而且还是<strong>顺产</strong>。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay8.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br>老婆预产期是10号，我8号就请了陪产假，在家等着宝宝的出生，谁知老婆一点反应都没有，肚子也不疼。16号当天早上四点多，老婆把我从睡梦里叫醒，说羊水破了，我问要去医院吗，老婆说要不等天亮，就上床睡，但是老婆肚子好痛，还是马上去了医院。</p>
<p>挂号办理住院手续，做B超，然后带她进产房去检查，此时8点多，可是很久都没有出来，不会在里面生了吧，我一直在产房等，拿水进去，来回走动，焦急的很。11点多，我正好去拿东西，就听到丈人喊，生了，8斤，男孩，嗯，终于安心了。还等2个小时，需要观察一下大人和小孩。</p>
<p>当产房门打开，推着他们出来，我还难以置信，宝宝就这样来了？！也好像不认识了老婆，在我想象，不是出来就打我咬我吗，看她如此淡定看着娃，难道是因为升级当妈的缘故，瞬间觉得老婆真的好伟大。</p>
<p><strong>老婆，你比我想象中更加坚强</strong>。</p>
<h1 id="吴思睿"><a href="#吴思睿" class="headerlink" title="吴思睿"></a>吴思睿</h1><p>其实男宝宝女宝宝，我们是无所谓的，我内心觉得是女宝宝，因为身边的程序猿生的娃大多数是女宝宝。</p>
<p>宝宝，我只希望你能<strong>健康成长</strong>，做个<strong>思想独立</strong>、<strong>善良</strong>的人，让我们一起来呵护你的麻麻哈。</p>
<p>当然，什么样子的父母什么样子的小孩，我会言传声教，为你树立好的榜样，做好你的人生向导。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay13.JPG?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>我希望我们就像电视剧里一样，<strong>从此我们一家三口过上了幸福的生活</strong>。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/myHappyWay3.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;“很多人跟我说，你有房有车有老婆有小孩，人生圆满了啊，真的是这样吗？”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;初识&quot;&gt;&lt;a href=&quot;#初识&quot; class=&quot;headerlink&quot; title=&quot;初识&quot;&gt;&lt;/a&gt;初识&lt;/h1&gt;&lt;p&gt;我和我老婆是校友，我是软件专业，她是财务专业，她小我一届。至于怎么认识的，已记不得，只是一直是QQ好友，11年暑假见面就在一起了。&lt;/p&gt;
&lt;h1 id=&quot;恋爱&quot;&gt;&lt;a href=&quot;#恋爱&quot; class=&quot;headerlink&quot; title=&quot;恋爱&quot;&gt;&lt;/a&gt;恋爱&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;恋爱应该是最开心的一段时光&lt;/strong&gt;，有时间我们就出来玩，去公园，爬山，吃饭啥的。&lt;br&gt;
    
    </summary>
    
      <category term="Life" scheme="http://wuxiaolong.me/categories/Life/"/>
    
    
      <category term="Happy" scheme="http://wuxiaolong.me/tags/Happy/"/>
    
  </entry>
  
  <entry>
    <title>Android Support Library 之 夜间模式</title>
    <link href="http://wuxiaolong.me/2016/07/12/appcompatDayNight/"/>
    <id>http://wuxiaolong.me/2016/07/12/appcompatDayNight/</id>
    <published>2016-07-12T15:12:23.000Z</published>
    <updated>2016-10-21T12:33:28.524Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>夜间模式实现方式<br>1、通过切换theme来实现夜间模式。<br>优点：可以匹配多套主题，并不局限于黑白模式<br>缺点：需要大量定义主题<br>详见博客：<a href="http://wuxiaolong.me/2015/08/19/ChangeTheme/">http://wuxiaolong.me/2015/08/19/ChangeTheme/</a></p>
<p>2、通过修改uiMode来切换夜间模式。<br>修改uimode是修改Configuration，这种主题切换只限于黑白模式，没有其他模式，不需要大量定义主题，即本文介绍的内容。</p>
<h1 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h1><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/nightTheme.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""><br><a id="more"></a></p>
<h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>（1）app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.android.support:appcompat-v7:24.0.0'</span></div></pre></td></tr></table></figure></p>
<p>（2）Activity须继承AppCompatActivity</p>
<p>（3）Theme.AppCompat.DayNight<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;style name="AppTheme" parent="Theme.AppCompat.DayNight"&gt;</div><div class="line">    &lt;!-- Customize your theme here. --&gt;</div><div class="line">    &lt;item name="colorPrimary"&gt;@color/colorPrimary&lt;/item&gt;</div><div class="line">    &lt;item name="colorPrimaryDark"&gt;@color/colorPrimaryDark&lt;/item&gt;</div><div class="line">    &lt;item name="colorAccent"&gt;@color/colorAccent&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;style name="AppTheme.NoActionBar"&gt;</div><div class="line">    &lt;item name="windowActionBar"&gt;false&lt;/item&gt;</div><div class="line">    &lt;item name="windowNoTitle"&gt;true&lt;/item&gt;</div><div class="line">&lt;/style&gt;</div></pre></td></tr></table></figure></p>
<h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><p>应用全局主题推荐在 Application 的onCreate()中进行设置<br>AppCompatDelegate.setDefaultNightMode(int mode);</p>
<p>它有四个可选值，分别是：<br>MODE_NIGHT_NO： 使用亮色(light)主题，不使用夜间模式<br>MODE_NIGHT_YES：使用暗色(dark)主题，使用夜间模式<br>MODE_NIGHT_AUTO：根据当前时间自动切换 亮色(light)/暗色(dark)主题<br>MODE_NIGHT_FOLLOW_SYSTEM(默认选项)：设置为跟随系统，通常为 MODE_NIGHT_NO</p>
<h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><p>动态的设定主题，需要切换主题调用：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">AppCompatDelegate.setDefaultNightMode(AppCompatDelegate.MODE_NIGHT_YES);</div><div class="line"><span class="comment">//调用recreate()使设置生效</span></div><div class="line">recreate();</div></pre></td></tr></table></figure></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学。不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><h2 id="setDefaultNightMode-与setLocalNightMode-区别"><a href="#setDefaultNightMode-与setLocalNightMode-区别" class="headerlink" title="setDefaultNightMode()与setLocalNightMode()区别"></a>setDefaultNightMode()与setLocalNightMode()区别</h2><p>AppCompatDelegate.setDefaultNightMode()是对整个App中theme为DayNight主题生效<br>getDelegate().setLocalNightMode()只对特定的组件生效</p>
<h2 id="夜间资源"><a href="#夜间资源" class="headerlink" title="夜间资源"></a>夜间资源</h2><p>把夜晚主题的color等资源放在values-night中，程序在运行时就会自动调用</p>
<h2 id="获取应用当前的主题"><a href="#获取应用当前的主题" class="headerlink" title="获取应用当前的主题"></a>获取应用当前的主题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> currentNightMode = getResources().getConfiguration().uiMode</div><div class="line">        &amp; Configuration.UI_MODE_NIGHT_MASK;</div><div class="line"><span class="keyword">switch</span> (currentNightMode) &#123;</div><div class="line">    <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_NO:</div><div class="line">        <span class="comment">// Night mode is not active, we're in day time</span></div><div class="line">    <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_YES:</div><div class="line">        <span class="comment">// Night mode is active, we're at night!</span></div><div class="line">    <span class="keyword">case</span> Configuration.UI_MODE_NIGHT_UNDEFINED:</div><div class="line">        <span class="comment">// We don't know what mode we're in, assume notnight</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果切换了主题，本想通过这个方法，下次启动程序的时候，来设置。发现并没有记住这个值，还是只能SharedPreference读取，然后根据用户设置，调用 setDefaultNightMode() 方法。</p>
<h2 id="适配文字图片"><a href="#适配文字图片" class="headerlink" title="适配文字图片"></a>适配文字图片</h2><p>尽可能的使用主题属性（theme attributes）</p>
<p><strong>文字颜色</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">android:textColor=&quot;?android:attr/textColorPrimary&quot; </div><div class="line">android:textColor=&quot;?android:textColorPrimary&quot;</div></pre></td></tr></table></figure></p>
<p>系统默认的文字颜色。在亮色（light）主题下，颜色接近黑色，在暗色（dark）主题下，颜色接近白色。有两种写法，次标题和三标题同样。</p>
<p>次标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textColor=&quot;?android:attr/textColorSecondary&quot;</div></pre></td></tr></table></figure></p>
<p>三标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:textColor=&quot;?android:attr/textColorTertiary&quot;</div></pre></td></tr></table></figure></p>
<p><strong>系统默认的背景颜色</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">android:background=&quot;?android:attr/colorBackground&quot;</div><div class="line">android:background=&quot;?android:colorBackground&quot;</div></pre></td></tr></table></figure></p>
<p><strong>点击效果</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">android:background=&quot;?android:attr/selectableItemBackground&quot;</div><div class="line">android:background=&quot;?android:selectableItemBackground&quot;</div><div class="line">android:background=&quot;?attr/selectableItemBackground&quot;</div></pre></td></tr></table></figure></p>
<p><strong>系统默认的图标颜色</strong></p>
<p>如vector里颜色：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">android:fillColor=&quot;?attr/colorControlNormal&quot;</div></pre></td></tr></table></figure></p>
<h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p><a href="https://github.com/WuXiaolong/DesignSupportLibrarySample" target="_blank" rel="external">https://github.com/WuXiaolong/DesignSupportLibrarySample</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;夜间模式实现方式&lt;br&gt;1、通过切换theme来实现夜间模式。&lt;br&gt;优点：可以匹配多套主题，并不局限于黑白模式&lt;br&gt;缺点：需要大量定义主题&lt;br&gt;详见博客：&lt;a href=&quot;http://wuxiaolong.me/2015/08/19/ChangeTheme/&quot;&gt;http://wuxiaolong.me/2015/08/19/ChangeTheme/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2、通过修改uiMode来切换夜间模式。&lt;br&gt;修改uimode是修改Configuration，这种主题切换只限于黑白模式，没有其他模式，不需要大量定义主题，即本文介绍的内容。&lt;/p&gt;
&lt;h1 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/nightTheme.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="SupportLibrary" scheme="http://wuxiaolong.me/categories/SupportLibrary/"/>
    
    
      <category term="NightTheme" scheme="http://wuxiaolong.me/tags/NightTheme/"/>
    
  </entry>
  
  <entry>
    <title>uCrop使用及源码浅析</title>
    <link href="http://wuxiaolong.me/2016/06/20/uCrop/"/>
    <id>http://wuxiaolong.me/2016/06/20/uCrop/</id>
    <published>2016-06-20T00:52:32.000Z</published>
    <updated>2016-12-20T12:54:19.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="uCrop使用"><a href="#uCrop使用" class="headerlink" title="uCrop使用"></a>uCrop使用</h1><h2 id="github地址"><a href="#github地址" class="headerlink" title="github地址"></a>github地址</h2><p><a href="https://github.com/Yalantis/uCrop" target="_blank" rel="external">https://github.com/Yalantis/uCrop</a><br>然后clone或下载到本地，运行之。</p>
<h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p><img src="http://7q5c2h.com1.z0.glb.clouddn.com/ucrop0.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<a id="more"></a>
<h2 id="app-build-gradle"><a href="#app-build-gradle" class="headerlink" title="app/build.gradle"></a>app/build.gradle</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.yalantis:ucrop:1.5.0'</span></div></pre></td></tr></table></figure>
<h2 id="AndroidManifest-xml"><a href="#AndroidManifest-xml" class="headerlink" title="AndroidManifest.xml"></a>AndroidManifest.xml</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">    android:name=<span class="string">"com.yalantis.ucrop.UCropActivity"</span></div><div class="line">    android:screenOrientation=<span class="string">"portrait"</span></div><div class="line">    android:theme=<span class="string">"@style/Theme.AppCompat.Light.NoActionBar"</span> /&gt;</div></pre></td></tr></table></figure>
<p>这里theme可以改成自己的</p>
<h2 id="配置uCrop"><a href="#配置uCrop" class="headerlink" title="配置uCrop"></a>配置uCrop</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">/**</span></div><div class="line">  * 启动裁剪</div><div class="line">  * <span class="doctag">@param</span> activity 上下文</div><div class="line">  * <span class="doctag">@param</span> sourceFilePath 需要裁剪图片的绝对路径</div><div class="line">  * <span class="doctag">@param</span> requestCode 比如：UCrop.REQUEST_CROP</div><div class="line">  * <span class="doctag">@param</span> aspectRatioX 裁剪图片宽高比</div><div class="line">  * <span class="doctag">@param</span> aspectRatioY 裁剪图片宽高比</div><div class="line">  * <span class="doctag">@return</span></div><div class="line">  */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">startUCrop</span><span class="params">(Activity activity, String sourceFilePath, </span></span></div><div class="line">	<span class="keyword">int</span> requestCode, <span class="keyword">float</span> aspectRatioX, <span class="keyword">float</span> aspectRatioY) &#123;</div><div class="line">    Uri sourceUri = Uri.fromFile(<span class="keyword">new</span> File(sourceFilePath));</div><div class="line">    File outDir = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);</div><div class="line">    <span class="keyword">if</span> (!outDir.exists()) &#123;</div><div class="line">        outDir.mkdirs();</div><div class="line">    &#125;</div><div class="line">    File outFile = <span class="keyword">new</span> File(outDir, System.currentTimeMillis() + <span class="string">".jpg"</span>);</div><div class="line">    <span class="comment">//裁剪后图片的绝对路径</span></div><div class="line">    String cameraScalePath = outFile.getAbsolutePath();</div><div class="line">    Uri destinationUri = Uri.fromFile(outFile);</div><div class="line">    <span class="comment">//初始化，第一个参数：需要裁剪的图片；第二个参数：裁剪后图片</span></div><div class="line">    UCrop uCrop = UCrop.of(sourceUri, destinationUri);</div><div class="line">    <span class="comment">//初始化UCrop配置</span></div><div class="line">    UCrop.Options options = <span class="keyword">new</span> UCrop.Options();</div><div class="line">    <span class="comment">//设置裁剪图片可操作的手势</span></div><div class="line">    options.setAllowedGestures(UCropActivity.SCALE, UCropActivity.ROTATE, UCropActivity.ALL);</div><div class="line">    <span class="comment">//是否隐藏底部容器，默认显示</span></div><div class="line">    options.setHideBottomControls(<span class="keyword">true</span>);</div><div class="line">    <span class="comment">//设置toolbar颜色</span></div><div class="line">    options.setToolbarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));</div><div class="line">    <span class="comment">//设置状态栏颜色</span></div><div class="line">    options.setStatusBarColor(ActivityCompat.getColor(activity, R.color.colorPrimary));</div><div class="line">    <span class="comment">//是否能调整裁剪框</span></div><div class="line">    options.setFreeStyleCropEnabled(<span class="keyword">true</span>);</div><div class="line">    <span class="comment">//UCrop配置</span></div><div class="line">    uCrop.withOptions(options);</div><div class="line">    <span class="comment">//设置裁剪图片的宽高比，比如16：9</span></div><div class="line">    uCrop.withAspectRatio(aspectRatioX, aspectRatioY);</div><div class="line">    <span class="comment">//uCrop.useSourceImageAspectRatio();</span></div><div class="line">    <span class="comment">//跳转裁剪页面</span></div><div class="line">    uCrop.start(activity, requestCode);</div><div class="line">    <span class="keyword">return</span> cameraScalePath;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置Toolbar标题</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">setToolbarTitle</span><span class="params">(@Nullable String text)</span></span></div><div class="line"><span class="comment">//设置裁剪的图片格式</span></div><div class="line"><span class="keyword">void</span> <span class="title">setCompressionFormat</span><span class="params">(@NonNull Bitmap.CompressFormat format)</span></div><div class="line"><span class="comment">//设置裁剪的图片质量，取值0-100</span></div><div class="line"><span class="keyword">void</span> <span class="title">setCompressionQuality</span><span class="params">(@IntRange(from = <span class="number">0</span>)</span> <span class="keyword">int</span> compressQuality)</div><div class="line"><span class="comment">//设置最多缩放的比例尺</span></div><div class="line"><span class="keyword">void</span> <span class="title">setMaxScaleMultiplier</span><span class="params">(@FloatRange(from = <span class="number">1.0</span>, fromInclusive = <span class="keyword">false</span>)</span> <span class="keyword">float</span> maxScaleMultiplier)</div><div class="line"><span class="comment">//动画时间</span></div><div class="line"><span class="keyword">void</span> <span class="title">setImageToCropBoundsAnimDuration</span><span class="params">(@IntRange(from = <span class="number">100</span>)</span> <span class="keyword">int</span> durationMillis)</div><div class="line"><span class="comment">//设置图片压缩最大值</span></div><div class="line"><span class="keyword">void</span> <span class="title">setMaxBitmapSize</span><span class="params">(@IntRange(from = <span class="number">100</span>)</span> <span class="keyword">int</span> maxBitmapSize)</div><div class="line"><span class="comment">//是否显示椭圆裁剪框阴影</span></div><div class="line"><span class="keyword">void</span> <span class="title">setOvalDimmedLayer</span><span class="params">(<span class="keyword">boolean</span> isOval)</span> </div><div class="line"><span class="comment">//设置椭圆裁剪框阴影颜色</span></div><div class="line"><span class="keyword">void</span> <span class="title">setDimmedLayerColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span></div><div class="line"><span class="comment">//是否显示裁剪框</span></div><div class="line"><span class="keyword">void</span> <span class="title">setShowCropFrame</span><span class="params">(<span class="keyword">boolean</span> show)</span></div><div class="line"><span class="comment">//设置裁剪框边的宽度</span></div><div class="line"><span class="keyword">void</span> <span class="title">setCropFrameStrokeWidth</span><span class="params">(@IntRange(from = <span class="number">0</span>)</span> <span class="keyword">int</span> width)</div><div class="line"><span class="comment">//是否显示裁剪框网格</span></div><div class="line"><span class="keyword">void</span> <span class="title">setShowCropGrid</span><span class="params">(<span class="keyword">boolean</span> show)</span> </div><div class="line"><span class="comment">//设置裁剪框网格颜色</span></div><div class="line"><span class="keyword">void</span> <span class="title">setCropGridColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span></div><div class="line"><span class="comment">//设置裁剪框网格宽</span></div><div class="line"><span class="keyword">void</span> <span class="title">setCropGridStrokeWidth</span><span class="params">(@IntRange(from = <span class="number">0</span>)</span> <span class="keyword">int</span> width)</div></pre></td></tr></table></figure>
<h2 id="onActivityResult"><a href="#onActivityResult" class="headerlink" title="onActivityResult"></a>onActivityResult</h2><p>经过裁剪，返回结果，这里我一般只需要裁剪后的图片绝对路径（调用上面startUCrop，即返回图片路径），然后调接口上传服务器。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (resultCode == RESULT_OK &amp;&amp; requestCode == UCrop.REQUEST_CROP) &#123;</div><div class="line">        <span class="keyword">final</span> Uri resultUri = UCrop.getOutput(data);</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (resultCode == UCrop.RESULT_ERROR) &#123;</div><div class="line">        <span class="keyword">final</span> Throwable cropError = UCrop.getError(data);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="uCrop源码浅析"><a href="#uCrop源码浅析" class="headerlink" title="uCrop源码浅析"></a>uCrop源码浅析</h1><p>uCrop源码能学习的东西有很多，比如左右滑的标尺，不过我们这里源码浅析只关注裁剪部分。</p>
<h2 id="类关系"><a href="#类关系" class="headerlink" title="类关系"></a>类关系</h2><p>首先有个大概了解：<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/ucrop1.jpg?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt=""></p>
<p>GestureCropImageView：负责监听各种手势<br>CropImageView：主要完成图片裁剪工作，和判断裁剪图片是否充满裁剪框<br>TransformImageView：负责图片旋转、缩放、位移操作</p>
<h2 id="入口"><a href="#入口" class="headerlink" title="入口"></a>入口</h2><p>由上面的效果图可知，点击右上角，调用裁剪操作，代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (item.getItemId() == R.id.menu_crop) &#123;</div><div class="line">        cropAndSaveImage();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">super</span>.onOptionsItemSelected(item);</div><div class="line">&#125;</div><div class="line"><span class="comment">//裁剪和保存图片</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">cropAndSaveImage</span><span class="params">()</span> </span>&#123;</div><div class="line">	……</div><div class="line">    mGestureCropImageView.cropAndSaveImage(mCompressFormat, mCompressQuality, <span class="keyword">new</span> BitmapCropCallback() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBitmapCropped</span><span class="params">(@NonNull Uri resultUri)</span> </span>&#123;</div><div class="line">            setResultUri(resultUri, mGestureCropImageView.getTargetAspectRatio());</div><div class="line">            finish();</div><div class="line">        &#125;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCropFailure</span><span class="params">(@NonNull Throwable t)</span> </span>&#123;</div><div class="line">            setResultError(t);</div><div class="line">            finish();</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>这里调用了GestureCropImageView&amp;cropAndSaveImage方法，如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * <span class="doctag">@param</span> compressFormat  图片压缩格式</div><div class="line"> * <span class="doctag">@param</span> compressQuality 图片压缩质量</div><div class="line"> * <span class="doctag">@param</span> cropCallback    图片压缩回调</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cropAndSaveImage</span><span class="params">(@NonNull Bitmap.CompressFormat compressFormat, <span class="keyword">int</span> 											compressQuality,@Nullable BitmapCropCallback cropCallback)</span> </span>&#123;</div><div class="line">    <span class="comment">//取消所有动画</span></div><div class="line">    cancelAllAnimations();</div><div class="line">    <span class="comment">//判断裁剪图片是否充满裁剪框</span></div><div class="line">    setImageToWrapCropBounds(<span class="keyword">false</span>);</div><div class="line">    <span class="comment">//进行裁剪</span></div><div class="line">    <span class="keyword">new</span> BitmapCropTask(getViewBitmap(), mCropRect, RectUtils.trapToRect(mCurrentImageCorners),</div><div class="line">            getCurrentScale(), getCurrentAngle(),</div><div class="line">            mMaxResultImageSizeX, mMaxResultImageSizeY,</div><div class="line">            compressFormat, compressQuality,</div><div class="line">            getImageInputPath(), getImageOutputPath(),</div><div class="line">            cropCallback).execute();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="裁剪之前"><a href="#裁剪之前" class="headerlink" title="裁剪之前"></a>裁剪之前</h2><h3 id="setImageToWrapCropBounds"><a href="#setImageToWrapCropBounds" class="headerlink" title="setImageToWrapCropBounds"></a>setImageToWrapCropBounds</h3><p>裁剪之前，先判断裁剪图片是否充满裁剪框，如果没有，进行移动和缩放让其充满。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImageToWrapCropBounds</span><span class="params">(<span class="keyword">boolean</span> animate)</span> </span>&#123;</div><div class="line">    <span class="comment">//mBitmapLaidOut图片加载OK，isImageWrapCropBounds()检查图片是否充满裁剪框</span></div><div class="line">    <span class="keyword">if</span> (mBitmapLaidOut &amp;&amp; !isImageWrapCropBounds()) &#123;</div><div class="line">        <span class="comment">//当前图片中心X点</span></div><div class="line">        <span class="keyword">float</span> currentX = mCurrentImageCenter[<span class="number">0</span>];</div><div class="line">        <span class="comment">//当前图片中心Y点</span></div><div class="line">        <span class="keyword">float</span> currentY = mCurrentImageCenter[<span class="number">1</span>];</div><div class="line">        <span class="comment">//当前图片缩放值</span></div><div class="line">        <span class="keyword">float</span> currentScale = getCurrentScale();</div><div class="line">        <span class="comment">//差量</span></div><div class="line">        <span class="keyword">float</span> deltaX = mCropRect.centerX() - currentX;</div><div class="line">        <span class="keyword">float</span> deltaY = mCropRect.centerY() - currentY;</div><div class="line">        <span class="keyword">float</span> deltaScale = <span class="number">0</span>;</div><div class="line">        <span class="comment">//临时矩阵重置</span></div><div class="line">        mTempMatrix.reset();</div><div class="line">        <span class="comment">//临时矩阵移动</span></div><div class="line">        mTempMatrix.setTranslate(deltaX, deltaY);</div><div class="line">        <span class="comment">//复制到新的数组</span></div><div class="line">        <span class="keyword">final</span> <span class="keyword">float</span>[] tempCurrentImageCorners = Arrays.copyOf(mCurrentImageCorners, mCurrentImageCorners.length);</div><div class="line">        <span class="comment">//将此矩阵应用于二维点的数组，并编写转换后的指向数组的点</span></div><div class="line">        mTempMatrix.mapPoints(tempCurrentImageCorners);</div><div class="line">        <span class="comment">//再检查图片是否充满裁剪框</span></div><div class="line">        <span class="keyword">boolean</span> willImageWrapCropBoundsAfterTranslate = isImageWrapCropBounds(tempCurrentImageCorners);</div><div class="line">        <span class="keyword">if</span> (willImageWrapCropBoundsAfterTranslate) &#123;</div><div class="line">            <span class="comment">//图片缩进的数组</span></div><div class="line">            <span class="keyword">final</span> <span class="keyword">float</span>[] imageIndents = calculateImageIndents();</div><div class="line">            deltaX = -(imageIndents[<span class="number">0</span>] + imageIndents[<span class="number">2</span>]);</div><div class="line">            deltaY = -(imageIndents[<span class="number">1</span>] + imageIndents[<span class="number">3</span>]);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            RectF tempCropRect = <span class="keyword">new</span> RectF(mCropRect);</div><div class="line">            mTempMatrix.reset();</div><div class="line">            mTempMatrix.setRotate(getCurrentAngle());</div><div class="line">            mTempMatrix.mapRect(tempCropRect);</div><div class="line">            <span class="comment">//获取裁剪图片的边</span></div><div class="line">            <span class="keyword">final</span> <span class="keyword">float</span>[] currentImageSides = RectUtils.getRectSidesFromCorners(mCurrentImageCorners);</div><div class="line">            deltaScale = Math.max(tempCropRect.width() / currentImageSides[<span class="number">0</span>],</div><div class="line">                    tempCropRect.height() / currentImageSides[<span class="number">1</span>]);</div><div class="line">            deltaScale = deltaScale * currentScale - currentScale;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (animate) &#123;</div><div class="line">            <span class="comment">//移动或缩放图片（有动画效果）</span></div><div class="line">            post(mWrapCropBoundsRunnable = <span class="keyword">new</span> WrapCropBoundsRunnable(</div><div class="line">                    CropImageView.<span class="keyword">this</span>, mImageToWrapCropBoundsAnimDuration, currentX, currentY, deltaX, deltaY,</div><div class="line">                    currentScale, deltaScale, willImageWrapCropBoundsAfterTranslate));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">//移动图片</span></div><div class="line">            postTranslate(deltaX, deltaY);</div><div class="line">            <span class="keyword">if</span> (!willImageWrapCropBoundsAfterTranslate) &#123;</div><div class="line">                <span class="comment">//缩放图片</span></div><div class="line">                zoomInImage(currentScale + deltaScale, mCropRect.centerX(), mCropRect.centerY());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="进行裁剪"><a href="#进行裁剪" class="headerlink" title="进行裁剪"></a>进行裁剪</h2><p>裁剪放到了异步，即BitmapCropTask继承AsyncTask，先设置原始图片resizeScale值，然后通过ExifInterface保存新的图片，即裁剪后的图片。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BitmapCropTask</span> <span class="keyword">extends</span> <span class="title">AsyncTask</span>&lt;<span class="title">Void</span>, <span class="title">Void</span>, <span class="title">Throwable</span>&gt; </span>&#123;</div><div class="line">	</div><div class="line">	……</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * <span class="doctag">@param</span> viewBitmap          裁剪图片bitmap</div><div class="line">     * <span class="doctag">@param</span> cropRect            裁剪矩形</div><div class="line">     * <span class="doctag">@param</span> currentImageRect    当前图片矩形</div><div class="line">     * <span class="doctag">@param</span> currentScale        当前图片缩放值</div><div class="line">     * <span class="doctag">@param</span> currentAngle        当前图片角度</div><div class="line">     * <span class="doctag">@param</span> maxResultImageSizeX 图片裁剪后最大宽值</div><div class="line">     * <span class="doctag">@param</span> maxResultImageSizeY 图片裁剪后最大高值</div><div class="line">     * <span class="doctag">@param</span> compressFormat      图片裁剪的格式</div><div class="line">     * <span class="doctag">@param</span> compressQuality     图片裁剪的质量</div><div class="line">     * <span class="doctag">@param</span> imageInputPath      裁剪图片路径</div><div class="line">     * <span class="doctag">@param</span> imageOutputPath     图片裁剪后路径</div><div class="line">     * <span class="doctag">@param</span> cropCallback        裁剪回调</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BitmapCropTask</span><span class="params">(@Nullable Bitmap viewBitmap,</span></span></div><div class="line">                          @NonNull RectF cropRect, @NonNull RectF currentImageRect,</div><div class="line">                          <span class="keyword">float</span> currentScale, <span class="keyword">float</span> currentAngle,</div><div class="line">                          <span class="keyword">int</span> maxResultImageSizeX, <span class="keyword">int</span> maxResultImageSizeY,</div><div class="line">                          @NonNull Bitmap.CompressFormat compressFormat, <span class="keyword">int</span> compressQuality,</div><div class="line">                          @NonNull String imageInputPath, @NonNull String imageOutputPath,</div><div class="line">                          @Nullable BitmapCropCallback cropCallback) &#123;</div><div class="line"></div><div class="line">      ……</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="meta">@Nullable</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> Throwable <span class="title">doInBackground</span><span class="params">(Void... params)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mViewBitmap == <span class="keyword">null</span> || mViewBitmap.isRecycled()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NullPointerException(<span class="string">"ViewBitmap is null or already recycled"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (mCurrentImageRect.isEmpty()) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NullPointerException(<span class="string">"CurrentImageRect is empty"</span>);</div><div class="line">        &#125;</div><div class="line">		<span class="comment">//设置resizeScale值</span></div><div class="line">        <span class="keyword">float</span> resizeScale = resize();</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">	        <span class="comment">//裁剪</span></div><div class="line">            crop(resizeScale);</div><div class="line">            <span class="comment">//回收</span></div><div class="line">            mViewBitmap.recycle();</div><div class="line">            mViewBitmap = <span class="keyword">null</span>;</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable throwable) &#123;</div><div class="line">            <span class="keyword">return</span> throwable;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">resize</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//初始Options</span></div><div class="line">        <span class="keyword">final</span> BitmapFactory.Options options = <span class="keyword">new</span> BitmapFactory.Options();</div><div class="line">        <span class="comment">//查询该位图，而无需分配存储器，可获取outHeight(图片原始高度)和 outWidth(图片的原始宽度)</span></div><div class="line">        options.inJustDecodeBounds = <span class="keyword">true</span>;</div><div class="line">        <span class="comment">//裁剪图片解码</span></div><div class="line">        BitmapFactory.decodeFile(mImageInputPath, options);</div><div class="line">        <span class="comment">//原始图片和裁剪后图片比值</span></div><div class="line">        <span class="keyword">float</span> scaleX = options.outWidth / mViewBitmap.getWidth();</div><div class="line">        <span class="keyword">float</span> scaleY = options.outHeight / mViewBitmap.getHeight();</div><div class="line"></div><div class="line">        <span class="keyword">float</span> resizeScale = Math.min(scaleX, scaleY);</div><div class="line"></div><div class="line">        mCurrentScale /= resizeScale;</div><div class="line">        <span class="comment">//初始化值为1</span></div><div class="line">        resizeScale = <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (mMaxResultImageSizeX &gt; <span class="number">0</span> &amp;&amp; mMaxResultImageSizeY &gt; <span class="number">0</span>) &#123;</div><div class="line">            <span class="keyword">float</span> cropWidth = mCropRect.width() / mCurrentScale;</div><div class="line">            <span class="keyword">float</span> cropHeight = mCropRect.height() / mCurrentScale;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (cropWidth &gt; mMaxResultImageSizeX || cropHeight &gt; mMaxResultImageSizeY) &#123;</div><div class="line"></div><div class="line">                scaleX = mMaxResultImageSizeX / cropWidth;</div><div class="line">                scaleY = mMaxResultImageSizeY / cropHeight;</div><div class="line">                <span class="comment">//设置resizeScale，如果是2就是高度和宽度都是原始的一半</span></div><div class="line">                resizeScale = Math.min(scaleX, scaleY);</div><div class="line"></div><div class="line">                mCurrentScale /= resizeScale;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> resizeScale;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">crop</span><span class="params">(<span class="keyword">float</span> resizeScale)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="comment">//ExifInterface这个接口提供了图片文件的旋转，gps，时间等信息，从原始图片读出Exif标签</span></div><div class="line">        ExifInterface originalExif = <span class="keyword">new</span> ExifInterface(mImageInputPath);</div><div class="line"></div><div class="line">        <span class="keyword">int</span> top = Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);</div><div class="line">        <span class="keyword">int</span> left = Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);</div><div class="line">        <span class="keyword">int</span> width = Math.round(mCropRect.width() / mCurrentScale);</div><div class="line">        <span class="keyword">int</span> height = Math.round(mCropRect.height() / mCurrentScale);</div><div class="line">		<span class="comment">//复制图片</span></div><div class="line">        <span class="keyword">boolean</span> cropped = cropCImg(mImageInputPath, mImageOutputPath,</div><div class="line">                left, top, width, height, mCurrentAngle, resizeScale,</div><div class="line">                mCompressFormat.ordinal(), mCompressQuality);</div><div class="line">        <span class="keyword">if</span> (cropped) &#123;</div><div class="line">	        <span class="comment">//拿到裁剪后图片</span></div><div class="line">            copyExif(originalExif, width, height);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> cropped;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">"JniMissingFunction"</span>)</div><div class="line">    <span class="function"><span class="keyword">native</span> <span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">cropCImg</span><span class="params">(String inputPath, String outputPath,</span></span></div><div class="line">                                   <span class="keyword">int</span> left, <span class="keyword">int</span> top, <span class="keyword">int</span> width, <span class="keyword">int</span> height, <span class="keyword">float</span> angle, <span class="keyword">float</span> resizeScale,</div><div class="line">                                   <span class="keyword">int</span> format, <span class="keyword">int</span> quality) <span class="keyword">throws</span> IOException, OutOfMemoryError;</div><div class="line">	<span class="comment">/**</span></div><div class="line">	 * <span class="doctag">@param</span> originalExif 原始图片Exif</div><div class="line">	 * <span class="doctag">@param</span> width        裁剪后图片宽</div><div class="line">	 * <span class="doctag">@param</span> height       裁剪后图片高</div><div class="line">	 * <span class="doctag">@throws</span> IOException 是否异常</div><div class="line">	 */</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">copyExif</span><span class="params">(ExifInterface originalExif, <span class="keyword">int</span> width, <span class="keyword">int</span> height)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="comment">//Exif标签数组</span></div><div class="line">        String[] attributes = <span class="keyword">new</span> String[]&#123;</div><div class="line">                ExifInterface.TAG_APERTURE,</div><div class="line">                ……</div><div class="line">        &#125;;</div><div class="line">        <span class="comment">//指定裁剪后图片路径，初始化新的ExifInterface</span></div><div class="line">        ExifInterface newExif = <span class="keyword">new</span> ExifInterface(mImageOutputPath);</div><div class="line">        String value;</div><div class="line">        <span class="keyword">for</span> (String attribute : attributes) &#123;</div><div class="line">            value = originalExif.getAttribute(attribute);</div><div class="line">            <span class="keyword">if</span> (!TextUtils.isEmpty(value)) &#123;</div><div class="line">                <span class="comment">//设置Exif标签</span></div><div class="line">                newExif.setAttribute(attribute, value);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        newExif.setAttribute(ExifInterface.TAG_IMAGE_WIDTH, String.valueOf(width));</div><div class="line">        newExif.setAttribute(ExifInterface.TAG_IMAGE_LENGTH, String.valueOf(height));</div><div class="line">        newExif.setAttribute(ExifInterface.TAG_ORIENTATION, <span class="string">"0"</span>);</div><div class="line">        <span class="comment">//保存</span></div><div class="line">        newExif.saveAttributes();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPostExecute</span><span class="params">(@Nullable Throwable t)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (mCropCallback != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">if</span> (t == <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="comment">//接口回调，over</span></div><div class="line">                mCropCallback.onBitmapCropped(Uri.fromFile(<span class="keyword">new</span> File(mImageOutputPath)));</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                mCropCallback.onCropFailure(t);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>uCrop功能强大，对于我来说，有很多东西值得学习，难点如Rect包含问题（其实这块还不是很理解），新知识如ExifInterface操作图片，BitmapFactory显示图片的知识点温故等，还有自定义左右滑的标尺，都是不错的学习源码。抛砖引玉至此，over。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;uCrop使用&quot;&gt;&lt;a href=&quot;#uCrop使用&quot; class=&quot;headerlink&quot; title=&quot;uCrop使用&quot;&gt;&lt;/a&gt;uCrop使用&lt;/h1&gt;&lt;h2 id=&quot;github地址&quot;&gt;&lt;a href=&quot;#github地址&quot; class=&quot;headerlink&quot; title=&quot;github地址&quot;&gt;&lt;/a&gt;github地址&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Yalantis/uCrop&quot;&gt;https://github.com/Yalantis/uCrop&lt;/a&gt;&lt;br&gt;然后clone或下载到本地，运行之。&lt;/p&gt;
&lt;h2 id=&quot;效果预览&quot;&gt;&lt;a href=&quot;#效果预览&quot; class=&quot;headerlink&quot; title=&quot;效果预览&quot;&gt;&lt;/a&gt;效果预览&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7q5c2h.com1.z0.glb.clouddn.com/ucrop0.gif?watermark/2/text/5ZC05bCP6b6Z5ZCM5a24/font/5qW35L2T/fontsize/500/fill/I0VGRUZFRg==/dissolve/100/gravity/SouthEast/dx/10/dy/10&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Library" scheme="http://wuxiaolong.me/categories/Library/"/>
    
    
      <category term="uCrop" scheme="http://wuxiaolong.me/tags/uCrop/"/>
    
  </entry>
  
  <entry>
    <title>Android Retrofit 2.0 使用-补充篇</title>
    <link href="http://wuxiaolong.me/2016/06/18/retrofits/"/>
    <id>http://wuxiaolong.me/2016/06/18/retrofits/</id>
    <published>2016-06-18T00:48:53.000Z</published>
    <updated>2016-08-25T11:38:52.953Z</updated>
    
    <content type="html"><![CDATA[<p>推荐阅读，猛戳：<br>1、<a href="http://wuxiaolong.me/2015/09/23/AndroidMVPSample/">Android MVP 实例</a><br>2、<a href="http://wuxiaolong.me/2016/01/15/retrofit/">Android Retrofit 2.0使用</a><br>3、<a href="http://wuxiaolong.me/2016/01/18/rxjava/">RxJava</a><br>4、<a href="http://wuxiaolong.me/2016/04/07/rxbus/">RxBus</a><br>5、<a href="http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/">Android MVP+Retrofit+RxJava实践小结</a></p>
<blockquote>
<p>之前分享的<a href="http://wuxiaolong.me/2016/01/15/retrofit/">Android Retrofit 2.0 使用</a>，属于基本的使用，实际开发还远远不够，因此对其补充，主要在Retrofit配置和接口参数。</p>
</blockquote>
<a id="more"></a>
<h1 id="Retrofit配置"><a href="#Retrofit配置" class="headerlink" title="Retrofit配置"></a>Retrofit配置</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.squareup.retrofit2:retrofit:2.0.2'</span></div></pre></td></tr></table></figure></p>
<p>首先Builder()，得到OkHttpClient.Builder对象builder<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">OkHttpClient.Builder builder = <span class="keyword">new</span> OkHttpClient.Builder();</div></pre></td></tr></table></figure></p>
<h2 id="Log信息拦截器"><a href="#Log信息拦截器" class="headerlink" title="Log信息拦截器"></a>Log信息拦截器</h2><p>Debug可以看到，网络请求，打印Log信息，发布的时候就不需要这些log<br>1、添加依赖<br>app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.squareup.okhttp3:logging-interceptor:3.1.2'</span></div></pre></td></tr></table></figure></p>
<p>2、Log信息拦截器<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (BuildConfig.DEBUG) &#123;</div><div class="line">    <span class="comment">// Log信息拦截器</span></div><div class="line">    HttpLoggingInterceptor loggingInterceptor = <span class="keyword">new</span> HttpLoggingInterceptor();</div><div class="line">    loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</div><div class="line">    <span class="comment">//设置 Debug Log 模式</span></div><div class="line">    builder.addInterceptor(loggingInterceptor);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="缓存机制"><a href="#缓存机制" class="headerlink" title="缓存机制"></a>缓存机制</h2><p>无网络时，也能显示数据<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">File cacheFile = <span class="keyword">new</span> File(DemoApplication.getContext().getExternalCacheDir(), <span class="string">"WuXiaolongCache"</span>);</div><div class="line">Cache cache = <span class="keyword">new</span> Cache(cacheFile, <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">50</span>);</div><div class="line">Interceptor cacheInterceptor = <span class="keyword">new</span> Interceptor() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        Request request = chain.request();</div><div class="line">        <span class="keyword">if</span> (!AppUtils.networkIsAvailable(DemoApplication.getContext())) &#123;</div><div class="line">            request = request.newBuilder()</div><div class="line">                    .cacheControl(CacheControl.FORCE_CACHE)</div><div class="line">                    .build();</div><div class="line">        &#125;</div><div class="line">        Response response = chain.proceed(request);</div><div class="line">        <span class="keyword">if</span> (AppUtils.networkIsAvailable(DemoApplication.getContext())) &#123;</div><div class="line">            <span class="keyword">int</span> maxAge = <span class="number">0</span>;</div><div class="line">            <span class="comment">// 有网络时 设置缓存超时时间0个小时</span></div><div class="line">            response.newBuilder()</div><div class="line">                    .header(<span class="string">"Cache-Control"</span>, <span class="string">"public, max-age="</span> + maxAge)</div><div class="line">                    .removeHeader(<span class="string">"WuXiaolong"</span>)<span class="comment">// 清除头信息，因为服务器如果不支持，会返回一些干扰信息，不清除下面无法生效</span></div><div class="line">                    .build();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// 无网络时，设置超时为4周</span></div><div class="line">            <span class="keyword">int</span> maxStale = <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">28</span>;</div><div class="line">            response.newBuilder()</div><div class="line">                    .header(<span class="string">"Cache-Control"</span>, <span class="string">"public, only-if-cached, max-stale="</span> + maxStale)</div><div class="line">                    .removeHeader(<span class="string">"nyn"</span>)</div><div class="line">                    .build();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> response;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">builder.cache(cache).addInterceptor(cacheInterceptor);</div></pre></td></tr></table></figure></p>
<h2 id="公共参数"><a href="#公共参数" class="headerlink" title="公共参数"></a>公共参数</h2><p>可能接口有某些参数是公共的，不可能一个个接口都去加吧<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//公共参数</span></div><div class="line">Interceptor addQueryParameterInterceptor = <span class="keyword">new</span> Interceptor() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        Request originalRequest = chain.request();</div><div class="line">        Request request;</div><div class="line">        String method = originalRequest.method();</div><div class="line">        Headers headers = originalRequest.headers();</div><div class="line">        HttpUrl modifiedUrl = originalRequest.url().newBuilder()</div><div class="line">                <span class="comment">// Provide your custom parameter here</span></div><div class="line">                .addQueryParameter(<span class="string">"platform"</span>, <span class="string">"android"</span>)</div><div class="line">                .addQueryParameter(<span class="string">"version"</span>, <span class="string">"1.0.0"</span>)              </div><div class="line">                .build();</div><div class="line">        request = originalRequest.newBuilder().url(modifiedUrl).build();</div><div class="line">        <span class="keyword">return</span> chain.proceed(request);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="comment">//公共参数</span></div><div class="line">builder.addInterceptor(addQueryParameterInterceptor);</div></pre></td></tr></table></figure></p>
<h2 id="设置头"><a href="#设置头" class="headerlink" title="设置头"></a>设置头</h2><p>有的接口可能对请求头要设置<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Interceptor headerInterceptor = <span class="keyword">new</span> Interceptor() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        Request originalRequest = chain.request();</div><div class="line">        Request.Builder requestBuilder = originalRequest.newBuilder()</div><div class="line">                .header(<span class="string">"AppType"</span>, <span class="string">"TPOS"</span>)</div><div class="line">                .header(<span class="string">"Content-Type"</span>, <span class="string">"application/json"</span>)</div><div class="line">                .header(<span class="string">"Accept"</span>, <span class="string">"application/json"</span>)</div><div class="line">                .method(originalRequest.method(), originalRequest.body());</div><div class="line">        Request request = requestBuilder.build();</div><div class="line">        <span class="keyword">return</span> chain.proceed(request);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"><span class="comment">//设置头</span></div><div class="line">builder.addInterceptor(headerInterceptor );</div></pre></td></tr></table></figure></p>
<h2 id="设置cookie"><a href="#设置cookie" class="headerlink" title="设置cookie"></a>设置cookie</h2><p>服务端可能需要保持请求是同一个cookie，主要看各自需求<br>1、app/build.gradle<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">compile <span class="string">'com.squareup.okhttp3:okhttp-urlconnection:3.2.0'</span></div></pre></td></tr></table></figure></p>
<p>2、设置cookie<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">CookieManager cookieManager = <span class="keyword">new</span> CookieManager();</div><div class="line">cookieManager.setCookiePolicy(CookiePolicy.ACCEPT_ALL);</div><div class="line">builder.cookieJar(<span class="keyword">new</span> JavaNetCookieJar(cookieManager));</div></pre></td></tr></table></figure></p>
<h2 id="设置超时和重连"><a href="#设置超时和重连" class="headerlink" title="设置超时和重连"></a>设置超时和重连</h2><p>希望超时时能重连<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//设置超时</span></div><div class="line">builder.connectTimeout(<span class="number">15</span>, TimeUnit.SECONDS);</div><div class="line">builder.readTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</div><div class="line">builder.writeTimeout(<span class="number">20</span>, TimeUnit.SECONDS);</div><div class="line"><span class="comment">//错误重连</span></div><div class="line">builder.retryOnConnectionFailure(<span class="keyword">true</span>);</div></pre></td></tr></table></figure></p>
<p>最后将这些配置设置给retrofit：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">OkHttpClient okHttpClient = builder.build();</div><div class="line">Retrofit retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">        .baseUrl(ApiStores.API_SERVER_URL)</div><div class="line">        <span class="comment">//设置 Json 转换器</span></div><div class="line">        .addConverterFactory(GsonConverterFactory.create())</div><div class="line">        <span class="comment">//RxJava 适配器</span></div><div class="line">        .addCallAdapterFactory(RxJavaCallAdapterFactory.create())</div><div class="line">        .client(okHttpClient)</div><div class="line">        .build();</div></pre></td></tr></table></figure></p>
<h2 id="完整配置"><a href="#完整配置" class="headerlink" title="完整配置"></a>完整配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppClient</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Retrofit retrofit = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Retrofit <span class="title">retrofit</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (retrofit == <span class="keyword">null</span>) &#123;</div><div class="line">	         OkHttpClient.Builder builder = <span class="keyword">new</span> OkHttpClient.Builder();</div><div class="line">            <span class="comment">/**</span></div><div class="line">             *设置缓存，代码略</div><div class="line">             */</div><div class="line">                      </div><div class="line">            <span class="comment">/**</span></div><div class="line">             *  公共参数，代码略</div><div class="line">             */</div><div class="line">           </div><div class="line">            <span class="comment">/**</span></div><div class="line">             * 设置头，代码略</div><div class="line">             */           </div><div class="line">           </div><div class="line">			 <span class="comment">/**</span></div><div class="line">             * Log信息拦截器，代码略</div><div class="line">             */</div><div class="line">            </div><div class="line">			 <span class="comment">/**</span></div><div class="line">             * 设置cookie，代码略</div><div class="line">             */</div><div class="line">            </div><div class="line">             <span class="comment">/**</span></div><div class="line">             * 设置超时和重连，代码略</div><div class="line">             */</div><div class="line"></div><div class="line">            <span class="comment">//以上设置结束，才能build(),不然设置白搭</span></div><div class="line">            OkHttpClient okHttpClient = builder.build();</div><div class="line"></div><div class="line">            retrofit = <span class="keyword">new</span> Retrofit.Builder()</div><div class="line">                    .baseUrl(ApiStores.API_SERVER_URL)                  </div><div class="line">                    .client(okHttpClient)</div><div class="line">                    .build();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> retrofit;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="接口参数"><a href="#接口参数" class="headerlink" title="接口参数"></a>接口参数</h1><h2 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h2><p>类似这样链接：<a href="http://wuxiaolong.me/2016/01/15/retrofit/">http://wuxiaolong.me/2016/01/15/retrofit/</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GET</span>(<span class="string">"2016/01/15/&#123;retrofit&#125;"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">getData</span><span class="params">(@Path(<span class="string">"retrofit"</span>)</span> String retrofit)</span>;</div></pre></td></tr></table></figure></p>
<p>即您传的参数retrofit内容会替换大括号里的内容。</p>
<h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>类似这样链接：<a href="http://wuxiaolong.me/v1?ip=202.202.33.33&amp;name=WuXiaolong">http://wuxiaolong.me/v1?ip=202.202.33.33&amp;name=WuXiaolong</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GET</span>(<span class="string">"v1"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">getData</span><span class="params">(@Query(<span class="string">"ip"</span>)</span> String ip,@<span class="title">Query</span><span class="params">(<span class="string">"name"</span>)</span> String name)</span>;</div></pre></td></tr></table></figure></p>
<h2 id="Field"><a href="#Field" class="headerlink" title="Field"></a>Field</h2><p>表单提交，如登录<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@FormUrlEncoded</span></div><div class="line"><span class="meta">@POST</span>(<span class="string">"v1/login"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">userLogin</span><span class="params">(@Field(<span class="string">"phone"</span>)</span> String phone, @<span class="title">Field</span><span class="params">(<span class="string">"password"</span>)</span> String password)</span>;</div></pre></td></tr></table></figure></p>
<h2 id="传json格式"><a href="#传json格式" class="headerlink" title="传json格式"></a>传json格式</h2><p>如果参数是json格式，如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&#123;		</div><div class="line">    <span class="string">"apiInfo"</span>: &#123;		</div><div class="line">        <span class="string">"apiName"</span>: <span class="string">"WuXiaolong"</span>,		</div><div class="line">        <span class="string">"apiKey"</span>: <span class="string">"666"</span>		</div><div class="line">    &#125;		</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>建立Bean<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiInfo</span> </span>&#123;</div><div class="line">       <span class="keyword">private</span> ApiInfoBean apiInfo;</div><div class="line"></div><div class="line">       <span class="function"><span class="keyword">public</span> ApiInfoBean <span class="title">getApiInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">           <span class="keyword">return</span> apiInfo;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setApiInfo</span><span class="params">(ApiInfoBean apiInfo)</span> </span>&#123;</div><div class="line">           <span class="keyword">this</span>.apiInfo = apiInfo;</div><div class="line">       &#125;</div><div class="line"></div><div class="line">       <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiInfoBean</span> </span>&#123;</div><div class="line">           <span class="keyword">private</span> String apiName;</div><div class="line">           <span class="keyword">private</span> String apiKey;</div><div class="line">           <span class="comment">//省略get和set方法</span></div><div class="line">       &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p>
<p>ApiStores<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@POST</span>(<span class="string">"client/shipper/getCarType"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">getData</span><span class="params">(@Body ApiInfo apiInfo)</span></span>;</div><div class="line">```       </div><div class="line"></div><div class="line">代码调用</div><div class="line">```java</div><div class="line">ApiInfo apiInfo = <span class="keyword">new</span> ApiInfo();</div><div class="line">ApiInfo.ApiInfoBean apiInfoBean = apiInfo.new ApiInfoBean();</div><div class="line">apiInfoBean.setApiKey(<span class="string">"666"</span>);</div><div class="line">apiInfoBean.setApiName(<span class="string">"WuXiaolong"</span>);</div><div class="line">apiInfo.setApiInfo(apiInfoBean);</div><div class="line"><span class="comment">//调接口</span></div><div class="line">getData(apiInfo);</div></pre></td></tr></table></figure></p>
<h2 id="传数组"><a href="#传数组" class="headerlink" title="传数组"></a>传数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@GET</span>(<span class="string">"v1/enterprise/find"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">getData</span><span class="params">(@Query(<span class="string">"id"</span>)</span> String id, @<span class="title">Query</span><span class="params">(<span class="string">"linked[]"</span>)</span> String... linked)</span>;</div></pre></td></tr></table></figure>
<p>代码调用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">String id=<span class="string">"WuXiaolong"</span>；</div><div class="line">String[] s = <span class="keyword">new</span> String[]&#123;<span class="string">"WuXiaolong"</span>&#125;;</div><div class="line"><span class="comment">//调接口</span></div><div class="line">getData(id, s);</div></pre></td></tr></table></figure></p>
<h2 id="传文件-单个"><a href="#传文件-单个" class="headerlink" title="传文件-单个"></a>传文件-单个</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Multipart</span></div><div class="line"><span class="meta">@POST</span>(<span class="string">"v1/create"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">create</span><span class="params">(@Part(<span class="string">"pictureName"</span>)</span> RequestBody pictureName,  @Part MultipartBody.Part picture)</span>;</div></pre></td></tr></table></figure>
<p>代码调用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">RequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), <span class="string">"pictureName"</span>);</div><div class="line">File picture= <span class="keyword">new</span> File(path);</div><div class="line">RequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);</div><div class="line"><span class="comment">// MultipartBody.Part is used to send also the actual file name</span></div><div class="line">MultipartBody.Part picturePart = MultipartBody.Part.createFormData(<span class="string">"picture"</span>, picture.getName(), requestFile);</div><div class="line"><span class="comment">//调接口</span></div><div class="line">create(pictureNameBody, picturePart);</div></pre></td></tr></table></figure></p>
<h2 id="传文件-多个"><a href="#传文件-多个" class="headerlink" title="传文件-多个"></a>传文件-多个</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Multipart</span></div><div class="line"><span class="meta">@POST</span>(<span class="string">"v1/create"</span>)</div><div class="line"><span class="function">Call&lt;ResponseBody&gt; <span class="title">create</span><span class="params">(@Part(<span class="string">"pictureName"</span>)</span> RequestBody pictureName,   @PartMap Map&lt;String, RequestBody&gt; params)</span>;</div></pre></td></tr></table></figure>
<p>代码调用<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">RequestBody pictureNameBody = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), <span class="string">"pictureName"</span>);</div><div class="line">File picture= <span class="keyword">new</span> File(path);</div><div class="line">RequestBody requestFile = RequestBody.create(MediaType.parse(AppConstants.CONTENT_TYPE_FILE), picture);</div><div class="line">Map&lt;String, RequestBody&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</div><div class="line">params.put(<span class="string">"picture\"; filename=\""</span> + picture.getName() + <span class="string">""</span>, requestFile);</div><div class="line"><span class="comment">//调接口</span></div><div class="line">create(pictureNameBody, params);</div></pre></td></tr></table></figure></p>
<h1 id="微信公众号"><a href="#微信公众号" class="headerlink" title="微信公众号"></a>微信公众号</h1><p>我的微信公众号：吴小龙同学，不止于技术分享，每天进步一点点，欢迎微信扫一扫关注。<br><img src="http://7q5c2h.com1.z0.glb.clouddn.com/qrcode_wuxiaolong.jpg" alt=""></p>
<h1 id="关于作者"><a href="#关于作者" class="headerlink" title="关于作者"></a>关于作者</h1><p><a href="http://wuxiaolong.me/about/">点击查看</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;推荐阅读，猛戳：&lt;br&gt;1、&lt;a href=&quot;http://wuxiaolong.me/2015/09/23/AndroidMVPSample/&quot;&gt;Android MVP 实例&lt;/a&gt;&lt;br&gt;2、&lt;a href=&quot;http://wuxiaolong.me/2016/01/15/retrofit/&quot;&gt;Android Retrofit 2.0使用&lt;/a&gt;&lt;br&gt;3、&lt;a href=&quot;http://wuxiaolong.me/2016/01/18/rxjava/&quot;&gt;RxJava&lt;/a&gt;&lt;br&gt;4、&lt;a href=&quot;http://wuxiaolong.me/2016/04/07/rxbus/&quot;&gt;RxBus&lt;/a&gt;&lt;br&gt;5、&lt;a href=&quot;http://wuxiaolong.me/2016/06/12/mvpRetrofitRxjava/&quot;&gt;Android MVP+Retrofit+RxJava实践小结&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前分享的&lt;a href=&quot;http://wuxiaolong.me/2016/01/15/retrofit/&quot;&gt;Android Retrofit 2.0 使用&lt;/a&gt;，属于基本的使用，实际开发还远远不够，因此对其补充，主要在Retrofit配置和接口参数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Retrofit" scheme="http://wuxiaolong.me/categories/Retrofit/"/>
    
    
      <category term="Retrofit" scheme="http://wuxiaolong.me/tags/Retrofit/"/>
    
  </entry>
  
</feed>
